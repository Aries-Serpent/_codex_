[INFO] Initializing environment for https://github.com/astral-sh/ruff-pre-commit.
[INFO] Initializing environment for https://github.com/psf/black.
[INFO] Initializing environment for https://github.com/pycqa/isort.
[WARNING] repo `https://github.com/pycqa/isort` uses deprecated stage names (commit, merge-commit, push) which will be removed in a future version.  Hint: often `pre-commit autoupdate --repo https://github.com/pycqa/isort` will fix this.  if it does not -- consider reporting an issue to that repo.
[INFO] Initializing environment for https://github.com/pre-commit/pre-commit-hooks.
[WARNING] repo `https://github.com/pre-commit/pre-commit-hooks` uses deprecated stage names (commit, push) which will be removed in a future version.  Hint: often `pre-commit autoupdate --repo https://github.com/pre-commit/pre-commit-hooks` will fix this.  if it does not -- consider reporting an issue to that repo.
[INFO] Initializing environment for https://github.com/PyCQA/bandit.
[INFO] Initializing environment for https://github.com/Yelp/detect-secrets.
[INFO] Initializing environment for https://github.com/Lucas-C/pre-commit-hooks-safety.
[INFO] Initializing environment for https://github.com/pypa/pip-audit.
[INFO] Installing environment for https://github.com/astral-sh/ruff-pre-commit.
[INFO] Once installed this environment will be reused.
[INFO] This may take a few minutes...
[INFO] Installing environment for https://github.com/psf/black.
[INFO] Once installed this environment will be reused.
[INFO] This may take a few minutes...
[INFO] Installing environment for https://github.com/pycqa/isort.
[INFO] Once installed this environment will be reused.
[INFO] This may take a few minutes...
[INFO] Installing environment for https://github.com/pre-commit/pre-commit-hooks.
[INFO] Once installed this environment will be reused.
[INFO] This may take a few minutes...
[INFO] Installing environment for https://github.com/PyCQA/bandit.
[INFO] Once installed this environment will be reused.
[INFO] This may take a few minutes...
[INFO] Installing environment for https://github.com/Yelp/detect-secrets.
[INFO] Once installed this environment will be reused.
[INFO] This may take a few minutes...
[INFO] Installing environment for https://github.com/Lucas-C/pre-commit-hooks-safety.
[INFO] Once installed this environment will be reused.
[INFO] This may take a few minutes...
[INFO] Installing environment for https://github.com/pypa/pip-audit.
[INFO] Once installed this environment will be reused.
[INFO] This may take a few minutes...
ruff.....................................................................Failed
- hook id: ruff
- exit code: 1
- files were modified by this hook

codex_ast_upgrade.py:29:1: E731 Do not assign a `lambda` expression, use a `def`
   |
27 | from pathlib import Path
28 | 
29 | TS = lambda: datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E731
30 | 
31 | # --------- utils ----------
   |
   = help: Rewrite `TS` as a `def`

codex_digest/pipeline.py:28:9: F841 Local variable `tokens` is assigned to but never used
   |
26 |     def run(self, context: str, description: str, dry_run: bool = True) -> PipelineOutput:
27 |         x0 = self.tk.normalize(context + " " + description)
28 |         tokens = self.tk.tokenize(x0)
   |         ^^^^^^ F841
29 | 
30 |         pr = self.sp.parse(x0)
   |
   = help: Remove assignment to unused variable `tokens`

codex_digest/semparser.py:35:9: F841 Local variable `signals` is assigned to but never used
   |
34 |     def parse(self, text: str) -> ParseResult:
35 |         signals = Counter()
   |         ^^^^^^^ F841
36 |         intents: List[Intent] = []
37 |         entities: List[str] = []
   |
   = help: Remove assignment to unused variable `signals`

codex_digest/workflow.py:21:5: F841 Local variable `idx` is assigned to but never used
   |
20 | def compose_workflow(actions) -> Plan:
21 |     idx = {a.kind: i for i, a in enumerate(actions)}
   |     ^^^ F841
22 |     steps: List[PlanStep] = []
23 |     for a in actions:
   |
   = help: Remove assignment to unused variable `idx`

codex_script.py:184:35: SyntaxError: Expected an expression
    |
182 |     torch, nn = None, None  # type: ignore
183 | 
184 | _REGISTRY: Dict[str, Callable] = {}
    |                                   ^
    |

codex_script.py:241:8: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
239 | # NOTE: CODEX_PEFT_ADAPTER
240 | def apply_lora(model, cfg: dict | None = None):
241 |     """Attach LoRA adapters via `peft` when available.
    |        ^
242 | 
243 |     Parameters
    |

codex_script.py:241:15: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
239 | # NOTE: CODEX_PEFT_ADAPTER
240 | def apply_lora(model, cfg: dict | None = None):
241 |     """Attach LoRA adapters via `peft` when available.
    |               ^
242 | 
243 |     Parameters
    |

codex_script.py:241:20: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
239 | # NOTE: CODEX_PEFT_ADAPTER
240 | def apply_lora(model, cfg: dict | None = None):
241 |     """Attach LoRA adapters via `peft` when available.
    |                    ^
242 | 
243 |     Parameters
    |

codex_script.py:241:29: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
239 | # NOTE: CODEX_PEFT_ADAPTER
240 | def apply_lora(model, cfg: dict | None = None):
241 |     """Attach LoRA adapters via `peft` when available.
    |                             ^
242 | 
243 |     Parameters
    |

codex_script.py:241:33: SyntaxError: Got unexpected token `
    |
239 | # NOTE: CODEX_PEFT_ADAPTER
240 | def apply_lora(model, cfg: dict | None = None):
241 |     """Attach LoRA adapters via `peft` when available.
    |                                 ^
242 | 
243 |     Parameters
    |

codex_script.py:241:38: SyntaxError: Got unexpected token `
    |
239 | # NOTE: CODEX_PEFT_ADAPTER
240 | def apply_lora(model, cfg: dict | None = None):
241 |     """Attach LoRA adapters via `peft` when available.
    |                                      ^
242 | 
243 |     Parameters
    |

codex_script.py:241:45: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
239 | # NOTE: CODEX_PEFT_ADAPTER
240 | def apply_lora(model, cfg: dict | None = None):
241 |     """Attach LoRA adapters via `peft` when available.
    |                                             ^
242 | 
243 |     Parameters
    |

codex_script.py:241:55: SyntaxError: Expected an identifier
    |
239 | # NOTE: CODEX_PEFT_ADAPTER
240 | def apply_lora(model, cfg: dict | None = None):
241 |     """Attach LoRA adapters via `peft` when available.
    |                                                       ^
242 | 
243 |     Parameters
244 |     ----------
    |

codex_script.py:243:1: SyntaxError: Unexpected indentation
    |
241 |     """Attach LoRA adapters via `peft` when available.
242 | 
243 |     Parameters
    | ^
244 |     ----------
245 |     model:
    |

codex_script.py:244:15: SyntaxError: Expected an expression
    |
243 |     Parameters
244 |     ----------
    |               ^
245 |     model:
246 |         The target model to be wrapped.
247 |     cfg:
    |

codex_script.py:245:11: SyntaxError: Expected an expression
    |
243 |     Parameters
244 |     ----------
245 |     model:
    |           ^
246 |         The target model to be wrapped.
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
    |

codex_script.py:246:1: SyntaxError: Unexpected indentation
    |
244 |     ----------
245 |     model:
246 |         The target model to be wrapped.
    | ^
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
    |

codex_script.py:246:13: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
244 |     ----------
245 |     model:
246 |         The target model to be wrapped.
    |             ^
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
    |

codex_script.py:246:20: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
244 |     ----------
245 |     model:
246 |         The target model to be wrapped.
    |                    ^
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
    |

codex_script.py:246:26: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
244 |     ----------
245 |     model:
246 |         The target model to be wrapped.
    |                          ^
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
    |

codex_script.py:246:29: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
244 |     ----------
245 |     model:
246 |         The target model to be wrapped.
    |                             ^
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
    |

codex_script.py:246:32: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
244 |     ----------
245 |     model:
246 |         The target model to be wrapped.
    |                                ^
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
    |

codex_script.py:246:40: SyntaxError: Expected an identifier
    |
244 |     ----------
245 |     model:
246 |         The target model to be wrapped.
    |                                        ^
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
249 |         returned unchanged. This mirrors the behavior of the library's internal
    |

codex_script.py:247:5: SyntaxError: Expected a statement
    |
245 |     model:
246 |         The target model to be wrapped.
247 |     cfg:
    |     ^
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
249 |         returned unchanged. This mirrors the behavior of the library's internal
    |

codex_script.py:247:9: SyntaxError: Expected an expression
    |
245 |     model:
246 |         The target model to be wrapped.
247 |     cfg:
    |         ^
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
249 |         returned unchanged. This mirrors the behavior of the library's internal
250 |         adapter used in tests.
    |

codex_script.py:248:1: SyntaxError: Unexpected indentation
    |
246 |         The target model to be wrapped.
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
    | ^
249 |         returned unchanged. This mirrors the behavior of the library's internal
250 |         adapter used in tests.
    |

codex_script.py:248:11: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
246 |         The target model to be wrapped.
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
    |           ^
249 |         returned unchanged. This mirrors the behavior of the library's internal
250 |         adapter used in tests.
    |

codex_script.py:248:19: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
246 |         The target model to be wrapped.
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
    |                   ^
249 |         returned unchanged. This mirrors the behavior of the library's internal
250 |         adapter used in tests.
    |

codex_script.py:248:22: SyntaxError: Got unexpected token `
    |
246 |         The target model to be wrapped.
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
    |                      ^
249 |         returned unchanged. This mirrors the behavior of the library's internal
250 |         adapter used in tests.
    |

codex_script.py:248:33: SyntaxError: Got unexpected token `
    |
246 |         The target model to be wrapped.
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
    |                                 ^
249 |         returned unchanged. This mirrors the behavior of the library's internal
250 |         adapter used in tests.
    |

codex_script.py:248:49: SyntaxError: Got unexpected token `
    |
246 |         The target model to be wrapped.
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
    |                                                 ^
249 |         returned unchanged. This mirrors the behavior of the library's internal
250 |         adapter used in tests.
    |

codex_script.py:248:50: SyntaxError: Got unexpected token `
    |
246 |         The target model to be wrapped.
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
    |                                                  ^
249 |         returned unchanged. This mirrors the behavior of the library's internal
250 |         adapter used in tests.
    |

codex_script.py:248:55: SyntaxError: Got unexpected token `
    |
246 |         The target model to be wrapped.
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
    |                                                       ^
249 |         returned unchanged. This mirrors the behavior of the library's internal
250 |         adapter used in tests.
    |

codex_script.py:248:56: SyntaxError: Got unexpected token `
    |
246 |         The target model to be wrapped.
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
    |                                                        ^
249 |         returned unchanged. This mirrors the behavior of the library's internal
250 |         adapter used in tests.
    |

codex_script.py:248:58: SyntaxError: Expected a statement
    |
246 |         The target model to be wrapped.
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
    |                                                          ^
249 |         returned unchanged. This mirrors the behavior of the library's internal
250 |         adapter used in tests.
    |

codex_script.py:248:72: SyntaxError: Expected ',', found name
    |
246 |         The target model to be wrapped.
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
    |                                                                        ^
249 |         returned unchanged. This mirrors the behavior of the library's internal
250 |         adapter used in tests.
    |

codex_script.py:248:80: SyntaxError: Expected an expression
    |
246 |         The target model to be wrapped.
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
    |                                                                                ^
249 |         returned unchanged. This mirrors the behavior of the library's internal
250 |         adapter used in tests.
    |

codex_script.py:249:18: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
249 |         returned unchanged. This mirrors the behavior of the library's internal
    |                  ^
250 |         adapter used in tests.
    |

codex_script.py:249:34: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
249 |         returned unchanged. This mirrors the behavior of the library's internal
    |                                  ^
250 |         adapter used in tests.
    |

codex_script.py:249:42: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
249 |         returned unchanged. This mirrors the behavior of the library's internal
    |                                          ^
250 |         adapter used in tests.
    |

codex_script.py:249:46: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
249 |         returned unchanged. This mirrors the behavior of the library's internal
    |                                              ^
250 |         adapter used in tests.
    |

codex_script.py:249:55: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
249 |         returned unchanged. This mirrors the behavior of the library's internal
    |                                                       ^
250 |         adapter used in tests.
    |

codex_script.py:249:58: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
249 |         returned unchanged. This mirrors the behavior of the library's internal
    |                                                          ^
250 |         adapter used in tests.
    |

codex_script.py:249:62: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
249 |         returned unchanged. This mirrors the behavior of the library's internal
    |                                                              ^
250 |         adapter used in tests.
    |

codex_script.py:249:69: SyntaxError: missing closing quote in string literal
    |
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
249 |         returned unchanged. This mirrors the behavior of the library's internal
    |                                                                     ^
250 |         adapter used in tests.
    |

codex_script.py:249:80: SyntaxError: Expected a statement
    |
247 |     cfg:
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
249 |         returned unchanged. This mirrors the behavior of the library's internal
    |                                                                                ^
250 |         adapter used in tests.
251 | 
252 |     Returns
    |

codex_script.py:250:17: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
249 |         returned unchanged. This mirrors the behavior of the library's internal
250 |         adapter used in tests.
    |                 ^
251 | 
252 |     Returns
    |

codex_script.py:250:31: SyntaxError: Expected an identifier
    |
248 |         A mapping of `LoraConfig` arguments. If ``None`` or empty, the model is
249 |         returned unchanged. This mirrors the behavior of the library's internal
250 |         adapter used in tests.
    |                               ^
251 | 
252 |     Returns
253 |     -------
    |

codex_script.py:252:5: SyntaxError: Expected a statement
    |
250 |         adapter used in tests.
251 | 
252 |     Returns
    |     ^
253 |     -------
254 |     The model wrapped with LoRA adapters when possible; otherwise the original
    |

codex_script.py:253:12: SyntaxError: Expected an expression
    |
252 |     Returns
253 |     -------
    |            ^
254 |     The model wrapped with LoRA adapters when possible; otherwise the original
255 |     model.
256 |     """
    |

codex_script.py:254:9: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
252 |     Returns
253 |     -------
254 |     The model wrapped with LoRA adapters when possible; otherwise the original
    |         ^
255 |     model.
256 |     """
    |

codex_script.py:254:15: SyntaxError: Simple statements must be separated by newlines or semicolons
    |
252 |     Returns
253 |     -------
254 |     The model wrapped with LoRA adapters when possible; otherwise the original
    |               ^
255 |     model.
256 |     """
    |

codex_script.py:254:23: SyntaxError: Compound statements are not allowed on the same line as simple statements
    |
252 |     Returns
253 |     -------
254 |     The model wrapped with LoRA adapters when possible; otherwise the original
    |                       ^
255 |     model.
256 |     """
    |

codex_script.py:254:33: SyntaxError: Expected ',', found name
    |
252 |     Returns
253 |     -------
254 |     The model wrapped with LoRA adapters when possible; otherwise the original
    |                                 ^
255 |     model.
256 |     """
    |

codex_script.py:254:42: SyntaxError: Expected ',', found name
    |
252 |     Returns
253 |     -------
254 |     The model wrapped with LoRA adapters when possible; otherwise the original
    |                                          ^
255 |     model.
256 |     """
    |

codex_script.py:254:47: SyntaxError: Expected ',', found name
    |
252 |     Returns
253 |     -------
254 |     The model wrapped with LoRA adapters when possible; otherwise the original
    |                                               ^
255 |     model.
256 |     """
    |

codex_script.py:254:55: SyntaxError: Expected ',', found ';'
    |
252 |     Returns
253 |     -------
254 |     The model wrapped with LoRA adapters when possible; otherwise the original
    |                                                       ^
255 |     model.
256 |     """
    |

codex_script.py:254:55: E702 Multiple statements on one line (semicolon)
    |
252 |     Returns
253 |     -------
254 |     The model wrapped with LoRA adapters when possible; otherwise the original
    |                                                       ^ E702
255 |     model.
256 |     """
    |

codex_script.py:254:67: SyntaxError: Expected ',', found name
    |
252 |     Returns
253 |     -------
254 |     The model wrapped with LoRA adapters when possible; otherwise the original
    |                                                                   ^
255 |     model.
256 |     """
    |

codex_script.py:254:71: SyntaxError: Expected ',', found name
    |
252 |     Returns
253 |     -------
254 |     The model wrapped with LoRA adapters when possible; otherwise the original
    |                                                                       ^
255 |     model.
256 |     """
    |

codex_script.py:254:79: SyntaxError: Expected ',', found newline
    |
252 |     Returns
253 |     -------
254 |     The model wrapped with LoRA adapters when possible; otherwise the original
    |                                                                               ^
255 |     model.
256 |     """
257 |     try:  # pragma: no cover - exercised via unit tests with optional deps
    |

codex_script.py:255:11: SyntaxError: Expected an identifier
    |
253 |     -------
254 |     The model wrapped with LoRA adapters when possible; otherwise the original
255 |     model.
    |           ^
256 |     """
257 |     try:  # pragma: no cover - exercised via unit tests with optional deps
258 |         from peft import LoraConfig, get_peft_model  # type: ignore
    |

codex_script.py:266:4: SyntaxError: Expected ',', found newline
    |
264 |         return model
265 | # END: CODEX_PEFT_ADAPTER
266 | """
    |    ^
267 | 
268 | # ---------- Training ----------
269 | CB_SENT = "# BEGIN: CODEX_TRAINING_CALLBACKS"
    |

codex_script.py:269:1: SyntaxError: Expected ',', found dedent
    |
268 | # ---------- Training ----------
269 | CB_SENT = "# BEGIN: CODEX_TRAINING_CALLBACKS"
    | ^
270 | CB_CODE = f"""{CB_SENT}
271 | from __future__ import annotations
    |

codex_script.py:269:9: SyntaxError: Expected ',', found '='
    |
268 | # ---------- Training ----------
269 | CB_SENT = "# BEGIN: CODEX_TRAINING_CALLBACKS"
    |         ^
270 | CB_CODE = f"""{CB_SENT}
271 | from __future__ import annotations
    |

codex_script.py:269:46: SyntaxError: Expected ',', found newline
    |
268 | # ---------- Training ----------
269 | CB_SENT = "# BEGIN: CODEX_TRAINING_CALLBACKS"
    |                                              ^
270 | CB_CODE = f"""{CB_SENT}
271 | from __future__ import annotations
    |

codex_script.py:270:9: SyntaxError: Expected ',', found '='
    |
268 | # ---------- Training ----------
269 | CB_SENT = "# BEGIN: CODEX_TRAINING_CALLBACKS"
270 | CB_CODE = f"""{CB_SENT}
    |         ^
271 | from __future__ import annotations
    |

codex_script.py:287:4: SyntaxError: Expected ',', found newline
    |
285 |         return self.bad > self.patience
286 | # END: CODEX_TRAINING_CALLBACKS
287 | """
    |    ^
288 | TRAIN_DOC_SENT = "<!-- BEGIN: CODEX_TRAIN_ARGS_DOC -->"
289 | TRAIN_DOC = f"""{TRAIN_DOC_SENT}
290 | # Training Arguments (YAML/Hydra)
    |

codex_script.py:288:16: SyntaxError: Expected ',', found '='
    |
286 | # END: CODEX_TRAINING_CALLBACKS
287 | """
288 | TRAIN_DOC_SENT = "<!-- BEGIN: CODEX_TRAIN_ARGS_DOC -->"
    |                ^
289 | TRAIN_DOC = f"""{TRAIN_DOC_SENT}
290 | # Training Arguments (YAML/Hydra)
    |

codex_script.py:288:56: SyntaxError: Expected ',', found newline
    |
286 | # END: CODEX_TRAINING_CALLBACKS
287 | """
288 | TRAIN_DOC_SENT = "<!-- BEGIN: CODEX_TRAIN_ARGS_DOC -->"
    |                                                        ^
289 | TRAIN_DOC = f"""{TRAIN_DOC_SENT}
290 | # Training Arguments (YAML/Hydra)
    |

codex_script.py:289:11: SyntaxError: Expected ',', found '='
    |
287 | """
288 | TRAIN_DOC_SENT = "<!-- BEGIN: CODEX_TRAIN_ARGS_DOC -->"
289 | TRAIN_DOC = f"""{TRAIN_DOC_SENT}
    |           ^
290 | # Training Arguments (YAML/Hydra)
    |

codex_script.py:294:4: SyntaxError: Expected ',', found newline
    |
292 | - **gradient_accumulation_steps**: accumulate before optimizer step.
293 | - **early_stopping**: enable with patience/min_delta; wire to callbacks.EarlyStopping in your trainer loop.
294 | """
    |    ^
295 | 
296 | # ---------- Config (Hydra) ----------
297 | HYDRA_DOC_SENT = "<!-- BEGIN: CODEX_HYDRA_DISTRIBUTED_OVERRIDES -->"
    |

codex_script.py:297:16: SyntaxError: Expected ',', found '='
    |
296 | # ---------- Config (Hydra) ----------
297 | HYDRA_DOC_SENT = "<!-- BEGIN: CODEX_HYDRA_DISTRIBUTED_OVERRIDES -->"
    |                ^
298 | HYDRA_DOC = f"""{HYDRA_DOC_SENT}
299 | # Hydra Distributed Overrides
    |

codex_script.py:297:69: SyntaxError: Expected ',', found newline
    |
296 | # ---------- Config (Hydra) ----------
297 | HYDRA_DOC_SENT = "<!-- BEGIN: CODEX_HYDRA_DISTRIBUTED_OVERRIDES -->"
    |                                                                     ^
298 | HYDRA_DOC = f"""{HYDRA_DOC_SENT}
299 | # Hydra Distributed Overrides
    |

codex_script.py:298:11: SyntaxError: Expected ',', found '='
    |
296 | # ---------- Config (Hydra) ----------
297 | HYDRA_DOC_SENT = "<!-- BEGIN: CODEX_HYDRA_DISTRIBUTED_OVERRIDES -->"
298 | HYDRA_DOC = f"""{HYDRA_DOC_SENT}
    |           ^
299 | # Hydra Distributed Overrides
    |

codex_script.py:321:4: SyntaxError: Expected ',', found newline
    |
319 | Copy
320 | Edit
321 | """
    |    ^
322 | 
323 | # ---------- Evaluation ----------
324 | CURVE_SENT = "# BEGIN: CODEX_METRIC_CURVES"
    |

codex_script.py:324:12: SyntaxError: Expected ',', found '='
    |
323 | # ---------- Evaluation ----------
324 | CURVE_SENT = "# BEGIN: CODEX_METRIC_CURVES"
    |            ^
325 | CURVE_CODE = f"""{CURVE_SENT}
326 | from __future__ import annotations
    |

codex_script.py:324:44: SyntaxError: Expected ',', found newline
    |
323 | # ---------- Evaluation ----------
324 | CURVE_SENT = "# BEGIN: CODEX_METRIC_CURVES"
    |                                            ^
325 | CURVE_CODE = f"""{CURVE_SENT}
326 | from __future__ import annotations
327 | import json
    |

codex_script.py:325:12: SyntaxError: Expected ',', found '='
    |
323 | # ---------- Evaluation ----------
324 | CURVE_SENT = "# BEGIN: CODEX_METRIC_CURVES"
325 | CURVE_CODE = f"""{CURVE_SENT}
    |            ^
326 | from __future__ import annotations
327 | import json
    |

codex_script.py:348:4: SyntaxError: Expected ',', found newline
    |
346 |     return {"count": len(vals), "mean": (st.mean(vals) if vals else 0.0)}
347 | # END: CODEX_METRIC_CURVES
348 | """
    |    ^
349 | CURVE_TEST_SENT = "# BEGIN: CODEX_TEST_CURVES"
350 | CURVE_TEST = f"""{CURVE_TEST_SENT}
351 | from pathlib import Path
    |

codex_script.py:349:17: SyntaxError: Expected ',', found '='
    |
347 | # END: CODEX_METRIC_CURVES
348 | """
349 | CURVE_TEST_SENT = "# BEGIN: CODEX_TEST_CURVES"
    |                 ^
350 | CURVE_TEST = f"""{CURVE_TEST_SENT}
351 | from pathlib import Path
    |

codex_script.py:349:47: SyntaxError: Expected ',', found newline
    |
347 | # END: CODEX_METRIC_CURVES
348 | """
349 | CURVE_TEST_SENT = "# BEGIN: CODEX_TEST_CURVES"
    |                                               ^
350 | CURVE_TEST = f"""{CURVE_TEST_SENT}
351 | from pathlib import Path
352 | from codex_ml.metrics.curves import append_curve, summarize
    |

codex_script.py:350:12: SyntaxError: Expected ',', found '='
    |
348 | """
349 | CURVE_TEST_SENT = "# BEGIN: CODEX_TEST_CURVES"
350 | CURVE_TEST = f"""{CURVE_TEST_SENT}
    |            ^
351 | from pathlib import Path
352 | from codex_ml.metrics.curves import append_curve, summarize
    |

codex_script.py:361:4: SyntaxError: Expected ',', found newline
    |
359 |     assert s["count"] == 5 and s["mean"] > 0
360 | # END: CODEX_TEST_CURVES
361 | """
    |    ^
362 | 
363 | # ---------- Monitoring ----------
364 | PROM_SENT = "# BEGIN: CODEX_PROMETHEUS"
    |

codex_script.py:364:11: SyntaxError: Expected ',', found '='
    |
363 | # ---------- Monitoring ----------
364 | PROM_SENT = "# BEGIN: CODEX_PROMETHEUS"
    |           ^
365 | PROM_CODE = f"""{PROM_SENT}
366 | from __future__ import annotations
    |

codex_script.py:364:40: SyntaxError: Expected ',', found newline
    |
363 | # ---------- Monitoring ----------
364 | PROM_SENT = "# BEGIN: CODEX_PROMETHEUS"
    |                                        ^
365 | PROM_CODE = f"""{PROM_SENT}
366 | from __future__ import annotations
    |

codex_script.py:365:11: SyntaxError: Expected ',', found '='
    |
363 | # ---------- Monitoring ----------
364 | PROM_SENT = "# BEGIN: CODEX_PROMETHEUS"
365 | PROM_CODE = f"""{PROM_SENT}
    |           ^
366 | from __future__ import annotations
    |

codex_script.py:379:4: SyntaxError: Expected ',', found newline
    |
377 |     return counters, gauges
378 | # END: CODEX_PROMETHEUS
379 | """
    |    ^
380 | 
381 | # ---------- Checkpointing ----------
382 | SHA_SENT = "# BEGIN: CODEX_CHECKSUMS"
    |

codex_script.py:382:10: SyntaxError: Expected ',', found '='
    |
381 | # ---------- Checkpointing ----------
382 | SHA_SENT = "# BEGIN: CODEX_CHECKSUMS"
    |          ^
383 | SHA_CODE = f"""{SHA_SENT}
384 | from __future__ import annotations
    |

codex_script.py:382:38: SyntaxError: Expected ',', found newline
    |
381 | # ---------- Checkpointing ----------
382 | SHA_SENT = "# BEGIN: CODEX_CHECKSUMS"
    |                                      ^
383 | SHA_CODE = f"""{SHA_SENT}
384 | from __future__ import annotations
385 | import hashlib, os
    |

codex_script.py:383:10: SyntaxError: Expected ',', found '='
    |
381 | # ---------- Checkpointing ----------
382 | SHA_SENT = "# BEGIN: CODEX_CHECKSUMS"
383 | SHA_CODE = f"""{SHA_SENT}
    |          ^
384 | from __future__ import annotations
385 | import hashlib, os
    |

codex_script.py:402:4: SyntaxError: Expected ',', found newline
    |
400 |     (path/"checksum.sha256").write_text(sha256_dir(path))
401 | # END: CODEX_CHECKSUMS
402 | """
    |    ^
403 | 
404 | # ---------- Data ----------
405 | CACHE_SENT = "# BEGIN: CODEX_DATA_CACHE"
    |

codex_script.py:405:12: SyntaxError: Expected ',', found '='
    |
404 | # ---------- Data ----------
405 | CACHE_SENT = "# BEGIN: CODEX_DATA_CACHE"
    |            ^
406 | CACHE_CODE = f"""{CACHE_SENT}
407 | from __future__ import annotations
    |

codex_script.py:405:41: SyntaxError: Expected ',', found newline
    |
404 | # ---------- Data ----------
405 | CACHE_SENT = "# BEGIN: CODEX_DATA_CACHE"
    |                                         ^
406 | CACHE_CODE = f"""{CACHE_SENT}
407 | from __future__ import annotations
408 | import time
    |

codex_script.py:406:12: SyntaxError: Expected ',', found '='
    |
404 | # ---------- Data ----------
405 | CACHE_SENT = "# BEGIN: CODEX_DATA_CACHE"
406 | CACHE_CODE = f"""{CACHE_SENT}
    |            ^
407 | from __future__ import annotations
408 | import time
    |

codex_script.py:414:20: SyntaxError: Expected an expression
    |
412 |     def __init__(self, ttl_s: int = 3600, max_items: int = 1000):
413 |         self.ttl, self.max = ttl_s, max_items
414 |         self._d = {}
    |                    ^
415 | 
416 |     def get(self, k):
    |

codex_script.py:431:4: SyntaxError: Expected ',', found newline
    |
429 |         self._d[k] = (val, time.time())
430 | # END: CODEX_DATA_CACHE
431 | """
    |    ^
432 | SHARD_SENT = "# BEGIN: CODEX_DATA_SHARD"
433 | SHARD_CODE = f"""{SHARD_SENT}
434 | from __future__ import annotations
    |

codex_script.py:432:12: SyntaxError: Expected ',', found '='
    |
430 | # END: CODEX_DATA_CACHE
431 | """
432 | SHARD_SENT = "# BEGIN: CODEX_DATA_SHARD"
    |            ^
433 | SHARD_CODE = f"""{SHARD_SENT}
434 | from __future__ import annotations
    |

codex_script.py:432:41: SyntaxError: Expected ',', found newline
    |
430 | # END: CODEX_DATA_CACHE
431 | """
432 | SHARD_SENT = "# BEGIN: CODEX_DATA_SHARD"
    |                                         ^
433 | SHARD_CODE = f"""{SHARD_SENT}
434 | from __future__ import annotations
    |

codex_script.py:433:12: SyntaxError: Expected ',', found '='
    |
431 | """
432 | SHARD_SENT = "# BEGIN: CODEX_DATA_SHARD"
433 | SHARD_CODE = f"""{SHARD_SENT}
    |            ^
434 | from __future__ import annotations
    |

codex_script.py:444:4: SyntaxError: Expected ',', found newline
    |
442 |     return start, end
443 | # END: CODEX_DATA_SHARD
444 | """
    |    ^
445 | DATA_TEST_SENT = "# BEGIN: CODEX_TEST_DATA_CACHE_SHARD"
446 | DATA_TEST = f"""{DATA_TEST_SENT}
447 | from codex_ml.data.sharding import shard_range
    |

codex_script.py:445:16: SyntaxError: Expected ',', found '='
    |
443 | # END: CODEX_DATA_SHARD
444 | """
445 | DATA_TEST_SENT = "# BEGIN: CODEX_TEST_DATA_CACHE_SHARD"
    |                ^
446 | DATA_TEST = f"""{DATA_TEST_SENT}
447 | from codex_ml.data.sharding import shard_range
    |

codex_script.py:445:56: SyntaxError: Expected ',', found newline
    |
443 | # END: CODEX_DATA_SHARD
444 | """
445 | DATA_TEST_SENT = "# BEGIN: CODEX_TEST_DATA_CACHE_SHARD"
    |                                                        ^
446 | DATA_TEST = f"""{DATA_TEST_SENT}
447 | from codex_ml.data.sharding import shard_range
    |

codex_script.py:446:11: SyntaxError: Expected ',', found '='
    |
444 | """
445 | DATA_TEST_SENT = "# BEGIN: CODEX_TEST_DATA_CACHE_SHARD"
446 | DATA_TEST = f"""{DATA_TEST_SENT}
    |           ^
447 | from codex_ml.data.sharding import shard_range
    |

codex_script.py:458:4: SyntaxError: Expected ',', found newline
    |
456 |     assert len(cov) == n
457 | # END: CODEX_TEST_DATA_CACHE_SHARD
458 | """
    |    ^
459 | 
460 | # ---------- Security ----------
461 | RISK_SENT = "# BEGIN: CODEX_RISK_SCORE"
    |

codex_script.py:461:11: SyntaxError: Expected ',', found '='
    |
460 | # ---------- Security ----------
461 | RISK_SENT = "# BEGIN: CODEX_RISK_SCORE"
    |           ^
462 | RISK_CODE = f"""{RISK_SENT}
463 | from __future__ import annotations
    |

codex_script.py:461:40: SyntaxError: Expected ',', found newline
    |
460 | # ---------- Security ----------
461 | RISK_SENT = "# BEGIN: CODEX_RISK_SCORE"
    |                                        ^
462 | RISK_CODE = f"""{RISK_SENT}
463 | from __future__ import annotations
    |

codex_script.py:462:11: SyntaxError: Expected ',', found '='
    |
460 | # ---------- Security ----------
461 | RISK_SENT = "# BEGIN: CODEX_RISK_SCORE"
462 | RISK_CODE = f"""{RISK_SENT}
    |           ^
463 | from __future__ import annotations
    |

codex_script.py:476:4: SyntaxError: Expected ',', found newline
    |
474 |     return float(score)
475 | # END: CODEX_RISK_SCORE
476 | """
    |    ^
477 | 
478 | # ---------- CI (disabled) ----------
479 | NIGHTLY_SENT = "# BEGIN: CODEX_NIGHTLY_DISABLED"
    |

codex_script.py:479:14: SyntaxError: Expected ',', found '='
    |
478 | # ---------- CI (disabled) ----------
479 | NIGHTLY_SENT = "# BEGIN: CODEX_NIGHTLY_DISABLED"
    |              ^
480 | NIGHTLY = f"""{NIGHTLY_SENT}
481 | # Disabled workflow placeholder — enable by renaming to nightly.yml and reviewing triggers.
    |

codex_script.py:479:49: SyntaxError: Expected ',', found newline
    |
478 | # ---------- CI (disabled) ----------
479 | NIGHTLY_SENT = "# BEGIN: CODEX_NIGHTLY_DISABLED"
    |                                                 ^
480 | NIGHTLY = f"""{NIGHTLY_SENT}
481 | # Disabled workflow placeholder — enable by renaming to nightly.yml and reviewing triggers.
482 | # on:
    |

codex_script.py:480:9: SyntaxError: Expected ',', found '='
    |
478 | # ---------- CI (disabled) ----------
479 | NIGHTLY_SENT = "# BEGIN: CODEX_NIGHTLY_DISABLED"
480 | NIGHTLY = f"""{NIGHTLY_SENT}
    |         ^
481 | # Disabled workflow placeholder — enable by renaming to nightly.yml and reviewing triggers.
482 | # on:
    |

codex_script.py:490:4: SyntaxError: Expected ',', found newline
    |
488 | #     steps: [{ uses: actions/checkout@v4 }]
489 | # END: CODEX_NIGHTLY_DISABLED
490 | """
    |    ^
491 | VULN_SENT = "# BEGIN: CODEX_VULN_DISABLED"
492 | VULN = f"""{VULN_SENT}
493 | # Disabled dependency scan placeholder — enable manually if desired.
    |

codex_script.py:491:11: SyntaxError: Expected ',', found '='
    |
489 | # END: CODEX_NIGHTLY_DISABLED
490 | """
491 | VULN_SENT = "# BEGIN: CODEX_VULN_DISABLED"
    |           ^
492 | VULN = f"""{VULN_SENT}
493 | # Disabled dependency scan placeholder — enable manually if desired.
    |

codex_script.py:491:43: SyntaxError: Expected ',', found newline
    |
489 | # END: CODEX_NIGHTLY_DISABLED
490 | """
491 | VULN_SENT = "# BEGIN: CODEX_VULN_DISABLED"
    |                                           ^
492 | VULN = f"""{VULN_SENT}
493 | # Disabled dependency scan placeholder — enable manually if desired.
494 | # on:
    |

codex_script.py:492:6: SyntaxError: Expected ',', found '='
    |
490 | """
491 | VULN_SENT = "# BEGIN: CODEX_VULN_DISABLED"
492 | VULN = f"""{VULN_SENT}
    |      ^
493 | # Disabled dependency scan placeholder — enable manually if desired.
494 | # on:
    |

codex_script.py:501:4: SyntaxError: Expected ',', found newline
    |
499 | #     steps: [{ uses: actions/checkout@v4 }]
500 | # END: CODEX_VULN_DISABLED
501 | """
    |    ^
502 | 
503 | # ---------- Deployment ----------
504 | CHART_SENT = "# BEGIN: CODEX_HELM_CHART"
    |

codex_script.py:504:12: SyntaxError: Expected ',', found '='
    |
503 | # ---------- Deployment ----------
504 | CHART_SENT = "# BEGIN: CODEX_HELM_CHART"
    |            ^
505 | CHART = f"""{CHART_SENT}
506 | apiVersion: v2
    |

codex_script.py:504:41: SyntaxError: Expected ',', found newline
    |
503 | # ---------- Deployment ----------
504 | CHART_SENT = "# BEGIN: CODEX_HELM_CHART"
    |                                         ^
505 | CHART = f"""{CHART_SENT}
506 | apiVersion: v2
507 | name: codex-api
    |

codex_script.py:505:7: SyntaxError: Expected ',', found '='
    |
503 | # ---------- Deployment ----------
504 | CHART_SENT = "# BEGIN: CODEX_HELM_CHART"
505 | CHART = f"""{CHART_SENT}
    |       ^
506 | apiVersion: v2
507 | name: codex-api
    |

codex_script.py:511:4: SyntaxError: Expected ',', found newline
    |
509 | description: Helm chart (stub)
510 | # END: CODEX_HELM_CHART
511 | """
    |    ^
512 | VALUES_SENT = "# BEGIN: CODEX_HELM_VALUES"
513 | VALUES = f"""{VALUES_SENT}
514 | replicaCount: 1
    |

codex_script.py:512:13: SyntaxError: Expected ',', found '='
    |
510 | # END: CODEX_HELM_CHART
511 | """
512 | VALUES_SENT = "# BEGIN: CODEX_HELM_VALUES"
    |             ^
513 | VALUES = f"""{VALUES_SENT}
514 | replicaCount: 1
    |

codex_script.py:512:43: SyntaxError: Expected ',', found newline
    |
510 | # END: CODEX_HELM_CHART
511 | """
512 | VALUES_SENT = "# BEGIN: CODEX_HELM_VALUES"
    |                                           ^
513 | VALUES = f"""{VALUES_SENT}
514 | replicaCount: 1
515 | image:
    |

codex_script.py:513:8: SyntaxError: Expected ',', found '='
    |
511 | """
512 | VALUES_SENT = "# BEGIN: CODEX_HELM_VALUES"
513 | VALUES = f"""{VALUES_SENT}
    |        ^
514 | replicaCount: 1
515 | image:
    |

codex_script.py:521:4: SyntaxError: Expected ',', found newline
    |
519 |   port: 8000
520 | # END: CODEX_HELM_VALUES
521 | """
    |    ^
522 | GRPC_DOC_SENT = "<!-- BEGIN: CODEX_GRPC_PARITY_DOC -->"
523 | GRPC_DOC = f"""{GRPC_DOC_SENT}
524 | # gRPC Parity Plan
    |

codex_script.py:522:15: SyntaxError: Expected ',', found '='
    |
520 | # END: CODEX_HELM_VALUES
521 | """
522 | GRPC_DOC_SENT = "<!-- BEGIN: CODEX_GRPC_PARITY_DOC -->"
    |               ^
523 | GRPC_DOC = f"""{GRPC_DOC_SENT}
524 | # gRPC Parity Plan
    |

codex_script.py:522:56: SyntaxError: Expected ',', found newline
    |
520 | # END: CODEX_HELM_VALUES
521 | """
522 | GRPC_DOC_SENT = "<!-- BEGIN: CODEX_GRPC_PARITY_DOC -->"
    |                                                        ^
523 | GRPC_DOC = f"""{GRPC_DOC_SENT}
524 | # gRPC Parity Plan
    |

codex_script.py:523:10: SyntaxError: Expected ',', found '='
    |
521 | """
522 | GRPC_DOC_SENT = "<!-- BEGIN: CODEX_GRPC_PARITY_DOC -->"
523 | GRPC_DOC = f"""{GRPC_DOC_SENT}
    |          ^
524 | # gRPC Parity Plan
    |

codex_script.py:528:4: SyntaxError: Expected ',', found newline
    |
526 | - Mirror REST endpoints: Train/Infer/Evaluate/Status.
527 | - Define .proto, generate stubs, ensure compatibility tests.
528 | """
    |    ^
529 | 
530 | # ---------- Docs & Examples ----------
531 | NB_SENT = '"nbformat": 4'
    |

codex_script.py:531:9: SyntaxError: Expected ',', found '='
    |
530 | # ---------- Docs & Examples ----------
531 | NB_SENT = '"nbformat": 4'
    |         ^
532 | NB = """{
533 |  "cells": [
    |

codex_script.py:531:26: SyntaxError: Expected ',', found newline
    |
530 | # ---------- Docs & Examples ----------
531 | NB_SENT = '"nbformat": 4'
    |                          ^
532 | NB = """{
533 |  "cells": [
534 |   {"cell_type":"markdown","metadata":{},"source":["# GPU Training Example (Stub)\n","TODO: Fill with end-to-end training demo."]},
    |

codex_script.py:532:4: SyntaxError: Expected ',', found '='
    |
530 | # ---------- Docs & Examples ----------
531 | NB_SENT = '"nbformat": 4'
532 | NB = """{
    |    ^
533 |  "cells": [
534 |   {"cell_type":"markdown","metadata":{},"source":["# GPU Training Example (Stub)\n","TODO: Fill with end-to-end training demo."]},
    |

codex_script.py:540:4: SyntaxError: Expected ',', found newline
    |
538 |  "nbformat": 4, "nbformat_minor": 5
539 | }
540 | """
    |    ^
541 | MC_SENT = "<!-- BEGIN: CODEX_MODEL_CARD -->"
542 | MC = f"""{MC_SENT}
543 | # Model Card (Template)
    |

codex_script.py:541:9: SyntaxError: Expected ',', found '='
    |
539 | }
540 | """
541 | MC_SENT = "<!-- BEGIN: CODEX_MODEL_CARD -->"
    |         ^
542 | MC = f"""{MC_SENT}
543 | # Model Card (Template)
    |

codex_script.py:541:45: SyntaxError: Expected ',', found newline
    |
539 | }
540 | """
541 | MC_SENT = "<!-- BEGIN: CODEX_MODEL_CARD -->"
    |                                             ^
542 | MC = f"""{MC_SENT}
543 | # Model Card (Template)
    |

codex_script.py:542:4: SyntaxError: Expected ',', found '='
    |
540 | """
541 | MC_SENT = "<!-- BEGIN: CODEX_MODEL_CARD -->"
542 | MC = f"""{MC_SENT}
    |    ^
543 | # Model Card (Template)
    |

codex_script.py:550:4: SyntaxError: Expected ',', found newline
    |
548 | ## Ethical Considerations
549 | ## Metrics & Limitations
550 | """
    |    ^
551 | 
552 | # ---------- Experiment Tracking ----------
553 | GIT_SENT = "# BEGIN: CODEX_GIT_TAG"
    |

codex_script.py:553:10: SyntaxError: Expected ',', found '='
    |
552 | # ---------- Experiment Tracking ----------
553 | GIT_SENT = "# BEGIN: CODEX_GIT_TAG"
    |          ^
554 | GIT = f"""{GIT_SENT}
555 | from __future__ import annotations
    |

codex_script.py:553:36: SyntaxError: Expected ',', found newline
    |
552 | # ---------- Experiment Tracking ----------
553 | GIT_SENT = "# BEGIN: CODEX_GIT_TAG"
    |                                    ^
554 | GIT = f"""{GIT_SENT}
555 | from __future__ import annotations
556 | import subprocess
    |

codex_script.py:554:5: SyntaxError: Expected ',', found '='
    |
552 | # ---------- Experiment Tracking ----------
553 | GIT_SENT = "# BEGIN: CODEX_GIT_TAG"
554 | GIT = f"""{GIT_SENT}
    |     ^
555 | from __future__ import annotations
556 | import subprocess
    |

codex_script.py:565:4: SyntaxError: Expected ',', found newline
    |
563 |         return None
564 | # END: CODEX_GIT_TAG
565 | """
    |    ^
566 | 
567 | 
568 | def apply():
    |

codex_script.py:568:1: SyntaxError: Expected ':', found 'def'
    |
568 | def apply():
    | ^
569 |     try:
570 |         # Env
    |

codex_script.py:573:73: E702 Multiple statements on one line (semicolon)
    |
571 |         upsert(REPO/"requirements-dev.txt", DEV_REQ, DEV_REQ_SENT)
572 |         upsert(REPO/"requirements.txt", RUN_REQ, RUN_REQ_SENT)
573 |         upsert(REPO/"scripts"/"gpu"/"check_gpu.sh", GPU_SH, GPU_SH_SENT); os.chmod(REPO/"scripts"/"gpu"/"check_gpu.sh", 0o700)
    |                                                                         ^ E702
574 |         upsert(REPO/"docs"/"ops"/"environment.md", ENV_DOC, ENV_DOC_SENT)
575 |         # Tokenization
    |

codex_script.py:633:42: E702 Multiple statements on one line (semicolon)
    |
631 |                     q5("3.1: pip install", f"exit {p.returncode}", " ".join(cmd))
632 |             except Exception as e:
633 |                 fh.write(f"ERROR: {e}\n"); q5("3.1: pip install", str(e), " ".join(cmd))
    |                                          ^ E702
634 |             fh.write("```\n")
    |

codex_script.py:656:42: E702 Multiple statements on one line (semicolon)
    |
654 |                     q5("6: Finalization — validation", f"exit {p.returncode}", " ".join(cmd))
655 |             except Exception as e:
656 |                 fh.write(f"ERROR: {e}\n"); q5("6: Finalization — validation", str(e), " ".join(cmd))
    |                                          ^ E702
657 |             fh.write("```\n")
    |

notebooks/gpu_training_example.ipynb:1:1: Expected a Jupyter Notebook, which must be internally stored as JSON, but this file isn't valid JSON: control character (\u0000-\u001F) found while parsing a string at line 4 column 0
src/codex_ml/data/splits.py:17:5: E731 Do not assign a `lambda` expression, use a `def`
   |
15 |     val_idx = idxs[t:t+v]
16 |     train_idx = idxs[t+v:]
17 |     to_list = lambda arr: [dataset[i] for i in arr.tolist()]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E731
18 |     return to_list(train_idx), to_list(val_idx), to_list(test_idx)
   |
   = help: Rewrite `to_list` as a `def`

src/codex_ml/tokenization/__init__.py:6:62: F401 `typing.cast` imported but unused
  |
5 | from pathlib import Path
6 | from typing import Dict, List, Optional, Protocol, Sequence, cast
  |                                                              ^^^^ F401
7 | 
8 | BOS_TOKEN = "<BOS>"
  |
  = help: Remove unused import: `typing.cast`

src/ingestion/__init__.py:19:8: F401 `io` imported but unused
   |
17 | from __future__ import annotations
18 | 
19 | import io
   |        ^^ F401
20 | from pathlib import Path
21 | from typing import Iterator, Optional, Tuple, Union
   |
   = help: Remove unused import: `io`

src/ingestion/__init__.py:65:24: F401 `typing.List` imported but unused
   |
63 | if _deterministic_shuffle is None:
64 |     import random
65 |     from typing import List, Sequence, TypeVar
   |                        ^^^^ F401
66 | 
67 |     T = TypeVar("T")
   |
   = help: Remove unused import: `typing.List`

tests/gates/test_quality_gates.py:36:5: F841 Local variable `nltk` is assigned to but never used
   |
34 |     assert acc == pytest.approx(2 / 2)
35 | 
36 |     nltk = pytest.importorskip("nltk")
   |     ^^^^ F841
37 |     score = M.bleu(["a b"], ["a b"])
38 |     assert score == pytest.approx(1.0)
   |
   = help: Remove assignment to unused variable `nltk`

tests/gates/test_quality_gates.py:40:5: F841 Local variable `rouge_score` is assigned to but never used
   |
38 |     assert score == pytest.approx(1.0)
39 | 
40 |     rouge_score = pytest.importorskip("rouge_score")
   |     ^^^^^^^^^^^ F841
41 |     r = M.rouge_l(["a b c"], ["a b c"])
42 |     assert r is not None and r["rougeL_f"] == pytest.approx(1.0)
   |
   = help: Remove assignment to unused variable `rouge_score`

tests/smoke/test_mlflow_utils_noop.py:12:9: F841 Local variable `run` is assigned to but never used
   |
10 |         pytest.skip(f"tracking utils missing: {e}")
11 |     try:
12 |         run = MU.start_run(tracking_uri=None, experiment_name=None)
   |         ^^^ F841
13 |     except TypeError:
14 |         pytest.skip("start_run signature mismatch")
   |
   = help: Remove assignment to unused variable `run`

tests/test_checkpoint_commit_meta.py:8:1: E402 Module level import not at top of file
  |
6 | torch = pytest.importorskip("torch")
7 | 
8 | from codex_ml.utils.checkpointing import save_checkpoint
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
  |

tests/test_sentencepiece_adapter.py:145:13: F811 Redefinition of unused `vocab_size` from line 139
    |
143 |             return self.DecodeIds(ids)
144 | 
145 |         def vocab_size(self):
    |             ^^^^^^^^^^ F811
146 |             return self._vocab_size
    |
    = help: Remove definition: `vocab_size`

tools/codex_seq_runner.py:147:42: SyntaxError: Expected ')', found string
    |
145 |     patches = [
146 |         (
147 |             r"(ap.add_argument\("--epochs",.*?\)\))",
    |                                          ^
148 |             "\\1\n    ap.add_argument(\"--grad-accum\", type=int, default=1, help=\"accumulate gradients over N steps\")",
149 |         ),
    |

tools/codex_seq_runner.py:149:9: SyntaxError: Expected ',', found ')'
    |
147 |             r"(ap.add_argument\("--epochs",.*?\)\))",
148 |             "\\1\n    ap.add_argument(\"--grad-accum\", type=int, default=1, help=\"accumulate gradients over N steps\")",
149 |         ),
    |         ^
150 |         (
151 |             r"(def demo_epoch\(epoch: int\) -> Dict\[str, float\]:)",
    |

tools/codex_seq_runner.py:149:10: SyntaxError: Expected an expression or a ']'
    |
147 |             r"(ap.add_argument\("--epochs",.*?\)\))",
148 |             "\\1\n    ap.add_argument(\"--grad-accum\", type=int, default=1, help=\"accumulate gradients over N steps\")",
149 |         ),
    |          ^
150 |         (
151 |             r"(def demo_epoch\(epoch: int\) -> Dict\[str, float\]:)",
    |

tools/file_integrity_audit.py:13:54: E701 Multiple statements on one line (colon)
   |
11 |     h = hashlib.sha256()
12 |     with p.open('rb') as f:
13 |         for chunk in iter(lambda: f.read(65536), b''): h.update(chunk)
   |                                                      ^ E701
14 |     return h.hexdigest()
   |

tools/file_integrity_audit.py:90:30: E702 Multiple statements on one line (semicolon)
   |
88 |         return 2
89 |     if sys.argv[1] == 'snapshot':
90 |         snapshot(sys.argv[2]); return 0
   |                              ^ E702
91 |     pre, post = sys.argv[2], sys.argv[3]
92 |     allow_removed, allow_added = [], []
   |

tools/file_integrity_audit.py:98:50: E702 Multiple statements on one line (semicolon)
    |
 96 |             i += 1
 97 |             while i < len(sys.argv) and not sys.argv[i].startswith('--'):
 98 |                 allow_removed.append(sys.argv[i]); i += 1
    |                                                  ^ E702
 99 |             continue
100 |         if sys.argv[i] == '--allow-added':
    |

tools/file_integrity_audit.py:103:48: E702 Multiple statements on one line (semicolon)
    |
101 |             i += 1
102 |             while i < len(sys.argv) and not sys.argv[i].startswith('--'):
103 |                 allow_added.append(sys.argv[i]); i += 1
    |                                                ^ E702
104 |             continue
105 |         i += 1
    |

tools/install_codex_hooks.py:14:1: E402 Module level import not at top of file
   |
12 | """
13 | 
14 | import stat
   | ^^^^^^^^^^^ E402
15 | import subprocess
16 | from pathlib import Path
   |

tools/install_codex_hooks.py:15:1: E402 Module level import not at top of file
   |
14 | import stat
15 | import subprocess
   | ^^^^^^^^^^^^^^^^^ E402
16 | from pathlib import Path
17 | from textwrap import dedent
   |

tools/install_codex_hooks.py:16:1: E402 Module level import not at top of file
   |
14 | import stat
15 | import subprocess
16 | from pathlib import Path
   | ^^^^^^^^^^^^^^^^^^^^^^^^ E402
17 | from textwrap import dedent
   |

tools/install_codex_hooks.py:17:1: E402 Module level import not at top of file
   |
15 | import subprocess
16 | from pathlib import Path
17 | from textwrap import dedent
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
   |

Found 252 errors (86 fixed, 166 remaining).
No fixes available (8 hidden fixes can be enabled with the `--unsafe-fixes` option).

black....................................................................Failed
- hook id: black
- exit code: 123

--- analysis/providers.py	2025-09-10 13:53:40.140279+00:00
+++ analysis/providers.py	2025-09-10 13:53:41.116301+00:00
@@ -1,12 +1,15 @@
 from pathlib import Path
 from typing import Iterable
 
 
-def walk_files(root: Path, exts: tuple[str, ...] = (".py", ".md", ".yml", ".yaml", ".toml", ".cfg", ".ini")) -> Iterable[Path]:
+def walk_files(
+    root: Path, exts: tuple[str, ...] = (".py", ".md", ".yml", ".yaml", ".toml", ".cfg", ".ini")
+) -> Iterable[Path]:
     for p in root.rglob("*"):
         if p.is_file() and p.suffix.lower() in exts:
             yield p
 
+
 def workflows(root: Path) -> list[Path]:
     d = root / ".github" / "workflows"
     return list(d.glob("*.yml")) + list(d.glob("*.yaml"))
--- analysis/parsers.py	2025-09-10 13:53:40.156279+00:00
+++ analysis/parsers.py	2025-09-10 13:53:41.120416+00:00
@@ -1,7 +1,7 @@
+OFFLINE_BLOCK_TITLE = "## Offline CI & Local Parity"
 
-OFFLINE_BLOCK_TITLE = "## Offline CI & Local Parity"
 
 def ensure_offline_block(md: str) -> str:
     if OFFLINE_BLOCK_TITLE in md:
         return md
     block = f"""
would reformat analysis/providers.py
would reformat analysis/parsers.py
--- analysis/registry.py	2025-09-10 07:58:47.221140+00:00
+++ analysis/registry.py	2025-09-10 13:53:41.143836+00:00
@@ -1,18 +1,22 @@
 from typing import Callable, Dict
 
 _REG: Dict[str, Callable[..., None]] = {}
+
 
 def register(name: str):
     def deco(fn: Callable[..., None]):
         _REG[name] = fn
         return fn
+
     return deco
+
 
 def run(name: str, **kwargs):
     fn = _REG.get(name)
     if not fn:
         raise KeyError(f"step not found: {name}")
     return fn(**kwargs)
 
+
 def names() -> list[str]:
     return sorted(_REG.keys())
would reformat analysis/registry.py
--- codex_digest/__init__.py	2025-09-10 07:58:47.225140+00:00
+++ codex_digest/__init__.py	2025-09-10 13:53:41.156626+00:00
@@ -1,7 +1,16 @@
 __all__ = [
-    "Token", "Tokenizer", "DefaultTokenizer",
-    "Intent", "ParseResult", "SemParser",
-    "Action", "PlanStep", "Workflow", "Plan",
-    "ErrorCapture", "make_error_block",
-    "CodexPipeline", "run_pipeline",
+    "Token",
+    "Tokenizer",
+    "DefaultTokenizer",
+    "Intent",
+    "ParseResult",
+    "SemParser",
+    "Action",
+    "PlanStep",
+    "Workflow",
+    "Plan",
+    "ErrorCapture",
+    "make_error_block",
+    "CodexPipeline",
+    "run_pipeline",
 ]
would reformat codex_digest/__init__.py
--- codex_digest/semparser.py	2025-09-10 13:53:40.140279+00:00
+++ codex_digest/semparser.py	2025-09-10 13:53:41.314111+00:00
@@ -23,11 +23,15 @@
 class SemParser:
     """Lightweight rule-and-score parser."""
 
     RULES = [
         ("AUDIT_REPO", [re.compile(r"\baudit\b"), re.compile(r"\brepo|repository\b")], {}),
-        ("FIX_PRECOMMIT", [re.compile(r"\bpre-?commit\b"), re.compile(r"\bhung|stall|timeout\b")], {}),
+        (
+            "FIX_PRECOMMIT",
+            [re.compile(r"\bpre-?commit\b"), re.compile(r"\bhung|stall|timeout\b")],
+            {},
+        ),
         ("TEST_COVERAGE", [re.compile(r"\bpytest\b"), re.compile(r"\bcoverage|--cov\b")], {}),
         ("PLAN_TASKS", [re.compile(r"\bplan|tasks|prioriti[sz]e\b")], {}),
         ("BUILD_PIPELINE", [re.compile(r"\bpipeline|orchestrat|workflow\b")], {}),
     ]
 
@@ -40,11 +44,13 @@
             score = 0
             for p in pats:
                 matches = p.findall(text.lower())
                 score += len(matches)
             if score:
-                intents.append(Intent(name=name, confidence=min(1.0, 0.35 + 0.2 * score), slots=slots))
+                intents.append(
+                    Intent(name=name, confidence=min(1.0, 0.35 + 0.2 * score), slots=slots)
+                )
 
         entities += re.findall(r"`([^`]+)`", text)
         entities += re.findall(r"\bSTEP\s*\d+\b", text, flags=re.I)
         entities = list(dict.fromkeys(entities))
         intents.sort(key=lambda i: i.confidence, reverse=True)
would reformat codex_digest/semparser.py
--- codex_digest/mapper.py	2025-09-10 13:53:40.132279+00:00
+++ codex_digest/mapper.py	2025-09-10 13:53:41.341736+00:00
@@ -51,9 +51,18 @@
                     "Use internal offline audit generator.",
                     prio,
                 )
             )
         elif it.name == "BUILD_PIPELINE":
-            out.append(Action("BUILD_DIGEST_PIPELINE", {}, "Compose the five-stage Codex Digest pipeline.", prio))
+            out.append(
+                Action(
+                    "BUILD_DIGEST_PIPELINE",
+                    {},
+                    "Compose the five-stage Codex Digest pipeline.",
+                    prio,
+                )
+            )
         elif it.name == "PLAN_TASKS":
-            out.append(Action("SYNTHESIZE_TASKS", {}, "Aggregate, dedupe, and prioritize tasks.", prio))
+            out.append(
+                Action("SYNTHESIZE_TASKS", {}, "Aggregate, dedupe, and prioritize tasks.", prio)
+            )
     return sorted(out, key=lambda a: a.priority)
would reformat codex_digest/mapper.py
--- codex_ast_upgrade.py	2025-09-10 13:53:40.136279+00:00
+++ codex_ast_upgrade.py	2025-09-10 13:53:41.343167+00:00
@@ -26,68 +26,82 @@
 import zipfile
 from pathlib import Path
 
 TS = lambda: datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
 
+
 # --------- utils ----------
 def w(p: Path, s: str):
     p.parent.mkdir(parents=True, exist_ok=True)
     p.write_text(s, encoding="utf-8")
 
+
 def a(p: Path, s: str):
     p.parent.mkdir(parents=True, exist_ok=True)
     with p.open("a", encoding="utf-8") as f:
         f.write(s)
+
 
 def r(p: Path) -> str:
     if not p.exists():
         return ""
     try:
         return p.read_text(encoding="utf-8")
     except Exception:
         try:
             from charset_normalizer import from_bytes
+
             data = p.read_bytes()
             best = from_bytes(data).best()
             enc = best.encoding if best else "utf-8"
             return data.decode(enc, errors="replace")
         except Exception:
             return p.read_text(errors="ignore")
 
+
 def udiff(before: str, after: str, a_label: str, b_label: str) -> str:
     import difflib
+
     return "".join(
         difflib.unified_diff(
             before.splitlines(True),
             after.splitlines(True),
             fromfile=a_label,
             tofile=b_label,
             lineterm="",
         )
     )
 
+
 def err_block(step_no: str, desc: str, msg: str, ctx: str) -> str:
     return f"""
 Question for ChatGPT-5 {TS()}:
 While performing [{step_no}:{desc}], encountered the following error:
 {msg}
 Context: {ctx}
 What are the possible causes, and how can this be resolved while preserving intended functionality?
 
 """
 
+
 # --------- repo handling ----------
 def unzip_repo(zip_path: Path, out_dir: Path):
     with zipfile.ZipFile(zip_path) as z:
         z.extractall(out_dir)
 
+
 def detect_root(base: Path) -> Path:
     cands = [d for d in base.iterdir() if d.is_dir()]
     for d in cands:
-        if (d / "src").exists() or (d / "functional_training.py").exists() or (d / "training").exists():
+        if (
+            (d / "src").exists()
+            or (d / "functional_training.py").exists()
+            or (d / "training").exists()
+        ):
             return d
     return base
+
 
 # --------- additions (code blocks) ----------
 PARSERS_PY = """\
 # src/codex_ml/analysis/parsers.py
 # Tiered parsing: ast -> libcst -> parso -> degraded metrics-only
@@ -408,6 +422,5 @@
     }, indent=2))
 
 if __name__ == "__main__":
     main()
 """
-
would reformat codex_ast_upgrade.py
--- codex_digest/error_capture.py	2025-09-10 07:58:47.225140+00:00
+++ codex_digest/error_capture.py	2025-09-10 13:53:41.348501+00:00
@@ -18,11 +18,13 @@
 
 def iso_now() -> str:
     return datetime.now(timezone.utc).strftime("%Y-%m-%dT%H:%MZ")
 
 
-def make_error_block(step_no: str, step_desc: str, msg: str, ctx: str, ts: str | None = None) -> str:
+def make_error_block(
+    step_no: str, step_desc: str, msg: str, ctx: str, ts: str | None = None
+) -> str:
     ts = ts or iso_now()
     return (
         f"Question for ChatGPT-5 {ts}:\n"
         f"While performing [{step_no}:{step_desc}], encountered the following error:\n"
         f"{msg}\n"
@@ -33,11 +35,13 @@
 
 CODEX_DIR = Path(__file__).resolve().parents[1] / ".codex"
 ERRORS_NDJSON = CODEX_DIR / "errors.ndjson"
 
 
-def log_error(step_no: str, step_desc: str, msg: str, ctx: str, *, errors_path: Path | None = None) -> str:
+def log_error(
+    step_no: str, step_desc: str, msg: str, ctx: str, *, errors_path: Path | None = None
+) -> str:
     """Append an error capture block to `.codex/errors.ndjson` and stderr."""
     ts = iso_now()
     block = make_error_block(step_no, step_desc, msg, ctx, ts=ts)
     path = errors_path or ERRORS_NDJSON
     path.parent.mkdir(parents=True, exist_ok=True)
would reformat codex_digest/error_capture.py
--- codex_ml/cli/main.py	2025-09-10 07:58:47.225140+00:00
+++ codex_ml/cli/main.py	2025-09-10 13:53:41.397931+00:00
@@ -7,17 +7,11 @@
 from __future__ import annotations
 
 import importlib.util
 import pathlib
 
-_src = (
-    pathlib.Path(__file__).resolve().parents[2]
-    / "src"
-    / "codex_ml"
-    / "cli"
-    / "main.py"
-)
+_src = pathlib.Path(__file__).resolve().parents[2] / "src" / "codex_ml" / "cli" / "main.py"
 _spec = importlib.util.spec_from_file_location("codex_ml._src_cli_main", _src)
 _module = importlib.util.module_from_spec(_spec)
 assert _spec.loader is not None
 _spec.loader.exec_module(_module)
 __all__ = getattr(_module, "__all__", [])
would reformat codex_ml/cli/main.py
error: cannot format codex_script.py: Cannot parse: 184:34: _REGISTRY: Dict[str, Callable] = {}
--- codex_utils/mlflow_offline.py	2025-09-10 07:58:47.225140+00:00
+++ codex_utils/mlflow_offline.py	2025-09-10 13:53:41.432829+00:00
@@ -3,13 +3,11 @@
 import os
 from contextlib import contextmanager
 
 
 @contextmanager
-def mlflow_offline_session(
-    artifacts_dir: str = ".artifacts/mlflow", experiment: str = "local"
-):
+def mlflow_offline_session(artifacts_dir: str = ".artifacts/mlflow", experiment: str = "local"):
     """
     Offline-only MLflow context manager.
     - Forces MLFLOW_TRACKING_URI to a local file store
     - Does not import mlflow if not installed
     """
would reformat codex_utils/mlflow_offline.py
--- run_next_stage.py	2025-09-10 07:58:47.233140+00:00
+++ run_next_stage.py	2025-09-10 13:53:41.815899+00:00
@@ -25,10 +25,12 @@
     implement_observability()
     implement_multilingual_support()
     implement_privacy_governance()
     implement_connectors_abstraction()
     implement_cli_improvements()
-    print("All tasks completed, including observability, multilingual support, privacy, connectors, and CLI enhancements.")
+    print(
+        "All tasks completed, including observability, multilingual support, privacy, connectors, and CLI enhancements."
+    )
 
 
 if __name__ == "__main__":  # pragma: no cover
     main()
would reformat run_next_stage.py
--- codex_setup.py	2025-09-10 07:58:47.225140+00:00
+++ codex_setup.py	2025-09-10 13:53:41.943616+00:00
@@ -208,13 +208,11 @@
     sub = parser.add_subparsers(dest="cmd", required=True)
 
     sub.add_parser("init", help="Create .codex/ and seed files (idempotent).")
     sub.add_parser("verify", help="Print sizes and tails of .codex files.")
     sub.add_parser("append-demo", help="Append one demo line to each file.")
-    append_p = sub.add_parser(
-        "append", help="Append a single line to change_log|errors|results"
-    )
+    append_p = sub.add_parser("append", help="Append a single line to change_log|errors|results")
     append_p.add_argument("which", choices=["change_log", "errors", "results"])
     append_p.add_argument("text", help="Text or JSON (for errors) to append")
 
     args = parser.parse_args(argv)
 
would reformat codex_setup.py
--- noxfile.py	2025-09-10 13:49:27.368673+00:00
+++ noxfile.py	2025-09-10 13:53:42.064767+00:00
@@ -8,10 +8,11 @@
 nox.options.stop_on_first_error = True
 
 # auto-guard: skip coverage flags if pytest-cov missing
 try:
     import pytest_cov  # noqa: F401
+
     _HAVE_COV = True
 except Exception:  # pragma: no cover - optional
     _HAVE_COV = False
 
 
would reformat noxfile.py
--- scripts/benchmark_logging.py	2025-09-10 07:58:47.237140+00:00
+++ scripts/benchmark_logging.py	2025-09-10 13:53:42.112637+00:00
@@ -13,25 +13,21 @@
     _auto()
 
     db = os.getenv("CODEX_SQLITE_DB", "codex_bench.sqlite3")
     conn = sqlite3.connect(db)
     cur = conn.cursor()
-    cur.execute(
-        "CREATE TABLE IF NOT EXISTS bench_log(id INTEGER PRIMARY KEY, ts REAL, msg TEXT)"
-    )
+    cur.execute("CREATE TABLE IF NOT EXISTS bench_log(id INTEGER PRIMARY KEY, ts REAL, msg TEXT)")
     conn.commit()
     cur.close()
     if not pooled:
         conn.close()
 
     def worker(start_i, end_i):
         for i in range(start_i, end_i):
             c = sqlite3.connect(db)
             cu = c.cursor()
-            cu.execute(
-                "INSERT INTO bench_log(ts,msg) VALUES(?,?)", (time.time(), f"m{i}")
-            )
+            cu.execute("INSERT INTO bench_log(ts,msg) VALUES(?,?)", (time.time(), f"m{i}"))
             c.commit()
             cu.close()
             if not pooled:
                 c.close()
 
@@ -58,18 +54,12 @@
     ap.add_argument("--N", type=int, default=5000)
     ap.add_argument("--threads", type=int, default=1)
     ap.add_argument("--rounds", type=int, default=3)
     args = ap.parse_args()
 
-    base = [
-        bench_once(args.N, pooled=False, use_threads=args.threads)
-        for _ in range(args.rounds)
-    ]
-    pool = [
-        bench_once(args.N, pooled=True, use_threads=args.threads)
-        for _ in range(args.rounds)
-    ]
+    base = [bench_once(args.N, pooled=False, use_threads=args.threads) for _ in range(args.rounds)]
+    pool = [bench_once(args.N, pooled=True, use_threads=args.threads) for _ in range(args.rounds)]
 
     def thr(n, t):
         return n / t
 
     Tb = [thr(args.N, x) for x in base]
@@ -77,15 +67,11 @@
 
     print("BASE seconds:", base, "median=", statistics.median(base))
     print("POOL seconds:", pool, "median=", statistics.median(pool))
     print("BASE thr:", Tb, "median=", statistics.median(Tb))
     print("POOL thr:", Tp, "median=", statistics.median(Tp))
-    imp = (
-        (statistics.median(Tp) - statistics.median(Tb))
-        / max(1e-9, statistics.median(Tb))
-        * 100.0
-    )
+    imp = (statistics.median(Tp) - statistics.median(Tb)) / max(1e-9, statistics.median(Tb)) * 100.0
     print(f"IMPROVEMENT %: {imp:.2f}")
 
 
 if __name__ == "__main__":
     main()
would reformat scripts/benchmark_logging.py
--- scripts/cli/viewer.py	2025-09-10 13:53:40.152279+00:00
+++ scripts/cli/viewer.py	2025-09-10 13:53:42.153035+00:00
@@ -1,6 +1,7 @@
 """Minimal CLI viewer using importlib.resources for path resolution."""
+
 from __future__ import annotations
 
 import argparse
 import sys
 
would reformat scripts/cli/viewer.py
--- documentation/codex_symbolic_pipeline.py	2025-09-10 07:58:47.225140+00:00
+++ documentation/codex_symbolic_pipeline.py	2025-09-10 13:53:42.191799+00:00
@@ -97,16 +97,11 @@
     lr: float = 1e-2
     batch_size: int = 8
     seed: int = 0
 
     def __post_init__(self) -> None:
-        if (
-            self.ppo_clip <= 0
-            or self.kl_penalty < 0
-            or self.lr <= 0
-            or self.epochs <= 0
-        ):
+        if self.ppo_clip <= 0 or self.kl_penalty < 0 or self.lr <= 0 or self.epochs <= 0:
             raise ValueError("invalid RLHFCfg")
 
 
 # ----------------------------- Handles ----------------------------
 
would reformat documentation/codex_symbolic_pipeline.py
--- scripts/apply_session_logging_workflow.py	2025-09-10 07:58:47.237140+00:00
+++ scripts/apply_session_logging_workflow.py	2025-09-10 13:53:42.322956+00:00
@@ -39,25 +39,21 @@
 ROLES = {"system", "user", "assistant", "tool"}
 
 
 def git_root() -> Path:
     try:
-        out = run(
-            ["git", "rev-parse", "--show-toplevel"], capture_output=True
-        ).stdout.strip()
+        out = run(["git", "rev-parse", "--show-toplevel"], capture_output=True).stdout.strip()
         return Path(out)
     except Exception:
         return Path.cwd()
 
 
 def require_clean_worktree() -> None:
     try:
         out = run(["git", "status", "--porcelain"], capture_output=True).stdout
         if out.strip():
-            raise RuntimeError(
-                "Working tree not clean. Commit or stash before running."
-            )
+            raise RuntimeError("Working tree not clean. Commit or stash before running.")
     except FileNotFoundError as e:
         sys.stderr.write(
             "WARNING: Git is required for this operation. Please install Git (https://git-scm.com/) and ensure this script is run inside a Git repository. Details: {}\n".format(
                 str(e)
             )
@@ -141,12 +137,11 @@
             if any(part.startswith(".git") for part in p.parts):
                 continue
             kind = p.suffix or "file"
             role = (
                 "code"
-                if p.suffix
-                in {".py", ".sh", ".sql", ".js", ".ts", ".jsx", ".tsx", ".html"}
+                if p.suffix in {".py", ".sh", ".sql", ".js", ".ts", ".jsx", ".tsx", ".html"}
                 else "doc"
             )
             items.append((str(p.relative_to(root)), kind, role))
     return items
 
@@ -439,13 +434,11 @@
 
 
 def patch_readme(readme_path: Path) -> None:
     text = read_text(readme_path)
     if "Session Logging (Context Manager)" in text and "Session Query (CLI)" in text:
-        append_change(
-            readme_path, "kept", "README already contains session logging sections"
-        )
+        append_change(readme_path, "kept", "README already contains session logging sections")
         return
     new = text.rstrip() + "\n\n" + README_SNIPPET + "\n"
     write_file(readme_path, new, "Append session logging usage and CLI docs")
 
 
would reformat scripts/apply_session_logging_workflow.py
--- scripts/init_sample_db.py	2025-09-10 07:58:47.237140+00:00
+++ scripts/init_sample_db.py	2025-09-10 13:53:42.499496+00:00
@@ -56,13 +56,11 @@
 
 
 def main() -> None:
     parser = argparse.ArgumentParser(description=__doc__)
     parser.add_argument("--db-path", help="Path to SQLite DB")
-    parser.add_argument(
-        "--reset", action="store_true", help="Drop and recreate the table"
-    )
+    parser.add_argument("--reset", action="store_true", help="Drop and recreate the table")
     parser.add_argument("--seed", action="store_true", help="Insert sample rows")
     args = parser.parse_args()
 
     db_path = resolved_db_path(args.db_path)
     ensure_parent(db_path)
would reformat scripts/init_sample_db.py
--- codex_workflow.py	2025-09-10 07:58:47.225140+00:00
+++ codex_workflow.py	2025-09-10 13:53:42.544445+00:00
@@ -123,13 +123,11 @@
         "context": context,
     }
     append_file(ERROR_LOG, json.dumps(entry) + "\n")
 
 
-def record_change(
-    file_path: Path, action: str, rationale: str, before: str, after: str
-):
+def record_change(file_path: Path, action: str, rationale: str, before: str, after: str):
     diff = difflib.unified_diff(
         before.splitlines(keepends=True),
         after.splitlines(keepends=True),
         fromfile=str(file_path) + " (before)",
         tofile=str(file_path) + " (after)",
@@ -153,13 +151,11 @@
 
 
 def assert_clean_state():
     code, out, err = run(["git", "status", "--porcelain"])
     if code != 0:
-        record_error(
-            "1.1", "Check clean working state", err or out, "git status --porcelain"
-        )
+        record_error("1.1", "Check clean working state", err or out, "git status --porcelain")
         sys.exit(2)
     if out.strip():
         record_error(
             "1.1",
             "Working tree not clean",
@@ -170,13 +166,11 @@
 
 
 def ensure_branch(branch: str):
     code, out, err = run(["git", "rev-parse", "--abbrev-ref", "HEAD"])
     if code != 0:
-        record_error(
-            "1.2", "Get current branch", err or out, "git rev-parse --abbrev-ref HEAD"
-        )
+        record_error("1.2", "Get current branch", err or out, "git rev-parse --abbrev-ref HEAD")
         return
     if out != branch:
         code2, _out2, err2 = run(["git", "checkout", branch])
         if code2 != 0:
             record_error(
@@ -193,15 +187,11 @@
         p = REPO_ROOT / name
         if p.exists():
             try:
                 txt = read_text(p)
                 # Very light guardrail hint extraction (headings only)
-                heads = [
-                    ln.strip("# ").strip()
-                    for ln in txt.splitlines()
-                    if ln.startswith("#")
-                ]
+                heads = [ln.strip("# ").strip() for ln in txt.splitlines() if ln.startswith("#")]
                 notes.append({"file": name, "headings": heads})
             except Exception as e:
                 record_error("1.2", f"Read {name}", str(e), f"path={p}")
     return notes
 
@@ -230,13 +220,11 @@
                         "size": path.stat().st_size,
                         "ext": path.suffix.lower(),
                     }
                 )
             except Exception as e:
-                record_error(
-                    "1.3", "Stat file during inventory", str(e), f"path={path}"
-                )
+                record_error("1.3", "Stat file during inventory", str(e), f"path={path}")
     write_json(INVENTORY, {"generated": now_iso(), "items": items})
 
 
 def detect_workflows():
     wf_dir = REPO_ROOT / ".github" / "workflows"
@@ -251,13 +239,11 @@
 def ast_has_import(mod_src: str, name: str) -> bool:
     try:
         tree = ast.parse(mod_src)
     except Exception:
         # If unparsable, fall back to regex (best-effort)
-        return bool(
-            re.search(rf"^\s*import\s+{re.escape(name)}\b", mod_src, re.MULTILINE)
-        )
+        return bool(re.search(rf"^\s*import\s+{re.escape(name)}\b", mod_src, re.MULTILINE))
     for node in ast.walk(tree):
         if isinstance(node, ast.Import):
             for alias in node.names:
                 if alias.name == name:
                     return True
@@ -380,13 +366,11 @@
         record_error(step, desc, f"Read failure: {e}", f"path={p}")
         return
     try:
         after = insert_import(before, import_name)
     except Exception as e:
-        record_error(
-            step, desc, f"Insert failure: {e}", f"path={p}, import={import_name}"
-        )
+        record_error(step, desc, f"Insert failure: {e}", f"path={p}, import={import_name}")
         return
     if after == before:
         record_change(
             p,
             "no-op (import already present)",
@@ -430,35 +414,30 @@
             record_error("3.readme", "Read README.md", str(e), "README scan")
 
 
 def phase_4_pruning():
     append_file(CHANGE_LOG, "\n## Phase 4 — Pruning\n")
-    append_file(
-        CHANGE_LOG, "- No pruning required; all edits are additive and localized.\n"
-    )
+    append_file(CHANGE_LOG, "- No pruning required; all edits are additive and localized.\n")
 
 
 def phase_5_errors_ack():
     # Nothing to do; errors appended in real-time. Summarize count.
     count = 0
     if ERROR_LOG.exists():
         with ERROR_LOG.open("r", encoding="utf-8") as f:
             count = sum(1 for _ in f if _.strip())
-    append_file(
-        CHANGE_LOG, f"\n## Phase 5 — Error Capture\n- Errors recorded: {count}\n"
-    )
+    append_file(CHANGE_LOG, f"\n## Phase 5 — Error Capture\n- Errors recorded: {count}\n")
 
 
 def phase_6_finalize():
     # Summarize implemented tasks and gaps
     errs = []
     if ERROR_LOG.exists():
         with ERROR_LOG.open("r", encoding="utf-8") as f:
             errs = [json.loads(line) for line in f if line.strip()]
     implemented = [
-        {"file": str(t["path"]), "import": t["import_name"], "status": "attempted"}
-        for t in TARGETS
+        {"file": str(t["path"]), "import": t["import_name"], "status": "attempted"} for t in TARGETS
     ]
     summary = {
         "generated": now_iso(),
         "implemented": implemented,
         "errors_count": len(errs),
would reformat codex_workflow.py
--- src/codex/chat.py	2025-09-10 07:58:47.241140+00:00
+++ src/codex/chat.py	2025-09-10 13:53:42.549878+00:00
@@ -34,13 +34,11 @@
         ``CODEX_SESSION_ID`` environment variable or generates a new UUID4.
     db_path:
         Optional path to the SQLite database.
     """
 
-    def __init__(
-        self, session_id: Optional[str] = None, db_path: Optional[str] = None
-    ) -> None:
+    def __init__(self, session_id: Optional[str] = None, db_path: Optional[str] = None) -> None:
         sid = session_id or os.getenv("CODEX_SESSION_ID") or str(uuid.uuid4())
         self.session_id = sid
         self.db_path = db_path
 
     def __enter__(self) -> ChatSession:
would reformat src/codex/chat.py
--- src/codex/logging/export.py	2025-09-10 07:58:47.241140+00:00
+++ src/codex/logging/export.py	2025-09-10 13:53:42.866046+00:00
@@ -102,13 +102,11 @@
 
 
 def main(argv: Iterable[str] | None = None) -> int:
     parser = argparse.ArgumentParser(description="Export session events from SQLite")
     parser.add_argument("session_id", help="Session identifier to export")
-    parser.add_argument(
-        "--format", choices=["json", "text"], default="json", help="Output format"
-    )
+    parser.add_argument("--format", choices=["json", "text"], default="json", help="Output format")
     parser.add_argument("--db", help="Path to SQLite DB", default=None)
     args = parser.parse_args(list(argv) if argv is not None else None)
     print(export_session(args.session_id, args.format, args.db))
     return 0
 
would reformat src/codex/logging/export.py
--- src/codex/logging/import_ndjson.py	2025-09-10 07:58:47.241140+00:00
+++ src/codex/logging/import_ndjson.py	2025-09-10 13:53:43.015727+00:00
@@ -87,12 +87,11 @@
         "ON session_events(session_id, seq)"
     )
     # Create the `(session_id, ts)` index for efficient backfilling of legacy
     # databases and faster retention queries.
     conn.execute(
-        "CREATE INDEX IF NOT EXISTS session_events_sid_ts_idx "
-        "ON session_events(session_id, ts)"
+        "CREATE INDEX IF NOT EXISTS session_events_sid_ts_idx " "ON session_events(session_id, ts)"
     )
     conn.execute(
         """
         CREATE TABLE IF NOT EXISTS session_ingest_watermark (
             session_id TEXT PRIMARY KEY,
@@ -226,13 +225,11 @@
         return inserted
     finally:
         conn.close()
 
 
-def import_all(
-    log_dir: Path | None = None, db_path: Path | str | None = None
-) -> Dict[str, int]:
+def import_all(log_dir: Path | None = None, db_path: Path | str | None = None) -> Dict[str, int]:
     """Import all ``*.ndjson`` files found under ``log_dir``."""
 
     log_dir = (log_dir or _default_log_dir()).expanduser().resolve()
     results: Dict[str, int] = {}
     for p in sorted(log_dir.glob("*.ndjson")):
would reformat src/codex/logging/import_ndjson.py
--- src/codex/logging/session_query.py	2025-09-10 07:58:47.241140+00:00
+++ src/codex/logging/session_query.py	2025-09-10 13:53:43.162654+00:00
@@ -145,13 +145,11 @@
         select_cols.append(cols["message"])
         sql = f"SELECT {', '.join(select_cols)} FROM {table}"
         params: List[object] = []
         if session_id:
             if not sid_col:
-                raise RuntimeError(
-                    "Session filtering requested but no session id column found"
-                )
+                raise RuntimeError("Session filtering requested but no session id column found")
             sql += f" WHERE {sid_col}=?"
             params.append(session_id)
         sql += f" ORDER BY {ts_col} {order_clause}"
         if session_id is None and last_n is not None:
             sql += " LIMIT ?"
@@ -167,20 +165,14 @@
 
 def print_rows(rows: List[sqlite3.Row], cols: Dict[str, str]) -> None:
     if not rows:
         print("(no rows)", file=sys.stderr)
         return
-    header_keys = [
-        k for k in ["timestamp", "session_id", "role", "message"] if k in cols
-    ]
+    header_keys = [k for k in ["timestamp", "session_id", "role", "message"] if k in cols]
     print("\t".join(header_keys))
     for r in rows:
-        print(
-            "\t".join(
-                "" if r[cols[k]] is None else str(r[cols[k]]) for k in header_keys
-            )
-        )
+        print("\t".join("" if r[cols[k]] is None else str(r[cols[k]]) for k in header_keys))
 
 
 def main(argv: Optional[Iterable[str]] = None) -> int:
     parser = argparse.ArgumentParser(
         description="Query session events from a SQLite database",
would reformat src/codex/logging/session_query.py
--- src/codex/logging/query_logs.py	2025-09-10 07:58:47.241140+00:00
+++ src/codex/logging/query_logs.py	2025-09-10 13:53:43.258649+00:00
@@ -64,12 +64,11 @@
         s2 = s2[:-1] + "+00:00"
     try:
         return datetime.fromisoformat(s2)
     except Exception as exc:  # pragma: no cover - simple validation
         raise ValueError(
-            "Invalid datetime: "
-            f"{s}. Use ISO 8601 (e.g., 2025-08-18T09:00:00 or 2025-08-18)."
+            "Invalid datetime: " f"{s}. Use ISO 8601 (e.g., 2025-08-18T09:00:00 or 2025-08-18)."
         ) from exc
 
 
 def _resolve_db_path(path: str) -> str:
     """Return an existing path, checking `.db`/`.sqlite` variants."""
@@ -134,13 +133,11 @@
         sql += " OFFSET ?"
         params.append(int(offset))
     return sql, params
 
 
-def _print_rich(
-    rows: List[sqlite3.Row], mapcol: Dict[str, Optional[str]], show_meta: bool
-) -> None:
+def _print_rich(rows: List[sqlite3.Row], mapcol: Dict[str, Optional[str]], show_meta: bool) -> None:
     ts = mapcol["timestamp"]
     role = mapcol["role"]
     content = mapcol["content"]
     if not ts or not role or not content:
         raise ValueError("Required columns missing")
@@ -166,13 +163,11 @@
             row.append(str(r[meta_col]))
         table.add_row(*row)
     Console().print(table)
 
 
-def format_text(
-    rows: List[sqlite3.Row], mapcol: Dict[str, Optional[str]], show_meta: bool
-) -> str:
+def format_text(rows: List[sqlite3.Row], mapcol: Dict[str, Optional[str]], show_meta: bool) -> str:
     """Plain-text fallback used by legacy scripts/tests."""
     ts = mapcol["timestamp"]
     role = mapcol["role"]
     content = mapcol["content"]
     if not ts or not role or not content:
@@ -197,13 +192,11 @@
         lines.append(f"{t} ({rr}){sid_part}: {c}{meta_part}")
     return "\n".join(lines)
 
 
 def main(argv: Optional[List[str]] = None) -> int:
-    parser = argparse.ArgumentParser(
-        description="Query transcripts from session_events."
-    )
+    parser = argparse.ArgumentParser(description="Query transcripts from session_events.")
     parser.add_argument(
         "--db",
         default=os.environ.get("CODEX_LOG_DB_PATH")
         or os.environ.get("CODEX_DB_PATH")
         or str(DEFAULT_LOG_DB),
@@ -211,21 +204,15 @@
             "Path to SQLite DB (default: env CODEX_LOG_DB_PATH/CODEX_DB_PATH or "
             f"{DEFAULT_LOG_DB})"
         ),
     )
     parser.add_argument("--session-id", help="Filter by session_id")
-    parser.add_argument(
-        "--role", help="Filter by role (e.g., user, assistant, system, tool)"
-    )
+    parser.add_argument("--role", help="Filter by role (e.g., user, assistant, system, tool)")
     parser.add_argument("--after", help="Start time (ISO 8601 or YYYY-MM-DD)")
     parser.add_argument("--before", help="End time (ISO 8601 or YYYY-MM-DD)")
-    parser.add_argument(
-        "--format", choices=["text", "json"], default="text", help="Output format"
-    )
-    parser.add_argument(
-        "--show-meta", action="store_true", help="Include meta column in output"
-    )
+    parser.add_argument("--format", choices=["text", "json"], default="text", help="Output format")
+    parser.add_argument("--show-meta", action="store_true", help="Include meta column in output")
     parser.add_argument("--limit", type=int)
     parser.add_argument("--offset", type=int)
     parser.add_argument("--order", choices=["asc", "desc"], default="asc")
     parser.add_argument("--tail", type=int, help="Show latest N rows")
     args = parser.parse_args(argv)
would reformat src/codex/logging/query_logs.py
--- src/codex/search/providers.py	2025-09-10 07:58:47.241140+00:00
+++ src/codex/search/providers.py	2025-09-10 13:53:43.332375+00:00
@@ -96,13 +96,11 @@
 
 class SearchRegistry:
     """Registry aggregating search providers."""
 
     def __init__(self, enable_external: bool = False, root: Optional[Path] = None):
-        self.providers: List[SearchProvider] = [
-            InternalRepoSearch(root=root or Path.cwd())
-        ]
+        self.providers: List[SearchProvider] = [InternalRepoSearch(root=root or Path.cwd())]
         if enable_external:
             self.providers.append(ExternalWebSearch())
 
     def search(self, query: str) -> List[Dict[str, Any]]:
         """Search all providers and concatenate their results."""
would reformat src/codex/search/providers.py
--- src/codex/logging/viewer.py	2025-09-10 07:58:47.241140+00:00
+++ src/codex/logging/viewer.py	2025-09-10 13:53:43.393836+00:00
@@ -61,22 +61,17 @@
 def _validate_table_name(value: str | None) -> str | None:
     if value is None:
         return value
     if re.fullmatch(r"[A-Za-z0-9_]+", value):
         return value
-    msg = (
-        f"Invalid table name: '{value}'. "
-        "Only letters, digits, and underscore are allowed."
-    )
+    msg = f"Invalid table name: '{value}'. " "Only letters, digits, and underscore are allowed."
     raise argparse.ArgumentTypeError(msg)
 
 
 def parse_args(argv: Optional[List[str]] = None) -> argparse.Namespace:
     parser = argparse.ArgumentParser(description="Session Logging (SQLite) viewer")
-    parser.add_argument(
-        "--session-id", required=True, help="Session identifier to filter"
-    )
+    parser.add_argument("--session-id", required=True, help="Session identifier to filter")
     parser.add_argument(
         "--db",
         default=os.getenv("CODEX_LOG_DB_PATH"),
         help=("Path to SQLite database (default: env CODEX_LOG_DB_PATH or autodetect)"),
     )
@@ -85,13 +80,11 @@
         choices=["json", "text"],
         default="text",
         help="Output format",
     )
     parser.add_argument("--level", action="append", help="Filter by level (repeatable)")
-    parser.add_argument(
-        "--contains", help="Substring filter on message (case-insensitive)"
-    )
+    parser.add_argument("--contains", help="Substring filter on message (case-insensitive)")
     parser.add_argument("--since", help="ISO date/time lower bound (inclusive)")
     parser.add_argument("--until", help="ISO date/time upper bound (inclusive)")
     parser.add_argument("--limit", type=int, help="Max rows to return")
     parser.add_argument(
         "--table",
@@ -155,12 +148,11 @@
         msg = pick(CANDIDATE_MSG)
         lvl = pick(CANDIDATE_LVL)
         if sid and ts and msg:
             return {"table": table, "sid": sid, "ts": ts, "msg": msg, "lvl": lvl}
     raise RuntimeError(
-        "No suitable table found (need at least session_id, timestamp, "
-        "message columns)."
+        "No suitable table found (need at least session_id, timestamp, " "message columns)."
     )
 
 
 def parse_iso(value: Optional[str]) -> Optional[str]:
     if not value:
@@ -225,21 +217,18 @@
         raise SystemExit(msg)
     root = Path.cwd()
     db_path = Path(resolve_db_path(ns.db)) if ns.db else autodetect_db(root)
     if not db_path:
         print(
-            "ERROR: SQLite DB not found. Provide --db or place logs.db/logs.sqlite "
-            "in repo.",
+            "ERROR: SQLite DB not found. Provide --db or place logs.db/logs.sqlite " "in repo.",
             file=sys.stderr,
         )
         return 2
     try:
         conn = connect_db(db_path)
         schema = infer_schema(conn, ns.table)
-        query, args = build_query(
-            schema, ns.level, ns.contains, ns.since, ns.until, ns.limit
-        )
+        query, args = build_query(schema, ns.level, ns.contains, ns.since, ns.until, ns.limit)
         args[0] = ns.session_id
         rows = conn.execute(query, args).fetchall()
         if ns.format == "json":
             print(json.dumps([dict(r) for r in rows], ensure_ascii=False, indent=2))
         else:
would reformat src/codex/logging/viewer.py
--- src/codex_ml/analysis/registry.py	2025-09-10 13:53:40.136279+00:00
+++ src/codex_ml/analysis/registry.py	2025-09-10 13:53:43.420045+00:00
@@ -10,10 +10,11 @@
     parsers: Dict[str, Callable] | None = None
     extractors: Dict[str, Callable] | None = None
 
 
 REG = Registry(parsers={}, extractors={})
+
 
 def register_parser(name: str, fn: Callable) -> None:
     REG.parsers[name] = fn
 
 
would reformat src/codex_ml/analysis/registry.py
--- scripts/deep_research_task_process.py	2025-09-10 07:58:47.237140+00:00
+++ scripts/deep_research_task_process.py	2025-09-10 13:53:43.535677+00:00
@@ -110,13 +110,11 @@
         return any((p / m).exists() for m in markers)
     except PermissionError:
         return False
 
 
-def find_repo_root(
-    start: Optional[Path] = None, markers: Iterable[str] = _REPO_MARKERS
-) -> Path:
+def find_repo_root(start: Optional[Path] = None, markers: Iterable[str] = _REPO_MARKERS) -> Path:
     """Return nearest ancestor containing any marker, or fallback."""
     s = (start or Path(__file__).resolve()).absolute()
     for candidate in (s,) + tuple(s.parents):
         if _has_marker(candidate, markers):
             return candidate
@@ -139,22 +137,18 @@
 CONTRIBUTING_MD = REPO_ROOT / "CONTRIBUTING.md"
 README_MD = REPO_ROOT / "README.md"
 SESSION_LOGGER_PY = REPO_ROOT / "src" / "codex" / "logging" / "session_logger.py"
 VIEWER_PY = REPO_ROOT / "src" / "codex" / "logging" / "viewer.py"
 CI_WORKFLOW = REPO_ROOT / ".github" / "workflows" / "ci.yml"
-BUILD_WORKFLOW_DISABLED = (
-    REPO_ROOT / ".github" / "workflows" / "build-image.yml.disabled"
-)
+BUILD_WORKFLOW_DISABLED = REPO_ROOT / ".github" / "workflows" / "build-image.yml.disabled"
 
 # Environment toggles
 DRY_RUN = os.getenv("REPO_IMPROVEMENT_DRY_RUN") == "1"
 VERBOSE = os.getenv("REPO_IMPROVEMENT_VERBOSE") == "1"
 SKIP_BASELINE = os.getenv("REPO_IMPROVEMENT_SKIP_BASELINE") == "1"
 TASK_FILTER = {
-    s.strip()
-    for s in os.getenv("REPO_IMPROVEMENT_TASK_FILTER", "").split(",")
-    if s.strip()
+    s.strip() for s in os.getenv("REPO_IMPROVEMENT_TASK_FILTER", "").split(",") if s.strip()
 }
 GITHUB_ORG = os.getenv("REPO_IMPROVEMENT_ORG", "Aries-Serpent")
 GITHUB_REPO = os.getenv("REPO_IMPROVEMENT_REPO", "_codex_")
 
 SECURITY_SECTION_HEADER = "## Security Scanning"
@@ -253,13 +247,11 @@
 def _atomic_write(path: Path, content: str, encoding: str = "utf-8") -> None:
     """Atomic write helper to minimize partial write risk."""
     if DRY_RUN:
         return
     path.parent.mkdir(parents=True, exist_ok=True)
-    fd, tmp_path = tempfile.mkstemp(
-        dir=path.parent, prefix=f".{path.name}.", suffix=".tmp"
-    )
+    fd, tmp_path = tempfile.mkstemp(dir=path.parent, prefix=f".{path.name}.", suffix=".tmp")
     try:
         with os.fdopen(fd, "w", encoding=encoding) as fh:
             fh.write(content)
         os.replace(tmp_path, path)
     except Exception:
@@ -417,13 +409,11 @@
     (REPO_ROOT / ".github" / "workflows").mkdir(parents=True, exist_ok=True)
 
     if not VIEWER_PY.exists():
         _log_error("2: Locate viewer.py", "File not found", str(VIEWER_PY))
     if not SESSION_LOGGER_PY.exists():
-        _log_error(
-            "2: Locate session_logger.py", "File not found", str(SESSION_LOGGER_PY)
-        )
+        _log_error("2: Locate session_logger.py", "File not found", str(SESSION_LOGGER_PY))
     if not PRECOMMIT_CFG.exists():
         _log_error("2: Locate pre-commit config", "File not found", str(PRECOMMIT_CFG))
 
     rc, py_ver, py_err = _run_command(["python", "--version"], check=False)
     if rc == 0:
@@ -604,13 +594,11 @@
 """
     original = text
     # Insert mypy if missing (fall back approach)
     if "mypy ." not in text and "mypy" not in text:
         if "pre-commit run --all-files" in text and "pytest" in text:
-            text = text.replace(
-                "pre-commit run --all-files", "pre-commit run --all-files\nmypy ."
-            )
+            text = text.replace("pre-commit run --all-files", "pre-commit run --all-files\nmypy .")
     text = re.sub(r"(?m)^Avoid enabling GitHub Actions.*(?:\n|$)", "", text)
 
     if ".secrets.baseline" not in text:
         extra = r"""
 
@@ -764,13 +752,11 @@
         )
 
 
 def _task_session_logger_pool_fix() -> None:
     if not SESSION_LOGGER_PY.exists():
-        _log_error(
-            "3.7: SQLite pool fix", "session_logger.py missing", str(SESSION_LOGGER_PY)
-        )
+        _log_error("3.7: SQLite pool fix", "session_logger.py missing", str(SESSION_LOGGER_PY))
         return
     src_text = _read_text(SESSION_LOGGER_PY)
     pattern_try = r"(\n\s*try:\n\s*conn\.execute\([^)]*\)\n\s*conn\.commit\(\))"
     if re.search(pattern_try, src_text):
         patched = re.sub(
@@ -863,13 +849,11 @@
         )
 
 
 def _task_extend_precommit() -> None:
     if not PRECOMMIT_CFG.exists():
-        _log_error(
-            "3.10: Extend pre-commit config", "File not found", str(PRECOMMIT_CFG)
-        )
+        _log_error("3.10: Extend pre-commit config", "File not found", str(PRECOMMIT_CFG))
         return
     content = _read_text(PRECOMMIT_CFG)
     bandit_block = (
         "- repo: https://github.com/PyCQA/bandit\n"
         "  rev: 1.7.4\n"
@@ -1117,45 +1101,28 @@
             f"    - Unified GitHub Actions workflow (`ci.yml`) for lint, test, coverage, Docker build for {GITHUB_ORG}/{GITHUB_REPO}."
         )
         lines.append(
             "    - Static analysis & secret scanning (Bandit, detect-secrets) integrated via pre-commit & CI."
         )
+        lines.append("    - Contributor & README documentation updated for security practices.")
+        lines.append("    - CLI refactored using `click` with task whitelist & smoke tests.")
+        lines.append("    - SQLite connection pool hardening (close & evict on errors).")
+        lines.append("    - Session logging context exit ensures session_end event logging.")
+        lines.append("    - Viewer table validation presence check performed (logged if missing).")
+        lines.append("\n- **Residual Gaps:**")
+        lines.append("    - `Ingestor` remains a placeholder pending real ingestion logic.")
         lines.append(
-            "    - Contributor & README documentation updated for security practices."
-        )
-        lines.append(
-            "    - CLI refactored using `click` with task whitelist & smoke tests."
-        )
-        lines.append(
-            "    - SQLite connection pool hardening (close & evict on errors)."
-        )
-        lines.append(
-            "    - Session logging context exit ensures session_end event logging."
-        )
-        lines.append(
-            "    - Viewer table validation presence check performed (logged if missing)."
-        )
-        lines.append("\n- **Residual Gaps:**")
-        lines.append(
-            "    - `Ingestor` remains a placeholder pending real ingestion logic."
-        )
-        lines.append(
-            "    - CLI tasks are stubs; integrate with internal APIs for true "
-            "maintenance ops."
+            "    - CLI tasks are stubs; integrate with internal APIs for true " "maintenance ops."
         )
         lines.append("    - Potential Bandit findings require periodic triage.")
         lines.append("    - Secret baseline may need refresh as code evolves.")
         lines.append("\n- **Next Steps:**")
         lines.append("    - Implement ingestion logic & meaningful tests.")
         lines.append("    - Extend CLI to operational maintenance commands.")
         lines.append("    - Monitor CI runs & address failures promptly.")
-        lines.append(
-            "    - Refresh `.secrets.baseline` after structural repository changes."
-        )
-        lines.append(
-            "\n**NOTE:** CI workflow triggers only on manual dispatch or pull requests."
-        )
+        lines.append("    - Refresh `.secrets.baseline` after structural repository changes.")
+        lines.append("\n**NOTE:** CI workflow triggers only on manual dispatch or pull requests.")
         if not DRY_RUN:
             _atomic_write(RESULTS_LOG, "\n".join(lines) + "\n")
     except Exception as e:
         _log_error("results summary write", str(e), str(RESULTS_LOG))
     _v("Phase 4: Results Summary complete")
@@ -1172,14 +1139,11 @@
         phase1_preparation()
         phase2_search_mapping()
         phase3_construction()
         phase4_results()
         if not DRY_RUN:
-            print(
-                "Completed repository improvement tasks for "
-                f"{GITHUB_ORG}/{GITHUB_REPO}."
-            )
+            print("Completed repository improvement tasks for " f"{GITHUB_ORG}/{GITHUB_REPO}.")
             print(f"Results and change log have been updated in {CODEX_DIR}.")
         else:
             print("Dry-run complete (no files modified).")
     except KeyboardInterrupt:
         print("\nOperation interrupted by user. Partial changes may have been applied.")
would reformat scripts/deep_research_task_process.py
--- src/codex_ml/cli/generate.py	2025-09-10 07:58:47.241140+00:00
+++ src/codex_ml/cli/generate.py	2025-09-10 13:53:43.551617+00:00
@@ -20,13 +20,11 @@
     parser.add_argument("--temperature", type=float, default=1.0)
     parser.add_argument("--top-k", type=int, default=0)
     parser.add_argument("--top-p", type=float, default=1.0)
     parser.add_argument("--lora-r", type=int, default=0, help="LoRA rank; 0 disables")
     parser.add_argument("--lora-alpha", type=int, default=16, help="LoRA alpha")
-    parser.add_argument(
-        "--lora-dropout", type=float, default=0.05, help="LoRA dropout probability"
-    )
+    parser.add_argument("--lora-dropout", type=float, default=0.05, help="LoRA dropout probability")
     args = parser.parse_args(argv)
 
     tokenizer = AutoTokenizer.from_pretrained("gpt2")
     model_cfg: dict[str, Any] = {
         "vocab_size": tokenizer.vocab_size,
would reformat src/codex_ml/cli/generate.py
--- src/codex_ml/analysis/extractors.py	2025-09-10 13:53:40.136279+00:00
+++ src/codex_ml/analysis/extractors.py	2025-09-10 13:53:43.622033+00:00
@@ -62,11 +62,15 @@
     def __init__(self) -> None:
         self.items: List[Dict[str, Any]] = []
 
     def visit_ClassDef(self, node: ast.ClassDef) -> None:  # pragma: no cover - simple
         bases = [
-            ast.unparse(b) if hasattr(ast, "unparse") else getattr(getattr(b, "id", None), "id", None)
+            (
+                ast.unparse(b)
+                if hasattr(ast, "unparse")
+                else getattr(getattr(b, "id", None), "id", None)
+            )
             for b in node.bases
         ]
         methods = [n.name for n in node.body if isinstance(n, ast.FunctionDef)]
         self.items.append({"name": node.name, "bases": bases, "methods": methods})
         self.generic_visit(node)
@@ -87,11 +91,12 @@
     # Patterns: simple boolean indicators
     out.patterns.append({"context_managers": any(isinstance(n, ast.With) for n in ast.walk(tree))})
     out.patterns.append(
         {
             "comprehensions": any(
-                isinstance(n, (ast.ListComp, ast.SetComp, ast.DictComp, ast.GeneratorExp)) for n in ast.walk(tree)
+                isinstance(n, (ast.ListComp, ast.SetComp, ast.DictComp, ast.GeneratorExp))
+                for n in ast.walk(tree)
             )
         }
     )
     return out
 
would reformat src/codex_ml/analysis/extractors.py
--- src/codex_ml/cli/audit_pipeline.py	2025-09-10 13:53:40.124279+00:00
+++ src/codex_ml/cli/audit_pipeline.py	2025-09-10 13:53:43.659595+00:00
@@ -62,11 +62,20 @@
 
 def _iter_py_files(root: Path) -> Iterable[Path]:
     for p in root.rglob("*.py"):
         if any(
             s in p.parts
-            for s in (".venv", "venv", "build", "dist", ".eggs", ".git", ".mypy_cache", ".pytest_cache")
+            for s in (
+                ".venv",
+                "venv",
+                "build",
+                "dist",
+                ".eggs",
+                ".git",
+                ".mypy_cache",
+                ".pytest_cache",
+            )
         ):
             continue
         yield p
 
 
@@ -81,11 +90,11 @@
                     "file": str(path),
                     "error": repr(e),
                     "error_capture": {
                         "template": (
                             "Question for ChatGPT-5 {ts}:\nWhile performing [AUDIT_FILE:parse/extract], "
-                            "encountered the following error:\n{err}\nContext: file={file}\n" 
+                            "encountered the following error:\n{err}\nContext: file={file}\n"
                             "What are the possible causes, and how can this be resolved while preserving intended functionality?"
                         )
                     },
                 }
             )
@@ -112,11 +121,13 @@
 
 def main() -> None:
     ap = argparse.ArgumentParser()
     ap.add_argument("--root", type=str, default=".")
     ap.add_argument(
-        "--external-search", action="store_true", help="disabled by default; offline policy preferred"
+        "--external-search",
+        action="store_true",
+        help="disabled by default; offline policy preferred",
     )
     ap.add_argument("--out", type=str, default="analysis_report.json")
     args = ap.parse_args()
 
     root = Path(args.root).resolve()
would reformat src/codex_ml/cli/audit_pipeline.py
--- src/codex_ml/data/cli.py	2025-09-10 07:58:47.245140+00:00
+++ src/codex_ml/data/cli.py	2025-09-10 13:53:43.721019+00:00
@@ -17,13 +17,11 @@
     ap.add_argument("--num-workers", type=int, default=0)
     ap.add_argument("--prefetch", type=int, default=0)
     ap.add_argument("--max-samples", type=int, default=None)
     ap.add_argument("--delimiter", default="\t")
     ap.add_argument("--out", default="output/data_stats.json")
-    ap.add_argument(
-        "--stats-limit", type=int, default=None, help="Limit when computing stats"
-    )
+    ap.add_argument("--stats-limit", type=int, default=None, help="Limit when computing stats")
     args = ap.parse_args(argv)
 
     rows = stream_paths(
         args.paths,
         fmt=args.format,
would reformat src/codex_ml/data/cli.py
--- src/codex_ml/data/splits.py	2025-09-10 13:53:40.124279+00:00
+++ src/codex_ml/data/splits.py	2025-09-10 13:53:43.723760+00:00
@@ -1,18 +1,20 @@
 from typing import List, Sequence, Tuple
 
 import numpy as np
 
 
-def train_val_test_split(dataset: Sequence, val_frac: float = 0.1, test_frac: float = 0.1, seed: int = 42) -> Tuple[List, List, List]:
+def train_val_test_split(
+    dataset: Sequence, val_frac: float = 0.1, test_frac: float = 0.1, seed: int = 42
+) -> Tuple[List, List, List]:
     assert 0 <= val_frac < 1 and 0 <= test_frac < 1 and (val_frac + test_frac) < 1
     rng = np.random.default_rng(seed)
     idxs = np.arange(len(dataset))
     rng.shuffle(idxs)
     n = len(dataset)
     t = int(n * test_frac)
     v = int(n * val_frac)
     test_idx = idxs[:t]
-    val_idx = idxs[t:t+v]
-    train_idx = idxs[t+v:]
+    val_idx = idxs[t : t + v]
+    train_idx = idxs[t + v :]
     to_list = lambda arr: [dataset[i] for i in arr.tolist()]
     return to_list(train_idx), to_list(val_idx), to_list(test_idx)
would reformat src/codex_ml/data/splits.py
--- src/codex_ml/metrics/registry.py	2025-09-10 07:58:47.249140+00:00
+++ src/codex_ml/metrics/registry.py	2025-09-10 13:53:44.213596+00:00
@@ -133,11 +133,13 @@
             continue
         common = Counter(p_tok) & Counter(t_tok)
         tp = sum(common.values())
         precision = tp / len(p_tok) if p_tok else 0.0
         recall = tp / len(t_tok) if t_tok else 0.0
-        scores.append(2 * precision * recall / (precision + recall) if (precision + recall) else 0.0)
+        scores.append(
+            2 * precision * recall / (precision + recall) if (precision + recall) else 0.0
+        )
     return float(sum(scores) / len(scores)) if scores else 0.0
 
 
 def _distinct_ngrams(preds: Sequence[str], n: int) -> float:
     toks = [tok for p in preds for tok in _norm_str(p, remove_punct=True).split()]
would reformat src/codex_ml/metrics/registry.py
--- src/codex_ml/telemetry/server.py	2025-09-10 07:58:47.253140+00:00
+++ src/codex_ml/telemetry/server.py	2025-09-10 13:53:44.252310+00:00
@@ -3,10 +3,11 @@
 import logging
 from typing import Optional
 
 try:  # optional dependency
     from prometheus_client import start_http_server  # type: ignore
+
     _HAS_PROM = True
 except Exception:  # pragma: no cover - optional
     start_http_server = None  # type: ignore
     _HAS_PROM = False
 
would reformat src/codex_ml/telemetry/server.py
--- src/codex_ml/telemetry/metrics.py	2025-09-10 07:58:47.253140+00:00
+++ src/codex_ml/telemetry/metrics.py	2025-09-10 13:53:44.258839+00:00
@@ -4,18 +4,23 @@
 from functools import wraps
 from typing import Any, Callable
 
 try:  # optional dependency
     from prometheus_client import Counter, Histogram  # type: ignore
+
     _HAS_PROM = True
 except Exception:  # pragma: no cover - optional
     Counter = Histogram = None  # type: ignore
     _HAS_PROM = False
 
 REQUEST_LATENCY = Histogram("data_load_seconds", "Time spent loading data") if _HAS_PROM else None
-TRAIN_STEP_DURATION = Histogram("train_step_seconds", "Duration of each train step") if _HAS_PROM else None
-EXAMPLES_PROCESSED = Counter("examples_processed_total", "Number of processed examples") if _HAS_PROM else None
+TRAIN_STEP_DURATION = (
+    Histogram("train_step_seconds", "Duration of each train step") if _HAS_PROM else None
+)
+EXAMPLES_PROCESSED = (
+    Counter("examples_processed_total", "Number of processed examples") if _HAS_PROM else None
+)
 
 
 def track_time(histogram: Any) -> Callable[[Callable[..., Any]], Callable[..., Any]]:
     """Decorator recording execution time in ``histogram`` if available."""
 
@@ -26,8 +31,9 @@
             try:
                 return fn(*args, **kwargs)
             finally:
                 if _HAS_PROM and histogram is not None:
                     histogram.observe(time.time() - start)
+
         return wrapper
 
     return decorator
would reformat src/codex_ml/telemetry/metrics.py
--- src/codex_ml/tokenization/train_tokenizer.py	2025-09-10 07:58:47.253140+00:00
+++ src/codex_ml/tokenization/train_tokenizer.py	2025-09-10 13:53:44.410684+00:00
@@ -66,10 +66,11 @@
 if hydra is not None:  # pragma: no cover - hydra integration
 
     @hydra.main(config_path="../../configs", config_name="train_tokenizer", version_base=None)
     def main(cfg: TrainTokenizerConfig) -> None:  # type: ignore[misc]
         run(cfg)
+
 else:  # pragma: no cover - fallback when hydra missing
 
     def main(cfg: TrainTokenizerConfig) -> None:  # type: ignore[override]
         run(cfg)
 
would reformat src/codex_ml/tokenization/train_tokenizer.py
--- src/codex_ml/monitoring/codex_logging.py	2025-09-10 07:58:47.249140+00:00
+++ src/codex_ml/monitoring/codex_logging.py	2025-09-10 13:53:44.457439+00:00
@@ -237,15 +237,13 @@
 
     global _GIT_COMMIT
     if _GIT_COMMIT is None:
         try:  # pragma: no cover - git may be missing
             root = Path(__file__).resolve().parents[3]
-            _GIT_COMMIT = (
-                subprocess.check_output(
-                    ["git", "-C", str(root), "rev-parse", "HEAD"], text=True
-                ).strip()
-            )
+            _GIT_COMMIT = subprocess.check_output(
+                ["git", "-C", str(root), "rev-parse", "HEAD"], text=True
+            ).strip()
         except Exception:
             _GIT_COMMIT = None
     return _GIT_COMMIT
 
 
@@ -303,16 +301,11 @@
             pynvml.nvmlShutdown()
             gpu_done = True
         except Exception:
             gpu_done = False
 
-    if (
-        not gpu_done
-        and torch is not None
-        and hasattr(torch, "cuda")
-        and torch.cuda.is_available()
-    ):
+    if not gpu_done and torch is not None and hasattr(torch, "cuda") and torch.cuda.is_available():
         gpus = []
         util_sum = 0.0
         try:  # pragma: no cover - optional
             for i in range(torch.cuda.device_count()):
                 props = torch.cuda.get_device_properties(i)
would reformat src/codex_ml/monitoring/codex_logging.py
--- src/codex_ml/training/callbacks.py	2025-09-10 07:58:47.253140+00:00
+++ src/codex_ml/training/callbacks.py	2025-09-10 13:53:44.515519+00:00
@@ -14,13 +14,11 @@
 
 
 class EarlyStopping:
     """Signal training halt when a monitored metric plateaus."""
 
-    def __init__(
-        self, patience: int = 3, min_delta: float = 0.0, mode: str = "min"
-    ):
+    def __init__(self, patience: int = 3, min_delta: float = 0.0, mode: str = "min"):
         self.patience, self.min_delta = patience, min_delta
         self.mode = mode
         self.best = None
         self.bad = 0
 
@@ -41,6 +39,5 @@
         self.bad += 1
         return self.bad >= self.patience
 
 
 # END: CODEX_TRAINING_CALLBACKS
-
would reformat src/codex_ml/training/callbacks.py
--- src/codex_ml/utils/env.py	2025-09-10 07:58:47.253140+00:00
+++ src/codex_ml/utils/env.py	2025-09-10 13:53:44.647900+00:00
@@ -14,14 +14,11 @@
 
 def _git_commit(root: Optional[Path] = None) -> Optional[str]:
     """Return current Git commit hash if available."""
     root = root or Path(__file__).resolve().parent.parent.parent.parent
     try:
-        return (
-            subprocess.check_output(["git", "rev-parse", "HEAD"], cwd=root, text=True)
-            .strip()
-        )
+        return subprocess.check_output(["git", "rev-parse", "HEAD"], cwd=root, text=True).strip()
     except Exception:
         return None
 
 
 def environment_summary() -> Dict[str, Any]:
would reformat src/codex_ml/utils/env.py
--- src/codex_ml/utils/provenance.py	2025-09-10 07:58:47.253140+00:00
+++ src/codex_ml/utils/provenance.py	2025-09-10 13:53:44.792395+00:00
@@ -52,13 +52,11 @@
 
         cuda = getattr(torch.version, "cuda", None)
         if cuda:
             info["cuda_version"] = cuda
         if torch.cuda.is_available():
-            info["gpus"] = [
-                torch.cuda.get_device_name(i) for i in range(torch.cuda.device_count())
-            ]
+            info["gpus"] = [torch.cuda.get_device_name(i) for i in range(torch.cuda.device_count())]
     except Exception:
         pass
     try:  # pragma: no cover - optional deps
         from codex_ml.monitoring.codex_logging import _codex_sample_system
 
would reformat src/codex_ml/utils/provenance.py
--- src/ingestion/io_text.py	2025-09-10 07:58:47.253140+00:00
+++ src/ingestion/io_text.py	2025-09-10 13:53:44.902281+00:00
@@ -87,11 +87,13 @@
 
 
 __all__ = ["read_text"]
 
 
-def read_text(path: Union[Path, str], encoding: str = "utf-8", errors: str = "strict") -> Tuple[str, str]:
+def read_text(
+    path: Union[Path, str], encoding: str = "utf-8", errors: str = "strict"
+) -> Tuple[str, str]:
     """Read text from ``path`` normalising newlines and stripping BOMs.
 
     Returns a tuple (text, used_encoding).
 
     Parameters
would reformat src/ingestion/io_text.py
--- src/ingestion/__init__.py	2025-09-10 07:58:47.253140+00:00
+++ src/ingestion/__init__.py	2025-09-10 13:53:45.026427+00:00
@@ -70,12 +70,14 @@
         """Deterministic shuffle fallback (seeded RNG)."""
         items = list(seq)
         rng = random.Random(seed)
         rng.shuffle(items)
         return items
+
 else:
     deterministic_shuffle = _deterministic_shuffle  # type: ignore
+
 
 # Provide a detect_encoding wrapper that uses repo detector, io_text helper, or a conservative fallback.
 def detect_encoding(path: Union[str, Path]) -> str:
     """Best-effort detect the file encoding.
 
@@ -123,11 +125,13 @@
 
     return "utf-8"
 
 
 # Internal helper to normalise various historical read_text signatures.
-def _call_repo_read_text(path: Path, encoding: str = "utf-8", errors: str = "strict") -> Tuple[str, Optional[str]]:
+def _call_repo_read_text(
+    path: Path, encoding: str = "utf-8", errors: str = "strict"
+) -> Tuple[str, Optional[str]]:
     """Call repository io_text.read_text in a way that handles multiple historical signatures.
 
     Returns:
         (text, used_encoding_or_None)
     """
@@ -161,11 +165,13 @@
         return result, None
     # Coerce to string for unexpected return types
     return str(result), None
 
 
-def _manual_read_text(path: Path, encoding: str = "utf-8", errors: str = "strict") -> Tuple[str, str]:
+def _manual_read_text(
+    path: Path, encoding: str = "utf-8", errors: str = "strict"
+) -> Tuple[str, str]:
     """Manual robust reader used as a last-resort fallback.
 
     Returns (text, used_encoding)
     """
     try:
@@ -279,11 +285,15 @@
 
     if not isinstance(chunk_size, int) or chunk_size <= 0:
         raise ValueError("chunk_size must be a positive integer when provided")
 
     def _iter() -> Iterator[str]:
-        enc = detect_encoding(file_path) if isinstance(encoding, str) and encoding.lower() == "auto" else encoding
+        enc = (
+            detect_encoding(file_path)
+            if isinstance(encoding, str) and encoding.lower() == "auto"
+            else encoding
+        )
         # Use built-in open with detected encoding to stream text
         try:
             with file_path.open("r", encoding=enc, errors="replace") as fh:
                 while True:
                     chunk = fh.read(chunk_size)
would reformat src/ingestion/__init__.py
--- src/codex_ml/symbolic_pipeline.py	2025-09-10 07:58:47.253140+00:00
+++ src/codex_ml/symbolic_pipeline.py	2025-09-10 13:53:45.055979+00:00
@@ -144,16 +144,11 @@
     lr: float = 1e-2
     batch_size: int = 8
     seed: int = 0
 
     def __post_init__(self) -> None:
-        if (
-            self.ppo_clip <= 0
-            or self.kl_penalty < 0
-            or self.epochs <= 0
-            or self.lr <= 0
-        ):
+        if self.ppo_clip <= 0 or self.kl_penalty < 0 or self.epochs <= 0 or self.lr <= 0:
             raise ValueError("invalid RLHFCfg parameters")
 
 
 # ---------------------------------------------------------------------------
 # Model handles
@@ -419,13 +414,11 @@
     """Negative reward computed from top model tokens under the reward model."""
     token_probs = model.meta.get("token_probs", {})
     idx = rm.meta.get("token_index", {})
     weights = rm.meta.get("weights", [])
     # approximate by scoring top-k tokens
-    top_tokens = [
-        t for t, _ in sorted(token_probs.items(), key=lambda x: x[1], reverse=True)[:4]
-    ]
+    top_tokens = [t for t, _ in sorted(token_probs.items(), key=lambda x: x[1], reverse=True)[:4]]
     reward = sum(weights[idx[t]] if t in idx else 0.0 for t in top_tokens)
     return -reward
 
 
 def regularizer(model: ModelHandle) -> float:
would reformat src/codex_ml/symbolic_pipeline.py
--- tests/cli/test_infer_cli_lora.py	2025-09-10 07:58:47.257140+00:00
+++ tests/cli/test_infer_cli_lora.py	2025-09-10 13:53:45.171837+00:00
@@ -39,18 +39,20 @@
 
     monkeypatch.setattr(infer, "AutoTokenizer", DummyAutoTokenizer)
     monkeypatch.setattr(infer, "load_model_with_optional_lora", fake_loader)
     monkeypatch.setenv("ARTIFACTS_DIR", str(tmp_path))
 
-    infer.main([
-        "--lora-r",
-        "4",
-        "--lora-alpha",
-        "32",
-        "--lora-dropout",
-        "0.1",
-    ])
+    infer.main(
+        [
+            "--lora-r",
+            "4",
+            "--lora-alpha",
+            "32",
+            "--lora-dropout",
+            "0.1",
+        ]
+    )
 
     assert called["lora_enabled"] is True
     assert called["lora_r"] == 4
     assert called["lora_alpha"] == 32
     assert called["lora_dropout"] == 0.1
would reformat tests/cli/test_infer_cli_lora.py
--- tests/_codex_introspect.py	2025-09-10 07:58:47.253140+00:00
+++ tests/_codex_introspect.py	2025-09-10 13:53:45.199677+00:00
@@ -94,14 +94,11 @@
                     "name": name,
                     "callable": fn,
                     "signature": str(sig) if sig else "unknown",
                     "accepts_db_path": (
                         sig
-                        and any(
-                            k in sig.parameters
-                            for k in ["db", "db_path", "path", "database"]
-                        )
+                        and any(k in sig.parameters for k in ["db", "db_path", "path", "database"])
                     ),
                 }
     return {"error": "no writer found", "errors": errors}
 
 
would reformat tests/_codex_introspect.py
--- src/utils/checkpointing.py	2025-09-10 07:58:47.253140+00:00
+++ src/utils/checkpointing.py	2025-09-10 13:53:45.264312+00:00
@@ -56,13 +56,11 @@
             np_state[4],
         ]
     if TORCH_AVAILABLE:
         state["torch"] = {"cpu": torch.random.get_rng_state().tolist()}
         if torch.cuda.is_available():  # pragma: no cover - cuda optional
-            state["torch"]["cuda"] = [
-                s.tolist() for s in torch.cuda.get_rng_state_all()
-            ]
+            state["torch"]["cuda"] = [s.tolist() for s in torch.cuda.get_rng_state_all()]
     return state
 
 
 def _load_rng(state: Dict[str, Any]) -> None:
     """Restore RNG state from :func:`_dump_rng`."""
@@ -129,21 +127,17 @@
         ep_dir.mkdir(parents=True, exist_ok=True)
         (ep_dir / "meta.json").write_text(
             json.dumps({"epoch": epoch, "metrics": metrics or {}}, indent=2),
             encoding="utf-8",
         )
-        (ep_dir / "rng.json").write_text(
-            json.dumps(_dump_rng(), indent=2), encoding="utf-8"
-        )
+        (ep_dir / "rng.json").write_text(json.dumps(_dump_rng(), indent=2), encoding="utf-8")
 
         if metrics:
             best_file = self.root / "best.json"
             items = []
             if best_file.exists():
-                items = json.loads(best_file.read_text(encoding="utf-8")).get(
-                    "items", []
-                )
+                items = json.loads(best_file.read_text(encoding="utf-8")).get("items", [])
             entry = {"epoch": epoch, "metrics": metrics, "path": str(ep_dir)}
             items.append(entry)
 
             def keyfn(x: Dict[str, Any]) -> float:
                 return x.get("metrics", {}).get("val_loss", float("inf"))
@@ -176,6 +170,5 @@
     "CheckpointManager",
     "dump_rng_state",
     "load_rng_state",
     "set_seed",
 ]
-
would reformat src/utils/checkpointing.py
--- tests/data/test_loaders.py	2025-09-10 13:53:40.136279+00:00
+++ tests/data/test_loaders.py	2025-09-10 13:53:45.305480+00:00
@@ -5,11 +5,11 @@
 
 def _make_files(tmp_path: Path, n: int) -> list[Path]:
     paths = []
     for i in range(n):
         p = tmp_path / f"{i}.jsonl"
-        p.write_text('{"prompt": "p'+str(i)+'", "completion": "c"}\n', encoding="utf-8")
+        p.write_text('{"prompt": "p' + str(i) + '", "completion": "c"}\n', encoding="utf-8")
         paths.append(p)
     return paths
 
 
 def test_stream_paths_seed_same_order(tmp_path: Path):
would reformat tests/data/test_loaders.py
--- tests/eval/test_bleu_rouge_fallbacks.py	2025-09-10 07:58:47.257140+00:00
+++ tests/eval/test_bleu_rouge_fallbacks.py	2025-09-10 13:53:45.347064+00:00
@@ -14,11 +14,15 @@
 def test_bleu_rouge_fallbacks(monkeypatch, tmp_path: Path):
     # Simulate missing optional deps
     real_import = builtins.__import__
 
     def fake_import(name, *args, **kwargs):
-        if name.startswith("nltk") or name.startswith("rouge_score") or name.startswith("sacrebleu"):
+        if (
+            name.startswith("nltk")
+            or name.startswith("rouge_score")
+            or name.startswith("sacrebleu")
+        ):
             raise ImportError("missing optional dependency")
         return real_import(name, *args, **kwargs)
 
     monkeypatch.setattr(builtins, "__import__", fake_import)
 
would reformat tests/eval/test_bleu_rouge_fallbacks.py
--- tests/interfaces/test_registry_loader.py	2025-09-10 07:58:47.257140+00:00
+++ tests/interfaces/test_registry_loader.py	2025-09-10 13:53:45.438564+00:00
@@ -6,13 +6,11 @@
 from codex_ml.interfaces import get_component, load_component
 
 
 def test_load_and_get_component(tmp_path):
     module_path = tmp_path / "tmp_mod.py"
-    module_path.write_text(
-        "class Dummy:\n    def __init__(self):\n        self.flag = True\n"
-    )
+    module_path.write_text("class Dummy:\n    def __init__(self):\n        self.flag = True\n")
     sys.path.insert(0, str(tmp_path))
     try:
         cls = load_component("tmp_mod:Dummy")
         assert cls.__name__ == "Dummy"
         os.environ["CODEX_DUMMY_PATH"] = "tmp_mod:Dummy"
would reformat tests/interfaces/test_registry_loader.py
--- tests/gates/test_quality_gates.py	2025-09-10 07:58:47.257140+00:00
+++ tests/gates/test_quality_gates.py	2025-09-10 13:53:45.535959+00:00
@@ -61,10 +61,11 @@
     calls = {}
 
     class DummyWriter:
         def __init__(self, logdir):
             calls["tb"] = logdir
+
         def add_scalar(self, *args, **kwargs):
             pass
 
     monkeypatch.setattr(cl, "SummaryWriter", DummyWriter)
     monkeypatch.setattr(cl, "wandb", SimpleNamespace(init=lambda **kw: calls.setdefault("wb", kw)))
@@ -86,10 +87,11 @@
     assert calls["ml_uri"] == "uri" and calls["ml_exp"] == "exp"
 
 
 # Interface loader
 
+
 def test_interface_loader_env(tmp_path):
     module = tmp_path / "dummy_tok.py"
     module.write_text("class Tok:\n    def __init__(self):\n        self.ok = True\n")
     sys.path.insert(0, str(tmp_path))
     os.environ["CODEX_TOKENIZER_PATH"] = "dummy_tok:Tok"
would reformat tests/gates/test_quality_gates.py
--- src/codex_ml/utils/checkpointing.py	2025-09-10 07:58:47.253140+00:00
+++ src/codex_ml/utils/checkpointing.py	2025-09-10 13:53:45.563408+00:00
@@ -51,10 +51,11 @@
         ctx: str,
         *,
         errors_path: Path | None = None,
     ) -> str:
         return ""
+
 
 try:  # pragma: no cover - optional torch dependency
     import torch
 
     TORCH_AVAILABLE = True
would reformat src/codex_ml/utils/checkpointing.py
--- tests/telemetry/test_instrumentation.py	2025-09-10 07:58:47.257140+00:00
+++ tests/telemetry/test_instrumentation.py	2025-09-10 13:53:45.650399+00:00
@@ -1,6 +1,5 @@
-
 from codex_ml.telemetry import REQUEST_LATENCY, track_time
 
 
 def dummy():
     pass
would reformat tests/telemetry/test_instrumentation.py
--- tests/smoke/test_logging_flags_end_to_end.py	2025-09-10 13:53:40.148279+00:00
+++ tests/smoke/test_logging_flags_end_to_end.py	2025-09-10 13:53:45.675240+00:00
@@ -22,13 +22,18 @@
     if hasattr(mod, "_codex_patch_argparse"):
         mod._codex_patch_argparse(ap)
     else:
         pytest.skip("_codex_patch_argparse not found")
 
-    ns = ap.parse_args([
-        "--enable-wandb", "--mlflow-enable", "--mlflow-experiment", "codex-smoke",
-    ])
+    ns = ap.parse_args(
+        [
+            "--enable-wandb",
+            "--mlflow-enable",
+            "--mlflow-experiment",
+            "codex-smoke",
+        ]
+    )
 
     os.environ.setdefault("WANDB_MODE", "offline")
 
     with tempfile.TemporaryDirectory() as tmp:
         run_dir = Path(tmp) / "run"
would reformat tests/smoke/test_logging_flags_end_to_end.py
--- tests/smoke/test_hf_trainer_hello.py	2025-09-10 13:53:40.148279+00:00
+++ tests/smoke/test_hf_trainer_hello.py	2025-09-10 13:53:45.686760+00:00
@@ -37,13 +37,19 @@
     model = AutoModelForCausalLM.from_pretrained(model_id)
 
     with tempfile.TemporaryDirectory() as tmp:
         out = Path(tmp) / "out"
         args = TrainingArguments(
-            output_dir=str(out), overwrite_output_dir=True,
-            per_device_train_batch_size=2, num_train_epochs=1, max_steps=1,
-            logging_steps=1, save_steps=1, report_to=[], fp16=False,
+            output_dir=str(out),
+            overwrite_output_dir=True,
+            per_device_train_batch_size=2,
+            num_train_epochs=1,
+            max_steps=1,
+            logging_steps=1,
+            save_steps=1,
+            report_to=[],
+            fp16=False,
         )
         trainer = Trainer(model=model, args=args, train_dataset=ds_tok, data_collator=collator)
         trainer.train()
         trainer.save_state()
         assert (out / "trainer_state.json").exists()
would reformat tests/smoke/test_hf_trainer_hello.py
--- tests/test_checkpoint_commit_meta.py	2025-09-10 07:58:47.261140+00:00
+++ tests/test_checkpoint_commit_meta.py	2025-09-10 13:53:45.727409+00:00
@@ -18,8 +18,10 @@
     path = tmp_path / "ckpt.pt"
     save_checkpoint(str(path), model, None, None, epoch=0)
     ckpt = torch.load(str(path), weights_only=False)
     extra = ckpt["extra"]
     repo_root = Path(__file__).resolve().parent.parent
-    commit = subprocess.check_output(["git", "-C", str(repo_root), "rev-parse", "HEAD"], text=True).strip()
+    commit = subprocess.check_output(
+        ["git", "-C", str(repo_root), "rev-parse", "HEAD"], text=True
+    ).strip()
     assert extra["git_commit"] == commit
     assert "system" in extra
would reformat tests/test_checkpoint_commit_meta.py
--- tests/test_chat_session.py	2025-09-10 07:58:47.261140+00:00
+++ tests/test_chat_session.py	2025-09-10 13:53:45.783977+00:00
@@ -67,21 +67,17 @@
 
 
 def test_exception_restores_env():
     ChatSession = _load_chatsession()
     if ChatSession is None:
-        pytest.xfail(
-            "ChatSession not found/importable; implement ChatSession or update mapping"
-        )
+        pytest.xfail("ChatSession not found/importable; implement ChatSession or update mapping")
     os.environ["CODEX_SESSION_ID"] = "dummy"
     try:
         try:
             cs = ChatSession()
         except TypeError:
-            pytest.xfail(
-                "ChatSession requires args; provide a zero-arg default or factory"
-            )
+            pytest.xfail("ChatSession requires args; provide a zero-arg default or factory")
         with cs:
             raise RuntimeError("boom")
     except RuntimeError:
         pass
     assert os.environ.get("CODEX_SESSION_ID") in (
would reformat tests/test_chat_session.py
--- tests/test_codex_maintenance.py	2025-09-10 07:58:47.261140+00:00
+++ tests/test_codex_maintenance.py	2025-09-10 13:53:45.825930+00:00
@@ -19,6 +19,6 @@
     out = proc.stdout
     if not out:
         pytest.skip("maintenance summary not produced")
     assert "- ok: success" in out
     assert "- fail: failure" in out
-    assert proc.returncode != 0
\ No newline at end of file
+    assert proc.returncode != 0
would reformat tests/test_codex_maintenance.py
--- tests/test_codex_cli.py	2025-09-10 07:58:47.261140+00:00
+++ tests/test_codex_cli.py	2025-09-10 13:53:45.853037+00:00
@@ -25,6 +25,6 @@
     assert _run(["test"]) == 0
 
 
 @pytest.mark.skip(reason="codex_cli tooling unavailable in tests")
 def test_cli_audit_smoke():
-    assert _run(["audit"]) == 0
\ No newline at end of file
+    assert _run(["audit"]) == 0
would reformat tests/test_codex_cli.py
--- tests/test_determinism.py	2025-09-10 07:58:47.261140+00:00
+++ tests/test_determinism.py	2025-09-10 13:53:45.879765+00:00
@@ -1,6 +1,5 @@
-
 import torch
 
 from training.engine_hf_trainer import _seed_everything
 
 
would reformat tests/test_determinism.py
--- tests/test_db_utils.py	2025-09-10 07:58:47.261140+00:00
+++ tests/test_db_utils.py	2025-09-10 13:53:45.925785+00:00
@@ -16,18 +16,20 @@
     )
 
 
 def test_infer_on_session_events_minimal():
     con = sqlite3.connect(":memory:")
-    con.executescript("""
+    con.executescript(
+        """
         CREATE TABLE session_events(
             id INTEGER PRIMARY KEY,
             session_id TEXT,
             created_at TEXT,
             content TEXT
         );
-    """)
+    """
+    )
     try:
         assert "session_events" in list_tables(con)
         t = infer_probable_table(con, candidates=("session_events", "logs"))
         assert t == "session_events"
         cols = infer_columns(con, t)
@@ -38,15 +40,17 @@
         con.close()
 
 
 def test_infer_on_logs_variants():
     con = sqlite3.connect(":memory:")
-    con.executescript("""
+    con.executescript(
+        """
         CREATE TABLE logs(
             ts REAL, sid TEXT, message TEXT, level TEXT
         );
-    """)
+    """
+    )
     try:
         t = infer_probable_table(con, candidates=("session_events", "logs"))
         assert t == "logs"
         cols = infer_columns(con, t)
         assert cols["timestamp"] in ("ts",)
would reformat tests/test_db_utils.py
--- tests/test_codex_run_tasks.py	2025-09-10 07:58:47.261140+00:00
+++ tests/test_codex_run_tasks.py	2025-09-10 13:53:45.933888+00:00
@@ -31,11 +31,14 @@
     for name in q_candidates:
         if hasattr(mod, name):
             val = getattr(mod, name)
             return (
                 tmp_path / val,
-                tmp_path / getattr(mod, next(filter(lambda n: hasattr(mod, n), c_candidates), c_candidates[-1])),
+                tmp_path
+                / getattr(
+                    mod, next(filter(lambda n: hasattr(mod, n), c_candidates), c_candidates[-1])
+                ),
             )
     return (tmp_path / "questions.md", tmp_path / "comment.txt")
 
 
 def _call_run_task_flexibly(*args, **kwargs) -> int:
would reformat tests/test_codex_run_tasks.py
--- tests/test_deep_research_task_process.py	2025-09-10 07:58:47.261140+00:00
+++ tests/test_deep_research_task_process.py	2025-09-10 13:53:45.951744+00:00
@@ -3,25 +3,21 @@
 
 
 def test_repo_root_detection(monkeypatch):
     monkeypatch.setenv("REPO_IMPROVEMENT_DRY_RUN", "1")
     monkeypatch.delenv("CODEX_AUTO_RUN", raising=False)
-    mod = importlib.reload(
-        importlib.import_module("scripts.deep_research_task_process")
-    )
+    mod = importlib.reload(importlib.import_module("scripts.deep_research_task_process"))
     repo_root = Path(mod.REPO_ROOT)
     assert (repo_root / ".pre-commit-config.yaml").exists()
     assert (repo_root / "src" / "codex" / "logging").exists()
     assert (repo_root / ".git").exists()
 
 
 def test_single_execution_guard(monkeypatch):
     monkeypatch.setenv("REPO_IMPROVEMENT_DRY_RUN", "1")
     monkeypatch.delenv("CODEX_AUTO_RUN", raising=False)
-    mod = importlib.reload(
-        importlib.import_module("scripts.deep_research_task_process")
-    )
+    mod = importlib.reload(importlib.import_module("scripts.deep_research_task_process"))
 
     calls = {"count": 0}
 
     def fake_run_all():
         calls["count"] += 1
--- tests/test_error_log.py	2025-09-10 07:58:47.261140+00:00
+++ tests/test_error_log.py	2025-09-10 13:53:45.953270+00:00
@@ -8,6 +8,5 @@
     p = tmp_path / "log.txt"
     error_log.log("x", path=p)
     monkeypatch.setattr(time, "time", lambda: 10**9)
     error_log.log("y", path=p)
     assert p.exists()
-
would reformat tests/test_deep_research_task_process.py
would reformat tests/test_error_log.py
--- tests/test_export.py	2025-09-10 07:58:47.261140+00:00
+++ tests/test_export.py	2025-09-10 13:53:46.007175+00:00
@@ -15,12 +15,11 @@
             "CREATE TABLE session_events("
             "session_id TEXT, timestamp TEXT, role TEXT, "
             "message TEXT, seq INTEGER, meta TEXT)"
         )
         c.executemany(
-            "INSERT INTO session_events(session_id, timestamp, role, message) "
-            "VALUES (?,?,?,?)",
+            "INSERT INTO session_events(session_id, timestamp, role, message) " "VALUES (?,?,?,?)",
             [
                 ("s1", "2024-01-01T00:00:00", "user", "hi"),
                 ("s1", "2024-01-01T00:01:00", "assistant", "hello"),
             ],
         )
would reformat tests/test_export.py
--- tests/test_import_ndjson_dedup.py	2025-09-10 07:58:47.261140+00:00
+++ tests/test_import_ndjson_dedup.py	2025-09-10 13:53:46.102459+00:00
@@ -13,13 +13,11 @@
     session_hooks.LOG_DIR.mkdir(parents=True, exist_ok=True)
     with session() as s:
         sid = s.sid
     # reimport should not duplicate start/end
     count_before = (
-        sqlite3.connect(db_path)
-        .execute("SELECT COUNT(*) FROM session_events")
-        .fetchone()[0]
+        sqlite3.connect(db_path).execute("SELECT COUNT(*) FROM session_events").fetchone()[0]
     )
     import_ndjson.import_session(sid, log_dir=log_dir, db_path=db_path)
     with sqlite3.connect(db_path) as con:
         rows = con.execute(
             "SELECT message, COUNT(*) FROM session_events "
@@ -27,11 +25,7 @@
         ).fetchall()
     pairs = dict(rows)
     assert pairs.get("session_start") == 1
     assert pairs.get("session_end") == 1
     # ensure no extra rows created beyond original two
-    total = (
-        sqlite3.connect(db_path)
-        .execute("SELECT COUNT(*) FROM session_events")
-        .fetchone()[0]
-    )
+    total = sqlite3.connect(db_path).execute("SELECT COUNT(*) FROM session_events").fetchone()[0]
     assert total == count_before
would reformat tests/test_import_ndjson_dedup.py
--- tests/test_git_tag.py	2025-09-10 13:53:40.156279+00:00
+++ tests/test_git_tag.py	2025-09-10 13:53:46.108308+00:00
@@ -91,13 +91,11 @@
     # check_output might be a different object or missing (defensive).
     monkeypatch.setattr(subprocess, "check_output", boom, raising=False)
     assert current_commit() is None
 
 
-@pytest.mark.parametrize(
-    "stderr_msg", ["fatal: not a git repository", "git: command not found"]
-)
+@pytest.mark.parametrize("stderr_msg", ["fatal: not a git repository", "git: command not found"])
 def test_handles_missing_repo_or_git(monkeypatch, stderr_msg):
     """
     Module-style: When git is missing or the directory is not a git repo,
     CalledProcessError with an informative stderr should cause current_commit()
     to return None.
@@ -116,13 +114,11 @@
         lambda *a, **k: (_ for _ in ()).throw(Err()),
     )
     assert git_tag.current_commit() is None
 
 
-@pytest.mark.parametrize(
-    "stderr_msg", ["fatal: not a git repository", "git: command not found"]
-)
+@pytest.mark.parametrize("stderr_msg", ["fatal: not a git repository", "git: command not found"])
 def test_current_commit_handles_missing_repo_or_git_direct(monkeypatch, stderr_msg):
     """
     Direct-function test for missing git/repo scenarios. Skips if direct import
     isn't available.
     """
would reformat tests/test_git_tag.py
--- tests/test_import_ndjson.py	2025-09-10 07:58:47.261140+00:00
+++ tests/test_import_ndjson.py	2025-09-10 13:53:46.143254+00:00
@@ -38,24 +38,17 @@
     inserted = import_ndjson.import_session(session_id)
     assert inserted == 0
 
     # append new event and re-import
     with ndjson_file.open("a", encoding="utf-8") as f:
-        f.write(
-            json.dumps({"ts": "2024-01-01T00:00:02Z", "role": "user", "message": "hi"})
-            + "\n"
-        )
+        f.write(json.dumps({"ts": "2024-01-01T00:00:02Z", "role": "user", "message": "hi"}) + "\n")
     inserted = import_ndjson.import_session(session_id)
     assert inserted == 1
 
     con = sqlite3.connect(str(db_path))
     try:
-        rows = list(
-            con.execute(
-                "SELECT session_id, seq, message FROM session_events ORDER BY seq"
-            )
-        )
+        rows = list(con.execute("SELECT session_id, seq, message FROM session_events ORDER BY seq"))
         assert rows == [
             (session_id, 1, "session_start"),
             (session_id, 2, "session_end"),
             (session_id, 3, "hi"),
         ]
would reformat tests/test_import_ndjson.py
--- tests/test_fetch_messages.py	2025-09-10 07:58:47.261140+00:00
+++ tests/test_fetch_messages.py	2025-09-10 13:53:46.228920+00:00
@@ -77,13 +77,11 @@
     if db_path is not None and meta.get("accepts_db_path"):
         return list(fn(session_id, db_path=str(db_path)))
     # try kwargs variations
     try:
         return (
-            list(fn(session_id, db=str(db_path)))
-            if db_path is not None
-            else list(fn(session_id))
+            list(fn(session_id, db=str(db_path))) if db_path is not None else list(fn(session_id))
         )
     except TypeError:
         try:
             return (
                 list(fn(session_id, path=str(db_path)))
would reformat tests/test_fetch_messages.py
--- tests/test_modeling_utils.py	2025-09-10 13:53:40.144279+00:00
+++ tests/test_modeling_utils.py	2025-09-10 13:53:46.348607+00:00
@@ -11,11 +11,13 @@
         return fake_tok
 
     def fake_model_loader(*a, **k):  # pragma: no cover - trivial
         return fake_model
 
-    monkeypatch.setattr(modeling, "AutoTokenizer", types.SimpleNamespace(from_pretrained=fake_tok_loader))
+    monkeypatch.setattr(
+        modeling, "AutoTokenizer", types.SimpleNamespace(from_pretrained=fake_tok_loader)
+    )
     monkeypatch.setattr(
         modeling,
         "AutoModelForCausalLM",
         types.SimpleNamespace(from_pretrained=fake_model_loader),
     )
would reformat tests/test_modeling_utils.py
--- tests/test_runner_doctor.py	2025-09-10 13:53:40.144279+00:00
+++ tests/test_runner_doctor.py	2025-09-10 13:53:46.469310+00:00
@@ -1,10 +1,12 @@
+SAMPLE = {
+    "runners": [
+        {"id": 1, "name": "r1", "status": "online"},
+        {"id": 2, "name": "r2", "status": "offline"},
+    ]
+}
 
-SAMPLE = {"runners": [
-    {"id": 1, "name": "r1", "status": "online"},
-    {"id": 2, "name": "r2", "status": "offline"},
-]}
 
 def test_parse_offline(tmp_path, monkeypatch):
     import tools.runner_doctor as rd  # type: ignore
 
     def fake_req(path, token, method="GET"):
would reformat tests/test_runner_doctor.py
--- tests/test_resume.py	2025-09-10 07:58:47.265140+00:00
+++ tests/test_resume.py	2025-09-10 13:53:46.540177+00:00
@@ -42,13 +42,11 @@
         loss = torch.nn.CrossEntropyLoss()(model.l(x), y)
         loss.backward()
         opt.step()
         sch.step()
 
-    out2 = mgr.save(
-        2, model=model, optimizer=opt, scheduler=sch, metrics={"val_loss": 0.5}
-    )
+    out2 = mgr.save(2, model=model, optimizer=opt, scheduler=sch, metrics={"val_loss": 0.5})
     assert (out2 / "state.pt").exists()
 
     fresh = Tiny()
     opt2 = torch.optim.SGD(fresh.parameters(), lr=0.1)
     sch2 = torch.optim.lr_scheduler.StepLR(opt2, step_size=1, gamma=0.5)
@@ -58,15 +56,11 @@
 
 
 def test_retention_policy(tmp_path: Path) -> None:
     model = Tiny()
     opt = torch.optim.SGD(model.parameters(), lr=0.1)
-    mgr = CheckpointManager(
-        tmp_path / "output" / "checkpoints", keep_last=2, keep_best=1
-    )
+    mgr = CheckpointManager(tmp_path / "output" / "checkpoints", keep_last=2, keep_best=1)
     for e in range(1, 6):
         mgr.save(e, model, opt, metrics={"val_loss": 10 - e})
-    epochs = sorted(
-        p.name for p in (tmp_path / "output" / "checkpoints").glob("epoch-*")
-    )
+    epochs = sorted(p.name for p in (tmp_path / "output" / "checkpoints").glob("epoch-*"))
     assert "epoch-5" in epochs and "epoch-4" in epochs
     assert "epoch-3" not in epochs
would reformat tests/test_resume.py
--- tests/test_session_query_cli.py	2025-09-10 07:58:47.265140+00:00
+++ tests/test_session_query_cli.py	2025-09-10 13:53:46.620519+00:00
@@ -12,12 +12,11 @@
             "CREATE TABLE session_events("
             "timestamp TEXT, session_id TEXT, role TEXT, "
             "message TEXT, seq INTEGER, meta TEXT)"
         )
         con.executemany(
-            "INSERT INTO session_events(timestamp, session_id, role, message) "
-            "VALUES (?,?,?,?)",
+            "INSERT INTO session_events(timestamp, session_id, role, message) " "VALUES (?,?,?,?)",
             [
                 ("2025-01-01T00:00:00Z", "S1", "user", "hi"),
                 ("2025-01-01T00:00:01Z", "S1", "assistant", "yo"),
             ],
         )
would reformat tests/test_session_query_cli.py
--- tests/test_session_hooks.py	2025-09-10 07:58:47.265140+00:00
+++ tests/test_session_hooks.py	2025-09-10 13:53:46.647176+00:00
@@ -18,58 +18,56 @@
     def test_shell_helper_records_start_and_end(self):
         with tempfile.TemporaryDirectory() as td:
             logdir = pathlib.Path(td)
             sid = "test-sess-1234"
             runner = logdir / "runner.sh"
-            runner.write_text(f"""#!/usr/bin/env bash
+            runner.write_text(
+                f"""#!/usr/bin/env bash
 set -euo pipefail
 export CODEX_SESSION_LOG_DIR=\"{logdir.as_posix()}\"
 export CODEX_SESSION_ID=\"{sid}\"
 . \"{SHELL_HELPER.as_posix()}\"
 codex_session_start \"unit\"
 trap 'codex_session_end $?' EXIT
 true
-""")
+"""
+            )
             runner.chmod(0o755)
             env = os.environ.copy()
             env["PYTHONPATH"] = str(ROOT / "src")
             subprocess.run([runner.as_posix()], check=True, env=env)
             ndjson = logdir / f"{sid}.ndjson"
             self.assertTrue(ndjson.exists(), "ndjson log not found")
-            lines = [
-                json.loads(line) for line in ndjson.read_text().strip().splitlines()
-            ]
+            lines = [json.loads(line) for line in ndjson.read_text().strip().splitlines()]
             types = [line.get("type") for line in lines]
             self.assertIn("session_start", types)
             self.assertIn("session_end", types)
-            self.assertEqual(
-                len([t for t in types if t in ("session_start", "session_end")]), 2
-            )
+            self.assertEqual(len([t for t in types if t in ("session_start", "session_end")]), 2)
 
     def test_shell_helper_recovers_missing_dir(self):
         with tempfile.TemporaryDirectory() as td:
             logdir = pathlib.Path(td)
             sid = "lost-dir-123"
             runner = logdir / "runner.sh"
-            runner.write_text(f"""#!/usr/bin/env bash
+            runner.write_text(
+                f"""#!/usr/bin/env bash
 set -euo pipefail
 export CODEX_SESSION_LOG_DIR=\"{logdir.as_posix()}\"
 export CODEX_SESSION_ID=\"{sid}\"
 . \"{SHELL_HELPER.as_posix()}\"
 codex_session_start
 rm -rf \"{logdir.as_posix()}\"
 codex_session_end 0
-""")
+"""
+            )
             runner.chmod(0o755)
             env = os.environ.copy()
             env["PYTHONPATH"] = str(ROOT / "src")
             subprocess.run([runner.as_posix()], check=True, env=env)
             ndjson = logdir / f"{sid}.ndjson"
             self.assertTrue(ndjson.exists(), "ndjson not recreated")
-            lines = [
-                json.loads(line) for line in ndjson.read_text().strip().splitlines()
-            ]
+            lines = [json.loads(line) for line in ndjson.read_text().strip().splitlines()]
             types = [line.get("type") for line in lines]
             self.assertIn("session_end", types)
 
     def test_shell_helper_handles_cwd_change(self):
         with tempfile.TemporaryDirectory() as td:
@@ -92,13 +90,11 @@
             env = os.environ.copy()
             env["PYTHONPATH"] = str(ROOT / "src")
             subprocess.run([runner.as_posix()], cwd=root, check=True, env=env)
             ndjson = root / "logs" / f"{sid}.ndjson"
             self.assertTrue(ndjson.exists(), "ndjson log not found in resolved logdir")
-            self.assertFalse(
-                (root / "sub" / "logs").exists(), "logdir should not depend on cwd"
-            )
+            self.assertFalse((root / "sub" / "logs").exists(), "logdir should not depend on cwd")
 
 
 class TestPythonSessionHooks(unittest.TestCase):
     def test_session_logs_after_cwd_change(self):
         with tempfile.TemporaryDirectory() as td:
@@ -116,16 +112,12 @@
                 "with session():\n"
                 "    pass\n"
             )
             subprocess.run([sys.executable, script.name], cwd=root, check=True, env=env)
             logdir = root / "logs"
-            self.assertTrue(
-                any(logdir.glob("*.ndjson")), "log not created in resolved dir"
-            )
-            self.assertFalse(
-                (root / "sub" / "logs").exists(), "logdir should not depend on cwd"
-            )
+            self.assertTrue(any(logdir.glob("*.ndjson")), "log not created in resolved dir")
+            self.assertFalse((root / "sub" / "logs").exists(), "logdir should not depend on cwd")
 
     def test_now_returns_zulu_timestamp(self):
         ts = session_hooks._now()
         self.assertTrue(ts.endswith("Z"))
         dt = datetime.fromisoformat(ts.replace("Z", "+00:00"))
would reformat tests/test_session_hooks.py
--- tests/test_session_query_smoke.py	2025-09-10 07:58:47.265140+00:00
+++ tests/test_session_query_smoke.py	2025-09-10 13:53:46.657533+00:00
@@ -19,12 +19,11 @@
         "CREATE TABLE session_events("  #
         "session_id TEXT, timestamp TEXT, "
         "role TEXT, message TEXT, seq INTEGER, meta TEXT)"
     )
     con.executemany(
-        "INSERT INTO session_events(session_id, timestamp, role, message) "
-        "VALUES (?,?,?,?)",
+        "INSERT INTO session_events(session_id, timestamp, role, message) " "VALUES (?,?,?,?)",
         [
             ("S1", "2025-01-01T00:00:00Z", "user", "hi"),
             ("S1", "2025-01-01T00:00:01Z", "assistant", "yo"),
         ],
     )
would reformat tests/test_session_query_smoke.py
--- tests/test_training_callbacks.py	2025-09-10 07:58:47.269140+00:00
+++ tests/test_training_callbacks.py	2025-09-10 13:53:46.839867+00:00
@@ -14,14 +14,16 @@
     es.mode = "min"
     es.step(1.0)
     es.step(1.1)
     es.step(0.9)  # improvement resets counter
     assert es.step(1.0) is False  # bad=1
-    assert es.step(1.0) is True   # bad=2 -> stop
+    assert es.step(1.0) is True  # bad=2 -> stop
 
 
 def test_early_stopping_respects_min_delta():
     es = EarlyStopping(patience=0, min_delta=0.5)
     es.mode = "min"
     es.step(1.0)
     assert es.step(0.6) is True  # improvement < min_delta -> treated as no progress
+
+
 # END: CODEX_TEST_TRAINING_CALLBACKS
would reformat tests/test_training_callbacks.py
--- tests/test_symbolic_pipeline.py	2025-09-10 07:58:47.265140+00:00
+++ tests/test_symbolic_pipeline.py	2025-09-10 13:53:46.864835+00:00
@@ -32,16 +32,12 @@
         pre_cfg=PretrainCfg(),
         sft_cfg=SFTCfg(batch_size=1),
         rlhf_cfg=RLHFCfg(),
         w=Weights(),
     )
-    summary1 = run_codex_symbolic_pipeline(
-        corpus=corpus, demos=demos, prefs=prefs, **cfgs
-    )
-    summary2 = run_codex_symbolic_pipeline(
-        corpus=corpus, demos=demos, prefs=prefs, **cfgs
-    )
+    summary1 = run_codex_symbolic_pipeline(corpus=corpus, demos=demos, prefs=prefs, **cfgs)
+    summary2 = run_codex_symbolic_pipeline(corpus=corpus, demos=demos, prefs=prefs, **cfgs)
     assert summary1 == summary2
 
 
 def test_pretrain_empty_corpus_raises():
     with pytest.raises(ValueError):
would reformat tests/test_symbolic_pipeline.py
--- tests/test_train_loop.py	2025-09-10 13:53:40.148279+00:00
+++ tests/test_train_loop.py	2025-09-10 13:53:46.928742+00:00
@@ -37,11 +37,11 @@
 
 # BEGIN: CODEX_TEST_TRAIN_LOOP
 
 __all__ = [
     "test_record_metrics_writes_json",
-    "test_record_metrics_error_path", 
+    "test_record_metrics_error_path",
     "test_record_metrics_unserializable",
     "test_ts_format",
     "test_cli_parsing_smoke",
     "test_empty_dataset_path",
 ]
@@ -94,19 +94,19 @@
 def test_record_metrics_error_path(tmp_path, monkeypatch):
     """
     Test error handling when metrics recording fails due to filesystem issues.
     """
     from codex_ml import train_loop
-    
+
     monkeypatch.setattr(train_loop, "ART_DIR", tmp_path, raising=False)
-    
+
     def boom(*a, **k):  # pragma: no cover - trivial error simulator
         raise OSError("disk full")
-    
+
     # Mock json.dumps to simulate serialization failure
     monkeypatch.setattr(json, "dumps", boom)
-    
+
     # Should propagate the OSError
     with pytest.raises(OSError, match="disk full"):
         train_loop.record_metrics(
             phase="eval",
             epoch=0,
@@ -118,17 +118,18 @@
 def test_record_metrics_unserializable(tmp_path, monkeypatch):
     """
     Test handling of unserializable objects in metrics data.
     """
     from codex_ml import train_loop
-    
+
     class UnserializableObject:
         """Object that cannot be JSON serialized."""
+
         pass
-    
+
     monkeypatch.setattr(train_loop, "ART_DIR", tmp_path, raising=False)
-    
+
     # Should raise TypeError for unserializable data
     with pytest.raises(TypeError):
         train_loop.record_metrics(
             phase="train",
             epoch=1,
@@ -140,15 +141,15 @@
 def test_ts_format():
     """
     Test that timestamp formatting produces valid ISO format with Z suffix.
     """
     from codex_ml import train_loop
-    
+
     ts = train_loop._ts()
     assert isinstance(ts, str), "timestamp should be a string"
     assert ts.endswith("Z"), "timestamp should end with Z (UTC indicator)"
-    
+
     # Verify it's a valid ISO format timestamp (strip the Z for parsing)
     try:
         datetime.datetime.fromisoformat(ts[:-1])
     except ValueError as e:
         pytest.fail(f"Invalid timestamp format: {ts} - {e}")
@@ -160,20 +161,20 @@
     """
     from codex_ml import train_loop
 
     # Change to tmp directory to avoid polluting the real workspace
     monkeypatch.chdir(tmp_path)
-    
+
     # Backup original sys.argv
     argv_backup = sys.argv[:]
     try:
         # Set up test CLI arguments
         sys.argv = ["prog", "--epochs", "1", "--grad-accum", "2"]
-        
+
         # Execute main function
         train_loop.main()
-        
+
         # Verify metrics were recorded
         metrics_file = tmp_path / "metrics.json"
         if metrics_file.exists():
             data = json.loads(metrics_file.read_text(encoding="utf-8"))
             # Look for gradient accumulation setting in the recorded metrics
@@ -181,16 +182,16 @@
             for entry in data:
                 if "grad_accum" in entry.get("metrics", {}):
                     assert entry["metrics"]["grad_accum"] == 2
                     found_grad_accum = True
                     break
-            
+
             if found_grad_accum:
                 # Verify NDJSON was also created
                 ndjson_file = tmp_path / "metrics.ndjson"
                 assert ndjson_file.exists(), "NDJSON metrics file should be created"
-        
+
     finally:
         # Always restore original argv
         sys.argv = argv_backup
 
 
@@ -201,11 +202,11 @@
     from codex_ml import train_loop
 
     # Test demo epoch function returns valid metrics dictionary
     result = train_loop.demo_epoch(epoch=0)
     assert isinstance(result, dict), "demo_epoch should return a dictionary"
-    
+
     # Verify the result contains expected metric structure
     # (implementation-dependent, but should be a valid metrics dict)
     if result:  # If not empty
         # Basic validation that it looks like metrics
         for key, value in result.items():
would reformat tests/test_train_loop.py
--- tests/tracking/test_git_tag.py	2025-09-10 07:58:47.269140+00:00
+++ tests/tracking/test_git_tag.py	2025-09-10 13:53:46.993586+00:00
@@ -10,9 +10,11 @@
     assert mod.current_commit() == "deadbeef"
 
 
 def test_current_commit_failure(monkeypatch):
     mod = importlib.import_module("codex_ml.tracking.git_tag")
+
     def boom(*a, **k):
         raise OSError("fail")
+
     monkeypatch.setattr(subprocess, "check_output", boom)
     assert mod.current_commit() is None
would reformat tests/tracking/test_git_tag.py
--- tests/test_query_logs_build_query.py	2025-09-10 07:58:47.265140+00:00
+++ tests/test_query_logs_build_query.py	2025-09-10 13:53:47.011018+00:00
@@ -189,13 +189,11 @@
 
 def _dfs_dict(node: ast.AST, depth: int, cols_acc: set, ts_acc: List[str]):
     if depth > MAX_DICT_DEPTH or not isinstance(node, ast.Dict):
         return
     for k_node, v_node in zip(node.keys, node.values):
-        key = _const_str(k_node) or (
-            k_node.id if isinstance(k_node, ast.Name) else None
-        )
+        key = _const_str(k_node) or (k_node.id if isinstance(k_node, ast.Name) else None)
         if key:
             k_norm = key.lower()
             if k_norm in _SELECT_KEYS:
                 cols_acc.update(_collect_str_list(v_node))
             elif k_norm in _TS_KEYS:
@@ -222,38 +220,31 @@
                     if isinstance(t, ast.Name) and t.id.lower() in _SELECT_KEYS:
                         cols.update(_collect_str_list(node.value))
                 if isinstance(node.value, ast.Dict):
                     _dfs_dict(node.value, 1, cols, [])
             elif isinstance(node, ast.AnnAssign):
-                if (
-                    isinstance(node.target, ast.Name)
-                    and node.target.id.lower() in _SELECT_KEYS
-                ):
+                if isinstance(node.target, ast.Name) and node.target.id.lower() in _SELECT_KEYS:
                     cols.update(_collect_str_list(node.value))
                 if isinstance(node.value, ast.Dict):
                     _dfs_dict(node.value, 1, cols, [])
             elif isinstance(node, ast.Dict):
                 _dfs_dict(node, 1, cols, [])
         # SQL scanning
         for m in re.finditer(r"SELECT\s+(.+?)\s+FROM", src, flags=re.I | re.S):
             raw = [c.strip(' `"') for c in re.split(r",\s*", m.group(1))]
             for c in raw:
-                if c and all(
-                    x not in c.lower() for x in ["*", "case ", "count(", "sum(", "avg("]
-                ):
+                if c and all(x not in c.lower() for x in ["*", "case ", "count(", "sum(", "avg("]):
                     if re.match(r"[A-Za-z_][A-Za-z0-9_]*$", c):
                         cols.add(c)
     except Exception:
         pass
     return sorted(cols)
 
 
 def _extract_timestamp_from_source(src: str) -> Optional[str]:
     _metrics_visit("timestamp_source", src)
-    m = re.search(
-        r"ORDER\s+BY\s+([A-Za-z_][A-Za-z0-9_]*)\s+(ASC|DESC)", src, flags=re.I
-    )
+    m = re.search(r"ORDER\s+BY\s+([A-Za-z_][A-Za-z0-9_]*)\s+(ASC|DESC)", src, flags=re.I)
     if m:
         return m.group(1)
     ts_acc: List[str] = []
     try:
         tree = ast.parse(src)
@@ -265,14 +256,11 @@
                         if s:
                             ts_acc.append(s)
                 if isinstance(node.value, ast.Dict):
                     _dfs_dict(node.value, 1, set(), ts_acc)
             elif isinstance(node, ast.AnnAssign):
-                if (
-                    isinstance(node.target, ast.Name)
-                    and node.target.id.lower() in _TS_KEYS
-                ):
+                if isinstance(node.target, ast.Name) and node.target.id.lower() in _TS_KEYS:
                     s = _const_str(node.value)
                     if s:
                         ts_acc.append(s)
                 if isinstance(node.value, ast.Dict):
                     _dfs_dict(node.value, 1, set(), ts_acc)
@@ -440,23 +428,19 @@
         pytest.fail(f"build_query call failed under all strategies: {last_err}")
 
     if isinstance(out, str):
         sql = out
     elif isinstance(out, (tuple, list)):
-        sql = next(
-            (x for x in out if isinstance(x, str) and "select" in x.lower()), None
-        )
+        sql = next((x for x in out if isinstance(x, str) and "select" in x.lower()), None)
     else:
         sql = None
 
     assert isinstance(sql, str), "build_query did not return SQL string"
 
     sel = _extract_select_cols(sql)
     for c in exp_cols:
-        assert any(
-            c.lower() in s.lower() for s in sel
-        ), f"Missing column {c} in SELECT: {sel}"
+        assert any(c.lower() in s.lower() for s in sel), f"Missing column {c} in SELECT: {sel}"
     assert re.search(
         rf"order\s+by\s+{re.escape(ts)}\s+asc\b", sql, flags=re.I
     ), f"ORDER BY {ts} ASC missing: {sql}"
 
 
would reformat tests/test_query_logs_build_query.py
--- tests/test_session_logging.py	2025-09-10 07:58:47.265140+00:00
+++ tests/test_session_logging.py	2025-09-10 13:53:47.037574+00:00
@@ -45,19 +45,13 @@
         # probe: session/session_id + message/content + role/kind
         #       + ts/timestamp/created_at
         cur.execute(f"PRAGMA table_info({t})")
         cols = [r[1] for r in cur.fetchall()]
         c_session = (
-            "session_id"
-            if "session_id" in cols
-            else ("session" if "session" in cols else None)
+            "session_id" if "session_id" in cols else ("session" if "session" in cols else None)
         )
-        c_message = (
-            "message"
-            if "message" in cols
-            else ("content" if "content" in cols else None)
-        )
+        c_message = "message" if "message" in cols else ("content" if "content" in cols else None)
         if not (c_session and c_message):
             continue
         q = f"SELECT * FROM {t} WHERE {c_session}=?"
         cur.execute(q, (session_id,))
         for r in cur.fetchall():
@@ -65,13 +59,11 @@
     con.close()
     return rows
 
 
 CONFIG = _import_any(["src.codex.logging.config"])
-DEFAULT_LOG_DB = getattr(
-    CONFIG, "DEFAULT_LOG_DB", pathlib.Path(".codex/session_logs.db")
-)
+DEFAULT_LOG_DB = getattr(CONFIG, "DEFAULT_LOG_DB", pathlib.Path(".codex/session_logs.db"))
 
 
 def test_context_manager_emits_start_end(tmp_path, monkeypatch):
     # Arrange
     monkeypatch.chdir(tmp_path)
@@ -98,46 +90,32 @@
             if cm is not None:
                 with cm:
                     time.sleep(0.01)
                 used = "python_cm"
     except Exception as e:
-        logging.exception(
-            "session logging hook raised: %s: %s", e.__class__.__name__, e
-        )
+        logging.exception("session logging hook raised: %s: %s", e.__class__.__name__, e)
         if isinstance(e, (ImportError, AttributeError, NotImplementedError)):
             pytest.skip(f"Required session logging hook not available: {e!r}")
         pytest.fail(f"Session logging hook failed: {e!r}")
 
     if used is None:
         # Fallback to shell helpers via source
-        sh = (
-            pathlib.Path(__file__).resolve().parents[1]
-            / "scripts"
-            / "session_logging.sh"
-        )
+        sh = pathlib.Path(__file__).resolve().parents[1] / "scripts" / "session_logging.sh"
         if not sh.exists():
             pytest.skip("No session_hooks module or shell script available")
-        cmd = (
-            f"set -euo pipefail; source '{sh}'; codex_session_start; codex_session_end"
-        )
-        cp = subprocess.run(
-            ["bash", "-lc", cmd], cwd=tmp_path, text=True, capture_output=True
-        )
+        cmd = f"set -euo pipefail; source '{sh}'; codex_session_start; codex_session_end"
+        cp = subprocess.run(["bash", "-lc", cmd], cwd=tmp_path, text=True, capture_output=True)
         assert cp.returncode == 0, cp.stderr
         used = "shell"
 
     # Assert NDJSON exists and has start/end markers
     assert ndjson_file.exists()
     data = ndjson_file.read_text(encoding="utf-8").strip().splitlines()
     assert any(
-        "session_start" in line or '"event":"start"' in line or '"start"' in line
-        for line in data
+        "session_start" in line or '"event":"start"' in line or '"start"' in line for line in data
     )
-    assert any(
-        "session_end" in line or '"event":"end"' in line or '"end"' in line
-        for line in data
-    )
+    assert any("session_end" in line or '"event":"end"' in line or '"end"' in line for line in data)
 
 
 def test_context_manager_recreates_missing_dir(tmp_path, monkeypatch):
     monkeypatch.chdir(tmp_path)
     session_id = f"R-{uuid.uuid4()}"
@@ -206,15 +184,11 @@
     with hooks.session():
         pass
 
     ndjson_file = tmp_path / ".codex" / "sessions" / f"{session_id}.ndjson"
     assert ndjson_file.exists()
-    lines = [
-        json.loads(line)
-        for line in ndjson_file.read_text().splitlines()
-        if line.strip()
-    ]
+    lines = [json.loads(line) for line in ndjson_file.read_text().splitlines() if line.strip()]
     rows = logger_mod.fetch_messages(session_id, db_path=db_path)
     assert len(lines) == len(rows)
 
 
 def test_cli_query_returns_expected_rows(tmp_path, monkeypatch):
@@ -232,12 +206,11 @@
         ("A", "2025-01-01T00:00:00Z", "user", "hi"),
         ("A", "2025-01-01T00:00:01Z", "assistant", "hey"),
         ("B", "2025-01-01T00:00:02Z", "user", "bye"),
     ]
     cur.executemany(
-        "INSERT INTO session_events(session_id, timestamp, role, message) "
-        "VALUES (?,?,?,?)",
+        "INSERT INTO session_events(session_id, timestamp, role, message) " "VALUES (?,?,?,?)",
         data,
     )
     con.commit()
     con.close()
 
@@ -252,13 +225,11 @@
                 parsed = json.loads(out)
                 assert isinstance(parsed, list)
                 messages = [r.get("message") or r.get("content") for r in parsed]
             except Exception:
                 # Tolerate non-JSON lines containing messages
-                messages = [
-                    line for line in out.splitlines() if "hi" in line or "hey" in line
-                ]
+                messages = [line for line in out.splitlines() if "hi" in line or "hey" in line]
             assert any("hi" in m for m in messages)
             assert any("hey" in m for m in messages)
             return
     pytest.skip("query_logs module is not available or failed")
 
@@ -285,13 +256,11 @@
             out = cp.stdout.strip()
             try:
                 data = json.loads(out)
                 messages = [r.get("message") or r.get("content") for r in data]
             except Exception:
-                messages = [
-                    line for line in out.splitlines() if "hi" in line or "hey" in line
-                ]
+                messages = [line for line in out.splitlines() if "hi" in line or "hey" in line]
             assert any("hi" in m for m in messages)
             assert any("hey" in m for m in messages)
             return
     pytest.skip("export module is not available or failed")
 
would reformat tests/test_session_logging.py
--- tests/training/test_engine_hf_trainer_lora_cfg.py	2025-09-10 07:58:47.269140+00:00
+++ tests/training/test_engine_hf_trainer_lora_cfg.py	2025-09-10 13:53:47.105837+00:00
@@ -38,11 +38,12 @@
 
     monkeypatch.setattr(
         "training.engine_hf_trainer.AutoTokenizer.from_pretrained", fake_tok_from_pretrained
     )
     monkeypatch.setattr(
-        "training.engine_hf_trainer.AutoModelForCausalLM.from_pretrained", fake_model_from_pretrained
+        "training.engine_hf_trainer.AutoModelForCausalLM.from_pretrained",
+        fake_model_from_pretrained,
     )
     monkeypatch.setattr("training.engine_hf_trainer.Trainer.train", fake_train)
     monkeypatch.setattr("training.engine_hf_trainer.apply_lora", fake_apply_lora)
 
     run_hf_trainer(
would reformat tests/training/test_engine_hf_trainer_lora_cfg.py
--- tests/utils/test_checkpointing.py	2025-09-10 07:58:47.269140+00:00
+++ tests/utils/test_checkpointing.py	2025-09-10 13:53:47.113611+00:00
@@ -14,10 +14,12 @@
 
 def test_load_checkpoint_corrupt(tmp_path):
     mod = importlib.import_module("codex_ml.utils.checkpointing")
     bad = tmp_path / "bad.pt"
     bad.write_bytes(b"garbage")
+
     class M:
         def load_state_dict(self, *a, **k):
             pass
+
     with pytest.raises(Exception):
         mod.load_checkpoint(str(bad), M())
would reformat tests/utils/test_checkpointing.py
--- tests/utils/test_error_log.py	2025-09-10 07:58:47.269140+00:00
+++ tests/utils/test_error_log.py	2025-09-10 13:53:47.146084+00:00
@@ -9,11 +9,11 @@
 def test_log_error_records(tmp_path, monkeypatch):
     mod = importlib.import_module("codex_ml.utils.error_log")
     monkeypatch.setattr(mod, "ERROR_PATH", tmp_path / "err.ndjson")
     mod.log_error("s", "e", "c")
     data = (tmp_path / "err.ndjson").read_text(encoding="utf-8").strip()
-    assert "\"s\"" in data
+    assert '"s"' in data
 
 
 def test_log_rotation_and_concurrency(tmp_path, monkeypatch):
     mod = importlib.import_module("codex_ml.utils.error_log")
     log = tmp_path / "log.txt"
would reformat tests/utils/test_error_log.py
--- tests/utils/test_modeling.py	2025-09-10 07:58:47.269140+00:00
+++ tests/utils/test_modeling.py	2025-09-10 13:53:47.201997+00:00
@@ -30,15 +30,18 @@
     assert model is not None
 
 
 def test_load_success(monkeypatch):
     mod = importlib.import_module("codex_ml.utils.modeling")
+
     class Tok:
         pass
+
     class Model:
         def __init__(self, name, **kw):
             self.name = name
+
     monkeypatch.setattr(
         mod,
         "AutoTokenizer",
         types.SimpleNamespace(from_pretrained=lambda m, use_fast=True: Tok()),
     )
would reformat tests/utils/test_modeling.py
--- tools/apply_container_api.py	2025-09-10 07:58:47.269140+00:00
+++ tools/apply_container_api.py	2025-09-10 13:53:47.400610+00:00
@@ -64,13 +64,11 @@
         Context: {ctx}
         What are the possible causes, and how can this be resolved while preserving intended functionality?
         """
     )
     with ERRORS.open("a", encoding="utf-8") as fh:
-        fh.write(
-            json.dumps({"ts": ts(), "step": step, "error": err, "context": ctx}) + "\n"
-        )
+        fh.write(json.dumps({"ts": ts(), "step": step, "error": err, "context": ctx}) + "\n")
     print(msg, file=sys.stderr)
 
 
 def upsert(path: Path, content: str, sentinel: str) -> None:
     path.parent.mkdir(parents=True, exist_ok=True)
@@ -413,13 +411,11 @@
                     )
             except Exception as e:  # noqa: BLE001
                 fh.write(f"ERROR: {e}\n")
                 q5(f"6: Finalization — {name}", str(e), " ".join(cmd))
             fh.write("``\n")
-        subprocess.run(
-            ["bash", "-lc", "docker compose down -v"], capture_output=True, text=True
-        )
+        subprocess.run(["bash", "-lc", "docker compose down -v"], capture_output=True, text=True)
 
 
 def main() -> None:
     import argparse
 
@@ -427,13 +423,11 @@
     ap.add_argument(
         "--apply",
         action="store_true",
         help="create/augment Dockerfile, compose, API, scripts, docs",
     )
-    ap.add_argument(
-        "--validate", action="store_true", help="run local validations (best-effort)"
-    )
+    ap.add_argument("--validate", action="store_true", help="run local validations (best-effort)")
     args = ap.parse_args()
     if args.apply:
         apply()
     if args.validate:
         validate()
would reformat tools/apply_container_api.py
--- tools/apply_hydra_scaffold.py	2025-09-10 07:58:47.269140+00:00
+++ tools/apply_hydra_scaffold.py	2025-09-10 13:53:47.417797+00:00
@@ -71,13 +71,11 @@
         ).strip()
         + "\n",
     )
 
 
-def write_file(
-    path: Path, content: str, rationale: str, sentinel: str | None = None
-) -> None:
+def write_file(path: Path, content: str, rationale: str, sentinel: str | None = None) -> None:
     path.parent.mkdir(parents=True, exist_ok=True)
     existed = path.exists()
     if existed and sentinel and sentinel in path.read_text(encoding="utf-8"):
         return
     path.write_text(content, encoding="utf-8")
would reformat tools/apply_hydra_scaffold.py
--- tools/apply_data_loaders.py	2025-09-10 07:58:47.269140+00:00
+++ tools/apply_data_loaders.py	2025-09-10 13:53:47.418925+00:00
@@ -43,27 +43,21 @@
         Context: {ctx}
         What are the possible causes, and how can this be resolved while preserving intended functionality?
         """
     )
     with ERRORS.open("a", encoding="utf-8") as fh:
-        fh.write(
-            json.dumps({"ts": ts(), "step": step, "error": err, "context": ctx}) + "\n"
-        )
+        fh.write(json.dumps({"ts": ts(), "step": step, "error": err, "context": ctx}) + "\n")
     sys.stderr.write(msg + "\n")
 
 
 def upsert(path: Path, content: str, sentinel: str) -> None:
     path.parent.mkdir(parents=True, exist_ok=True)
     if path.exists():
         existing = path.read_text(encoding="utf-8")
         if sentinel in existing:
             return
-        new = (
-            existing
-            + ("\n\n" if existing and not existing.endswith("\n") else "")
-            + content
-        )
+        new = existing + ("\n\n" if existing and not existing.endswith("\n") else "") + content
         path.write_text(new, encoding="utf-8")
         log_change("edit", path, f"insert guarded by {sentinel}", content[:4000])
     else:
         path.write_text(content, encoding="utf-8")
         log_change("create", path, f"insert guarded by {sentinel}", content[:4000])
@@ -109,16 +103,12 @@
 
 def main() -> None:
     import argparse
 
     ap = argparse.ArgumentParser()
-    ap.add_argument(
-        "--apply", action="store_true", help="create/augment loaders, cli, tests"
-    )
-    ap.add_argument(
-        "--validate", action="store_true", help="run local validations (pytest subset)"
-    )
+    ap.add_argument("--apply", action="store_true", help="create/augment loaders, cli, tests")
+    ap.add_argument("--validate", action="store_true", help="run local validations (pytest subset)")
     args = ap.parse_args()
     if args.apply:
         apply()
     if args.validate:
         validate()
would reformat tools/apply_data_loaders.py
--- tools/apply_ml_metrics.py	2025-09-10 07:58:47.269140+00:00
+++ tools/apply_ml_metrics.py	2025-09-10 13:53:47.519132+00:00
@@ -42,37 +42,43 @@
 def ts() -> str:
     return datetime.utcnow().replace(microsecond=0).isoformat() + "Z"
 
 
 def append(path: Path, txt: str) -> None:
-    path.write_text(
-        path.read_text(encoding="utf-8") + txt, encoding="utf-8"
-    ) if path.exists() else path.write_text(txt, encoding="utf-8")
+    (
+        path.write_text(path.read_text(encoding="utf-8") + txt, encoding="utf-8")
+        if path.exists()
+        else path.write_text(txt, encoding="utf-8")
+    )
 
 
 def log_change(title: str, path: Path, rationale: str, content_preview: str) -> None:
     append(
         CHANGE_LOG,
-        textwrap.dedent(f"""
+        textwrap.dedent(
+            f"""
     ## {ts()} — {path.relative_to(REPO)}
     - **Action:** {title}
     - **Rationale:** {rationale}
     ```text
     {content_preview[:4000]}
     ```
-    """).lstrip(),
+    """
+        ).lstrip(),
     )
 
 
 def q5(step: str, err: str, ctx: str) -> None:
-    prompt = textwrap.dedent(f"""\
+    prompt = textwrap.dedent(
+        f"""\
     Question for ChatGPT-5 {ts()}:
     While performing [{step}], encountered the following error:
     {err}
     Context: {ctx}
     What are the possible causes, and how can this be resolved while preserving intended functionality?
-    """)
+    """
+    )
     append(
         ERRORS,
         json.dumps({"ts": ts(), "step": step, "error": err, "context": ctx}) + "\n",
     )
     sys.stderr.write(prompt + "\n")
@@ -368,13 +374,11 @@
     try:
         txt = p.read_text(encoding="utf-8")
         cleaned = re.sub(r"\]\(\)", "](#)", txt)  # replace empty links
         if cleaned != txt:
             p.write_text(cleaned, encoding="utf-8")
-            log_change(
-                "edit", p, "Normalize empty Markdown links to anchors", cleaned[:500]
-            )
+            log_change("edit", p, "Normalize empty Markdown links to anchors", cleaned[:500])
     except Exception as e:
         q5("3.README-cleanup", str(e), f"path={p}")
 
 
 def validate(epochs: int = 3):
@@ -422,19 +426,13 @@
 
 def main():
     import argparse
 
     ap = argparse.ArgumentParser()
-    ap.add_argument(
-        "--apply", action="store_true", help="write metrics, trainer, tests"
-    )
-    ap.add_argument(
-        "--validate", action="store_true", help="run tests & demo training loop"
-    )
-    ap.add_argument(
-        "--epochs", type=int, default=3, help="epochs for demo training loop"
-    )
+    ap.add_argument("--apply", action="store_true", help="write metrics, trainer, tests")
+    ap.add_argument("--validate", action="store_true", help="run tests & demo training loop")
+    ap.add_argument("--epochs", type=int, default=3, help="epochs for demo training loop")
     args = ap.parse_args()
 
     if args.apply:
         apply()
     if args.validate:
would reformat tools/apply_ml_metrics.py
--- tools/apply_docs.py	2025-09-10 07:58:47.269140+00:00
+++ tools/apply_docs.py	2025-09-10 13:53:47.563112+00:00
@@ -346,13 +346,11 @@
 def validate() -> None:
     with RESULTS.open("a", encoding="utf-8") as fh:
         fh.write(f"\n# Validation {ts()}\n")
 
         fh.write("\n## Install MkDocs deps\n```\n")
-        code, out = _run(
-            [sys.executable, "-m", "pip", "install", "-r", "docs/requirements.txt"]
-        )
+        code, out = _run([sys.executable, "-m", "pip", "install", "-r", "docs/requirements.txt"])
         fh.write(out + f"\n(exit={code})\n```\n")
         if code != 0:
             q5(
                 "6: Finalization — install mkdocs deps",
                 f"exit {code}",
@@ -368,13 +366,11 @@
                 f"exit {code}",
                 "mkdocs build --strict",
             )
 
         fh.write("\n## Execute notebooks (optional)\n```\n")
-        code_nc, out_nc = _run(
-            [sys.executable, "-c", "import nbconvert; print('nbconvert ok')"]
-        )
+        code_nc, out_nc = _run([sys.executable, "-c", "import nbconvert; print('nbconvert ok')"])
         fh.write(out_nc + f"\n(exit={code_nc})\n")
         if code_nc == 0:
             for nb in [
                 "examples/notebooks/demo_infer.ipynb",
                 "examples/notebooks/demo_train_eval.ipynb",
would reformat tools/apply_docs.py
--- tools/apply_mlflow_tracking.py	2025-09-10 07:58:47.269140+00:00
+++ tools/apply_mlflow_tracking.py	2025-09-10 13:53:47.635757+00:00
@@ -64,13 +64,11 @@
         Context: {ctx}
         What are the possible causes, and how can this be resolved while preserving intended functionality?
         """
     )
     with ERRORS.open("a", encoding="utf-8") as fh:
-        fh.write(
-            json.dumps({"ts": ts(), "step": step, "error": err, "context": ctx}) + "\n"
-        )
+        fh.write(json.dumps({"ts": ts(), "step": step, "error": err, "context": ctx}) + "\n")
     sys.stderr.write(rq + "\n")
 
 
 def upsert(path: Path, content: str, sentinel: str) -> None:
     path.parent.mkdir(parents=True, exist_ok=True)
@@ -263,13 +261,11 @@
         upsert(
             REPO / "src" / "codex_ml" / "tracking" / "mlflow_utils.py",
             UTILS_CODE,
             UTILS_SENT,
         )
-        upsert(
-            REPO / "src" / "codex_ml" / "tracking" / "__init__.py", INIT_CODE, INIT_SENT
-        )
+        upsert(REPO / "src" / "codex_ml" / "tracking" / "__init__.py", INIT_CODE, INIT_SENT)
         upsert(REPO / "src" / "codex_ml" / "tracking" / "cli.py", CLI_CODE, CLI_SENT)
         upsert(REPO / "docs" / "ops" / "experiment_tracking.md", DOCS_CODE, DOCS_SENT)
     except Exception as e:  # pragma: no cover
         q5("3: Best-Effort Construction — write files", str(e), f"path={REPO}")
 
@@ -302,13 +298,11 @@
 
     run_id = f"run-{int(time.time())}"
     out_dir = REPO / "output" / "experiments" / run_id
     seeds = _set_global_seeds(1234)
     summary = {"run_id": run_id, "metric@seed1234": 0.1234}
-    cfg = MlflowConfig(
-        enable=enable_mlflow, tracking_uri=tracking_uri, experiment=experiment
-    )
+    cfg = MlflowConfig(enable=enable_mlflow, tracking_uri=tracking_uri, experiment=experiment)
 
     enabled = False
     try:
         with start_run(cfg) as run:
             enabled = bool(run)
@@ -336,13 +330,11 @@
         fh.write(f"- MLflow enabled: {enable_mlflow}\n")
 
 
 def main() -> None:
     ap = argparse.ArgumentParser()
-    ap.add_argument(
-        "--apply", action="store_true", help="create MLflow utilities, CLI flags, docs"
-    )
+    ap.add_argument("--apply", action="store_true", help="create MLflow utilities, CLI flags, docs")
     ap.add_argument(
         "--validate",
         action="store_true",
         help="run local validation (file logging, optional MLflow)",
     )
@@ -352,13 +344,11 @@
     args = ap.parse_args()
 
     if args.apply:
         apply()
     if args.validate:
-        validate_run(
-            args.mlflow_enable, args.mlflow_tracking_uri, args.mlflow_experiment
-        )
+        validate_run(args.mlflow_enable, args.mlflow_tracking_uri, args.mlflow_experiment)
     if not (args.apply or args.validate):
         print(
             "Usage: --apply [--validate] [--mlflow-enable] [--mlflow-tracking-uri URI] [--mlflow-experiment NAME]"
         )
 
would reformat tools/apply_mlflow_tracking.py
--- tools/auto_analyze_errors.py	2025-09-10 07:58:47.269140+00:00
+++ tools/auto_analyze_errors.py	2025-09-10 13:53:47.728128+00:00
@@ -87,13 +87,11 @@
     results.sort(key=lambda r: r["message"])  # deterministic output
     return results
 
 
 def main() -> None:
-    parser = argparse.ArgumentParser(
-        description="Summarize errors from .codex/errors.ndjson"
-    )
+    parser = argparse.ArgumentParser(description="Summarize errors from .codex/errors.ndjson")
     parser.add_argument(
         "path",
         nargs="?",
         default=DEFAULT_LOG_PATH,
         help="Path to errors.ndjson (default: .codex/errors.ndjson)",
@@ -109,13 +107,11 @@
     )
     args = parser.parse_args()
 
     since_dt = parse_ts(args.since) if args.since else None
     entries = load_entries(Path(args.path))
-    summaries = group_errors(
-        entries, since=since_dt, unanswered_only=args.unanswered_only
-    )
+    summaries = group_errors(entries, since=since_dt, unanswered_only=args.unanswered_only)
     for rec in summaries:
         print(f"{rec['id']}\t{rec['count']}\t{rec['message']}")
 
 
 if __name__ == "__main__":
would reformat tools/auto_analyze_errors.py
--- tools/apply_pyproject_packaging.py	2025-09-10 07:58:47.269140+00:00
+++ tools/apply_pyproject_packaging.py	2025-09-10 13:53:47.801233+00:00
@@ -78,13 +78,11 @@
 def git_clean_state():
     try:
         top = subprocess.check_output(
             ["git", "rev-parse", "--show-toplevel"], cwd=ROOT, text=True
         ).strip()
-        status = subprocess.check_output(
-            ["git", "status", "--porcelain"], cwd=ROOT, text=True
-        )
+        status = subprocess.check_output(["git", "status", "--porcelain"], cwd=ROOT, text=True)
         return Path(top), status
     except Exception as e:
         log_error("1.1 git status", str(e), {"cwd": str(ROOT)})
         return ROOT, ""
 
@@ -177,22 +175,18 @@
             return True
         return False
 
     changed = False
     changed |= ensure_block("[build-system]", build_system)
-    changed |= ensure_block(
-        "[project]", project_block if "[project]" not in text else ""
-    )
+    changed |= ensure_block("[project]", project_block if "[project]" not in text else "")
     # If [project] exists, ensure minimal keys
     if "[project]" in text:
 
         def ensure_kv(key: str, val_pat: str, inject_line: str):
             nonlocal text
             if re.search(rf"(?m)^\s*{re.escape(key)}\s*=", text) is None:
-                text = re.sub(
-                    r"(?m)^\[project\]\s*$", f"[project]\n{inject_line}", text, count=1
-                )
+                text = re.sub(r"(?m)^\[project\]\s*$", f"[project]\n{inject_line}", text, count=1)
                 return True
             return False
 
         changed |= ensure_kv("name", r".*", 'name = "codex"')
         changed |= ensure_kv("version", r".*", 'version = "0.1.0"')
@@ -210,38 +204,35 @@
     changed |= ensure_block(
         "[tool.setuptools]", setuptools_block if "[tool.setuptools]" not in text else ""
     )
     if "[tool.setuptools]" in text:
         # ensure package-dir is set to src
-        if (
-            re.search(r'(?m)^\s*package-dir\s*=\s*\{\s*""\s*=\s*"src"\s*\}', text)
-            is None
-        ):
+        if re.search(r'(?m)^\s*package-dir\s*=\s*\{\s*""\s*=\s*"src"\s*\}', text) is None:
             text = re.sub(
                 r"(?m)^\[tool\.setuptools\]\s*$",
                 '[tool.setuptools]\npackage-dir = {"" = "src"}',
                 text,
                 count=1,
             )
             changed = True
     changed |= ensure_block(
         "[tool.setuptools.packages.find]",
-        '[tool.setuptools.packages.find]\nwhere = ["src"]\ninclude = ["codex*"]\n\n'
-        if "[tool.setuptools.packages.find]" not in text
-        else "",
+        (
+            '[tool.setuptools.packages.find]\nwhere = ["src"]\ninclude = ["codex*"]\n\n'
+            if "[tool.setuptools.packages.find]" not in text
+            else ""
+        ),
     )
     changed |= ensure_block("[project.optional-dependencies]", extras_block)
 
     if changed:
         backup_file(pyp)
         write_text(pyp, text)
         diff = unified_diff(original, text, "pyproject.toml")
         append_change("### Updated `pyproject.toml`\n\n```diff\n" + diff + "```\n")
     else:
-        append_change(
-            "### `pyproject.toml` already satisfied required fields; no changes made.\n"
-        )
+        append_change("### `pyproject.toml` already satisfied required fields; no changes made.\n")
 
 
 def update_readme_commands():
     readmes = [ROOT / "README.md", ROOT / "README_UPDATED.md"]
     pat = re.compile(r"\bpython\s+-m\s+src\.codex\.", re.IGNORECASE)
would reformat tools/apply_pyproject_packaging.py
--- tools/codex_apply_modeling_monitoring_api.py	2025-09-10 13:53:40.136279+00:00
+++ tools/codex_apply_modeling_monitoring_api.py	2025-09-10 13:53:47.916993+00:00
@@ -41,34 +41,42 @@
     REPO / "docker-compose.yml",
     REPO / "docs" / "ops" / "monitoring.md",
     REPO / "docs" / "ops" / "deployment.md",
 ]
 
+
 # ---------- Helpers ----------
 def ts() -> str:
     return datetime.utcnow().replace(microsecond=0).isoformat() + "Z"
+
 
 def log_change(action: str, path: Path, why: str, preview: str = "") -> None:
     if not CHANGE_LOG.exists() or CHANGE_LOG.stat().st_size == 0:
         CHANGE_LOG.write_text("# Codex Change Log\n", encoding="utf-8")
     with CHANGE_LOG.open("a", encoding="utf-8") as fh:
-        fh.write(f"## {ts()} — {path.relative_to(REPO)}\n- **Action:** {action}\n- **Rationale:** {why}\n")
+        fh.write(
+            f"## {ts()} — {path.relative_to(REPO)}\n- **Action:** {action}\n- **Rationale:** {why}\n"
+        )
         if preview:
             fh.write("```diff\n" + preview[:6000] + "\n```\n")
         fh.write("\n")
 
+
 def q5(step: str, err: str, ctx: str) -> None:
-    block = textwrap.dedent(f"""
+    block = textwrap.dedent(
+        f"""
     Question for ChatGPT-5 {ts()}:
     While performing [{step}], encountered the following error:
     {err}
     Context: {ctx}
     What are the possible causes, and how can this be resolved while preserving intended functionality?
-    """).strip()
+    """
+    ).strip()
     with ERRORS.open("a", encoding="utf-8") as fh:
         fh.write(json.dumps({"ts": ts(), "step": step, "error": err, "context": ctx}) + "\n")
     sys.stderr.write(block + "\n")
+
 
 def upsert(path: Path, content: str, sentinel: str) -> None:
     """
     Idempotent: if sentinel exists in file, do nothing.
     If file exists w/o sentinel, APPEND content (non-destructive).
@@ -87,23 +95,27 @@
             path.write_text(content, encoding="utf-8")
             log_change("create", path, f"guarded by {sentinel}", content)
     except Exception as e:
         q5("3: upsert file", str(e), f"path={path}")
 
+
 def verify_write_permissions() -> None:
     for p in TARGETS:
         try:
             p.parent.mkdir(parents=True, exist_ok=True)
             testfile = p.parent / (".codex.touch." + hashlib.sha1(str(p).encode()).hexdigest()[:8])
             testfile.write_text("ok", encoding="utf-8")
             testfile.unlink(missing_ok=True)
         except Exception as e:
             q5("1: Preparation — write permission", str(e), f"target={p}")
 
+
 # ---------- Injected blocks ----------
 FT_SENT = "# BEGIN: CODEX_FUNCTR_DEEPNN"
-FT_CODE = FT_SENT + """
+FT_CODE = (
+    FT_SENT
+    + """
 # Codex injection: deep-learning toggles, device, grad-clip, scheduler, per-epoch metrics
 import argparse, json, hashlib, time
 from pathlib import Path
 
 def _codex_config_hash(cfg: dict) -> str:
@@ -197,13 +209,16 @@
         ap.add_argument("--grad-clip", dest="grad_clip", type=float, default=0.0, help="Max grad norm")
     if "scheduler" not in added:
         ap.add_argument("--scheduler", default=None, help="LR scheduler (cosine, step)")
 # END: CODEX_FUNCTR_DEEPNN
 """
+)
 
 DP_SENT = "# BEGIN: CODEX_DEPLOY_MONITORING"
-DP_CODE = DP_SENT + """
+DP_CODE = (
+    DP_SENT
+    + """
 # Codex injection: TensorBoard, W&B, MLflow wiring + system stats
 import argparse, os, json, time
 from pathlib import Path
 
 def _codex_stats():
@@ -292,13 +307,16 @@
                 MU.log_artifacts([art])
         except Exception:
             pass
 # END: CODEX_DEPLOY_MONITORING
 """
+)
 
 MLF_SENT = "# BEGIN: CODEX_MLFLOW_UTILS"
-MLF_CODE = MLF_SENT + """
+MLF_CODE = (
+    MLF_SENT
+    + """
 # MLflow wrappers (no-op if mlflow missing)
 from __future__ import annotations
 from pathlib import Path
 from typing import Iterable
 
@@ -334,13 +352,16 @@
             mlflow.log_artifact(str(p))
     except Exception:
         pass
 # END: CODEX_MLFLOW_UTILS
 """
+)
 
 CKPT_SENT = "# BEGIN: CODEX_CKPT_RNG_SEED"
-CKPT_CODE = CKPT_SENT + """
+CKPT_CODE = (
+    CKPT_SENT
+    + """
 from __future__ import annotations
 import json, random
 from pathlib import Path
 
 def set_seed(seed: int) -> None:
@@ -403,13 +424,16 @@
 
 def log_seed(path: Path, seed: int) -> None:
     (path / "seeds.json").write_text(json.dumps({"seed": seed}), encoding="utf-8")
 # END: CODEX_CKPT_RNG_SEED
 """
+)
 
 API_SENT = "# BEGIN: CODEX_FASTAPI_HARDEN"
-API_CODE = API_SENT + """
+API_CODE = (
+    API_SENT
+    + """
 # FastAPI app with background queue, API-key middleware, and basic handlers
 from __future__ import annotations
 import os, asyncio, time
 from typing import Optional
 try:
@@ -475,13 +499,16 @@
     return app
 
 app = build_app()
 # END: CODEX_FASTAPI_HARDEN
 """
+)
 
 DOCKER_SENT = "# BEGIN: CODEX_DOCKERFILE"
-DOCKERFILE = DOCKER_SENT + """
+DOCKERFILE = (
+    DOCKER_SENT
+    + """
 # Ubuntu base, multi-stage, non-root, healthcheck
 FROM ubuntu:22.04 AS base
 ENV DEBIAN_FRONTEND=noninteractive
 RUN apt-get update && apt-get install -y python3 python3-pip && rm -rf /var/lib/apt/lists/*
 WORKDIR /app
@@ -496,13 +523,16 @@
 EXPOSE 8000
 HEALTHCHECK --interval=30s --timeout=5s --start-period=20s CMD python3 -c "import socket; s=socket.socket(); s.settimeout(2); s.connect(('127.0.0.1',8000)); print('ok')"
 CMD ["python3","-m","uvicorn","services.api.main:app","--host","0.0.0.0","--port","8000"]
 # END: CODEX_DOCKERFILE
 """
+)
 
 COMPOSE_SENT = "# BEGIN: CODEX_COMPOSE"
-COMPOSE = COMPOSE_SENT + """
+COMPOSE = (
+    COMPOSE_SENT
+    + """
 version: "3.9"
 services:
   api:
     build: .
     image: codex-api:local
@@ -515,13 +545,16 @@
     #     reservations:
     #       devices:
     #         - capabilities: ["gpu"]
 # END: CODEX_COMPOSE
 """
+)
 
 MON_DOC_SENT = "<!-- BEGIN: CODEX_MONITORING_DOC -->"
-MONITORING_DOC = MON_DOC_SENT + """
+MONITORING_DOC = (
+    MON_DOC_SENT
+    + """
 # Monitoring & Experiment Tracking
 
 Flags:
 - `--enable-wandb`
 - `--mlflow-enable` / `--mlflow-tracking-uri` / `--mlflow-experiment`
@@ -529,27 +562,35 @@
 Behavior:
 - TensorBoard: logs to `<output>/tb`
 - Weights & Biases: enabled when flag set
 - MLflow: wraps `mlflow.*` via `codex_ml.tracking.mlflow_utils.*`; artifacts/runs tracked where configured
 """
+)
 
 DEPLOY_DOC_SENT = "<!-- BEGIN: CODEX_DEPLOY_DOC -->"
-DEPLOY_DOC = DEPLOY_DOC_SENT + """
+DEPLOY_DOC = (
+    DEPLOY_DOC_SENT
+    + """
 # Deployment
 
 - Build: `docker build -t codex-api:local .`
 - Run: `docker compose up --build`
 - Health: GET `http://localhost:8000/status`
 - Auth: send header `x-api-key: <value>` for POST endpoints
 - Endpoints: `/infer`, `/train`, `/evaluate`, `/status`
 """
+)
 
 README_SENT = "<!-- BEGIN: CODEX_README_UPDATE -->"
-README_UPDATES = README_SENT + """
+README_UPDATES = (
+    README_SENT
+    + """
 Local-only validations & explicit flags for monitoring/tracking.
 **Do not** enable remote CI triggers; run Codex scripts directly.
 """
+)
+
 
 # ---------- Apply patches ----------
 def apply():
     try:
         verify_write_permissions()
@@ -563,10 +604,11 @@
         upsert(REPO / "docs" / "ops" / "monitoring.md", MONITORING_DOC, MON_DOC_SENT)
         upsert(REPO / "docs" / "ops" / "deployment.md", DEPLOY_DOC, DEPLOY_DOC_SENT)
         upsert(REPO / "README.md", README_UPDATES, README_SENT)
     except Exception as e:
         q5("3: Apply guarded patches", str(e), f"repo={REPO}")
+
 
 # ---------- Local (offline) validation ----------
 def validate():
     cmds = [
         ("python -m compileall .", ["python", "-m", "compileall", "."]),
@@ -584,22 +626,31 @@
             except Exception as e:
                 fh.write(f"ERROR: {e}\n")
                 q5("6: Finalization — validation", str(e), " ".join(cmd))
             fh.write("```\n")
 
+
 # ---------- CLI ----------
 def main():
     import argparse
+
     ap = argparse.ArgumentParser()
-    ap.add_argument("--apply", action="store_true", help="Apply guarded changes for modeling/monitoring/api/checkpointing")
-    ap.add_argument("--validate", action="store_true", help="Run local validations (no CI activation)")
+    ap.add_argument(
+        "--apply",
+        action="store_true",
+        help="Apply guarded changes for modeling/monitoring/api/checkpointing",
+    )
+    ap.add_argument(
+        "--validate", action="store_true", help="Run local validations (no CI activation)"
+    )
     args = ap.parse_args()
 
     if args.apply:
         apply()
     if args.validate:
         validate()
     if not (args.apply or args.validate):
         print("Usage: --apply [--validate]")
 
+
 if __name__ == "__main__":
     main()
would reformat tools/codex_apply_modeling_monitoring_api.py
--- tools/codex_agents_workflow.py	2025-09-10 07:58:47.269140+00:00
+++ tools/codex_agents_workflow.py	2025-09-10 13:53:47.920431+00:00
@@ -342,13 +342,11 @@
             "3.x Best-effort construction",
             repr(e),
             "An exception occurred while editing docs.",
         )
 
-    echo(
-        "Completed. See .codex/change_log.md, .codex/results.md (and errors.ndjson if present)."
-    )
+    echo("Completed. See .codex/change_log.md, .codex/results.md (and errors.ndjson if present).")
     sys.exit(0)
 
 
 if __name__ == "__main__":
     main()
would reformat tools/codex_agents_workflow.py
--- tools/apply_stack_polish.py	2025-09-10 07:58:47.269140+00:00
+++ tools/apply_stack_polish.py	2025-09-10 13:53:47.954854+00:00
@@ -39,21 +39,21 @@
             fh.write("```text\n" + preview[:4000] + "\n```\n")
         fh.write("\n")
 
 
 def q5(step: str, err: str, ctx: str) -> None:
-    msg = textwrap.dedent(f"""\
+    msg = textwrap.dedent(
+        f"""\
     Question for ChatGPT-5 {ts()}:
     While performing [{step}], encountered the following error:
     {err}
     Context: {ctx}
     What are the possible causes, and how can this be resolved while preserving intended functionality?
-    """)
+    """
+    )
     with ERRORS.open("a", encoding="utf-8") as fh:
-        fh.write(
-            json.dumps({"ts": ts(), "step": step, "error": err, "context": ctx}) + "\n"
-        )
+        fh.write(json.dumps({"ts": ts(), "step": step, "error": err, "context": ctx}) + "\n")
     sys.stderr.write(msg + "\n")
 
 
 def upsert(path: Path, content: str, sentinel: str) -> None:
     path.parent.mkdir(parents=True, exist_ok=True)
@@ -621,22 +621,18 @@
             "<!-- SENTINEL -->",
         )
         upsert(CODEX_ML / "utils" / "checksums.py", SHA_CODE, SHA_SENT)
         upsert(CODEX_ML / "data" / "cache.py", CACHE_CODE, CACHE_SENT)
         upsert(CODEX_ML / "data" / "sharding.py", SHARD_CODE, SHARD_SENT)
-        upsert(
-            REPO / "tests" / "test_data_cache_sharding.py", DATA_TEST, DATA_TEST_SENT
-        )
+        upsert(REPO / "tests" / "test_data_cache_sharding.py", DATA_TEST, DATA_TEST_SENT)
         upsert(CODEX_ML / "safety" / "risk_score.py", RISK_CODE, RISK_SENT)
         upsert(
             REPO / ".github" / "workflows" / "nightly.yml.disabled",
             NIGHTLY,
             NIGHTLY_SENT,
         )
-        upsert(
-            REPO / ".github" / "workflows" / "vuln_scan.yml.disabled", VULN, VULN_SENT
-        )
+        upsert(REPO / ".github" / "workflows" / "vuln_scan.yml.disabled", VULN, VULN_SENT)
         upsert(REPO / "deploy" / "helm" / "Chart.yaml", CHART, CHART_SENT)
         upsert(REPO / "deploy" / "helm" / "values.yaml", VALUES, VALUES_SENT)
         upsert(REPO / "docs" / "ops" / "grpc_parity.md", GRPC_DOC, GRPC_DOC_SENT)
         upsert(REPO / "notebooks" / "gpu_training_example.ipynb", NB, NB_SENT)
         upsert(REPO / "docs" / "examples" / "model_card_template.md", MC, MC_SENT)
would reformat tools/apply_stack_polish.py
--- tools/codex_coverage_booster.py	2025-09-10 13:53:40.156279+00:00
+++ tools/codex_coverage_booster.py	2025-09-10 13:53:48.134892+00:00
@@ -26,11 +26,15 @@
 DOCS_ERRORS = ROOT / "CODEx_ERRORS.md"
 CHANGELOG = ROOT / "CHANGELOG_CODEx.md"
 README = ROOT / "README.md"
 
 COVERAGE_TARGETS = [
-    ("tokenization", "sentencepiece_adapter.py", "tests/tokenization/test_sentencepiece_adapter.py"),
+    (
+        "tokenization",
+        "sentencepiece_adapter.py",
+        "tests/tokenization/test_sentencepiece_adapter.py",
+    ),
     ("tracking", "git_tag.py", "tests/tracking/test_git_tag.py"),
     ("training", "callbacks.py", "tests/training/test_callbacks.py"),
     ("", "train_loop.py", "tests/test_train_loop.py"),
     ("tracking", "mlflow_utils.py", "tests/tracking/test_mlflow_utils.py"),
     ("utils", "modeling.py", "tests/utils/test_modeling.py"),
@@ -38,12 +42,14 @@
     ("utils", "checkpointing.py", "tests/utils/test_checkpointing.py"),
 ]
 
 HEADER = "# Generated by Codex Coverage Booster (local-only)\n"
 
+
 def nowstamp() -> str:
     return dt.datetime.utcnow().strftime("%Y-%m-%d %H:%M:%S UTC")
+
 
 def append_error(step: str, err: Exception, context: str) -> None:
     DOCS_ERRORS.parent.mkdir(parents=True, exist_ok=True)
     with open(DOCS_ERRORS, "a", encoding="utf-8") as f:
         f.write(
@@ -56,10 +62,11 @@
                 What are the possible causes, and how can this be resolved while preserving intended functionality?
 
                 """
             )
         )
+
 
 def safe_write(path: Path, content: str, apply: bool) -> None:
     if not apply:
         print(f"[dry-run] Would write: {path}")
         return
@@ -71,13 +78,15 @@
             return
         content = existing.rstrip() + "\n\n" + content
     path.write_text(content, encoding="utf-8")
     print(f"[write] {path}")
 
+
 def repo_has_module(subdir: str, file: str) -> bool:
     path = SRC / subdir / file if subdir else SRC / file
     return path.exists()
+
 
 def test_template_sentencepiece() -> str:
     return textwrap.dedent(
         f"""\
         {HEADER}
@@ -136,10 +145,11 @@
                 text = spa.decode(ids)
                 assert isinstance(ids, list) and isinstance(text, str)
         """
     )
 
+
 def test_template_git_tag() -> str:
     return textwrap.dedent(
         f"""\
         {HEADER}
         import subprocess
@@ -172,10 +182,11 @@
                 out = mod.current_commit()
                 assert out in (None, "",)
         """
     )
 
+
 def test_template_callbacks() -> str:
     return textwrap.dedent(
         f"""\
         {HEADER}
         import importlib
@@ -193,10 +204,11 @@
                 stop = es.step(0.42)
                 assert isinstance(stop, bool)
         """
     )
 
+
 def test_template_train_loop() -> str:
     return textwrap.dedent(
         f"""\
         {HEADER}
         import json
@@ -225,10 +237,11 @@
                 except Exception:
                     pass
         """
     )
 
+
 def test_template_mlflow_utils() -> str:
     return textwrap.dedent(
         f"""\
         {HEADER}
         import os
@@ -238,10 +251,11 @@
             mod = importlib.import_module("codex_ml.tracking.mlflow_utils")
             monkeypatch.setenv("MLFLOW_TRACKING_URI", "http://127.0.0.1:0")
             assert hasattr(mod, "__name__")
         """
     )
+
 
 def test_template_modeling() -> str:
     return textwrap.dedent(
         f"""\
         {HEADER}
@@ -258,10 +272,11 @@
                         fn(bad)
                     break
         """
     )
 
+
 def test_template_error_log() -> str:
     return textwrap.dedent(
         f"""\
         {HEADER}
         import threading
@@ -285,10 +300,11 @@
             [t.start() for t in threads]
             [t.join() for t in threads]
             assert logfile.exists()
         """
     )
+
 
 def test_template_checkpointing() -> str:
     return textwrap.dedent(
         f"""\
         {HEADER}
@@ -309,10 +325,11 @@
                         pass
                     break
         """
     )
 
+
 TEMPLATES = {
     "tests/tokenization/test_sentencepiece_adapter.py": test_template_sentencepiece,
     "tests/tracking/test_git_tag.py": test_template_git_tag,
     "tests/training/test_callbacks.py": test_template_callbacks,
     "tests/test_train_loop.py": test_template_train_loop,
@@ -334,10 +351,11 @@
       ```
     - No CI or cost-incurring GitHub Actions are enabled or required. Do not add workflow YAMLs.
     - Some tests may mock optional dependencies (e.g., `sentencepiece`) to cover error paths.
     """
 )
+
 
 def patch_readme(apply: bool) -> None:
     if not README.exists():
         if apply:
             README.write_text("# Project\n\n", encoding="utf-8")
@@ -350,10 +368,11 @@
             README.write_text(text, encoding="utf-8")
             print("[write] README.md (testing section)")
         else:
             print("[dry-run] Would patch README.md")
 
+
 def write_conftest(apply: bool) -> None:
     content = textwrap.dedent(
         f"""\
         {HEADER}
         import os
@@ -365,10 +384,11 @@
             monkeypatch.setenv("HOME", str(tmp_path))
             yield
         """
     )
     safe_write(TESTS / "conftest.py", content, apply)
+
 
 def main():
     ap = argparse.ArgumentParser()
     ap.add_argument("--apply", action="store_true", help="Write files and run pytest")
     ap.add_argument("--dry-run", action="store_true", help="Plan only")
@@ -411,11 +431,18 @@
     except Exception as e:
         append_error("Phase3:PatchREADME", e, "README.md")
 
     if args.apply:
         import subprocess
-        cmd = ["pytest", "-q", "--cov=src/codex_ml", "--cov-report=term-missing:skip-covered", "--cov-report=xml"]
+
+        cmd = [
+            "pytest",
+            "-q",
+            "--cov=src/codex_ml",
+            "--cov-report=term-missing:skip-covered",
+            "--cov-report=xml",
+        ]
         print("[run]", " ".join(cmd))
         try:
             code = subprocess.call(cmd)
             print("[pytest-exit]", code)
         except Exception as e:
@@ -442,10 +469,11 @@
                 encoding="utf-8",
             )
 
     print("\n[summary] Created/updated test files:", *created, sep="\n- ")
 
+
 if __name__ == "__main__":
     try:
         main()
     except Exception as e:
         append_error("Main", e, "top-level")
would reformat tools/codex_coverage_booster.py
--- tools/codex_make_smoke_tests.py	2025-09-10 13:53:40.156279+00:00
+++ tools/codex_make_smoke_tests.py	2025-09-10 13:53:48.327898+00:00
@@ -28,11 +28,13 @@
 
 FILE_TRAINER = SMOKE_DIR / "test_hf_trainer_hello.py"
 FILE_FLAGS = SMOKE_DIR / "test_logging_flags_end_to_end.py"
 FILE_MLNOOP = SMOKE_DIR / "test_mlflow_utils_noop.py"
 
-TRAINER_CODE = f"{TR_SENT}\n" + """
+TRAINER_CODE = (
+    f"{TR_SENT}\n"
+    + """
 import os, tempfile
 from pathlib import Path
 import pytest
 
 def test_hf_trainer_on_tiny_hello_dataset():
@@ -74,12 +76,15 @@
         trainer.train()
         trainer.save_state()
         assert (out / "trainer_state.json").exists()
         assert any(out.glob("checkpoint-*"))
 """
-
-FLAGS_CODE = f"{TB_SENT}\n" + """
+)
+
+FLAGS_CODE = (
+    f"{TB_SENT}\n"
+    + """
 import os, argparse, tempfile, importlib.util
 from pathlib import Path
 import pytest
 
 def test_deploy_logging_flags_bootstrap_and_log():
@@ -114,12 +119,15 @@
         mod._codex_log_all(handles, step=1, metrics={"loss": 0.123})
         tb_dir = run_dir / "tb"
         if handles.get("tb") is not None:
             assert any(tb_dir.glob("events.*")), "TensorBoard events missing"
 """
-
-MLNOOP_CODE = f"{MLF_SENT}\n" + """
+)
+
+MLNOOP_CODE = (
+    f"{MLF_SENT}\n"
+    + """
 import pytest
 
 def test_mlflow_utils_tolerant_when_missing():
     try:
         from codex_ml.tracking import mlflow_utils as MU
@@ -132,41 +140,58 @@
     MU.log_params({"lr": 1e-3})
     MU.log_metrics({"loss": 0.1}, step=1)
     MU.log_artifacts([])
     assert True
 """
+)
 
 README_NOTE = f"""{READ_SENT}
 ## Smoke Tests & Offline Logging
 This repository includes CPU-friendly smoke tests for HF Trainer and end-to-end logging flags. All logging integrations are offline-safe for local validation.
 """
+
 
 # -------------- helpers --------------
 def _ensure_files():
     CODEX.mkdir(parents=True, exist_ok=True)
     for p in (CHANGE_LOG, ERRORS, RESULTS):
         if not p.exists():
             p.write_text("", encoding="utf-8")
 
+
 def _log_change(action: str, path: Path, why: str, preview: str):
     if not CHANGE_LOG.exists() or CHANGE_LOG.stat().st_size == 0:
         CHANGE_LOG.write_text("# Codex Change Log\n", encoding="utf-8")
     with CHANGE_LOG.open("a", encoding="utf-8") as fh:
-        fh.write(f"## {datetime.utcnow().isoformat()}Z — {path.relative_to(ROOT)}\n- **Action:** {action}\n- **Rationale:** {why}\n")
+        fh.write(
+            f"## {datetime.utcnow().isoformat()}Z — {path.relative_to(ROOT)}\n- **Action:** {action}\n- **Rationale:** {why}\n"
+        )
         fh.write("```diff\n" + preview[:6000] + "\n```\n\n")
+
 
 def _q5(step: str, err: str, ctx: str):
     block = f"""
 Question for ChatGPT-5 {datetime.utcnow().isoformat()}Z:
 While performing [{step}], encountered the following error:
 {err}
 Context: {ctx}
 What are the possible causes, and how can this be resolved while preserving intended functionality?
 """.strip()
     with ERRORS.open("a", encoding="utf-8") as fh:
-        fh.write(json.dumps({"ts": datetime.utcnow().isoformat()+"Z", "step": step, "error": err, "context": ctx}) + "\n")
+        fh.write(
+            json.dumps(
+                {
+                    "ts": datetime.utcnow().isoformat() + "Z",
+                    "step": step,
+                    "error": err,
+                    "context": ctx,
+                }
+            )
+            + "\n"
+        )
     sys.stderr.write(block + "\n")
+
 
 def _upsert(path: Path, content: str, sentinel: str):
     try:
         path.parent.mkdir(parents=True, exist_ok=True)
         if path.exists():
@@ -180,10 +205,11 @@
             path.write_text(content, encoding="utf-8")
             _log_change("create", path, f"guarded by {sentinel}", content)
     except Exception as e:
         _q5("3: upsert file", str(e), f"path={path}")
 
+
 # -------------- README parsing / reference cleanup --------------
 def _readme_cleanup():
     p = ROOT / "README.md"
     if not p.exists():
         _upsert(p, README_NOTE, READ_SENT)
@@ -198,17 +224,19 @@
             _log_change("edit", p, "Removed contentReference tokens", cleaned)
             _upsert(p, README_NOTE, READ_SENT)
     except Exception as e:
         _q5("2: README parsing", str(e), str(p))
 
+
 # -------------- main ops --------------
 def apply():
     _ensure_files()
     _upsert(FILE_TRAINER, TRAINER_CODE, TR_SENT)
     _upsert(FILE_FLAGS, FLAGS_CODE, TB_SENT)
     _upsert(FILE_MLNOOP, MLNOOP_CODE, MLF_SENT)
     _readme_cleanup()
+
 
 def validate():
     with RESULTS.open("a", encoding="utf-8") as fh:
         fh.write(f"\n# Validation {datetime.utcnow().isoformat()}Z\n")
         cmds = [
@@ -225,20 +253,27 @@
             except Exception as e:
                 fh.write(f"ERROR: {e}\n")
                 _q5("6: Finalization — validation", str(e), " ".join(cmd))
             fh.write("````\n")
 
+
 def main():
     import argparse
+
     ap = argparse.ArgumentParser()
-    ap.add_argument("--apply", action="store_true", help="Create smoke tests and README note (idempotent)")
-    ap.add_argument("--validate", action="store_true", help="Run local validations (no CI activation)")
+    ap.add_argument(
+        "--apply", action="store_true", help="Create smoke tests and README note (idempotent)"
+    )
+    ap.add_argument(
+        "--validate", action="store_true", help="Run local validations (no CI activation)"
+    )
     args = ap.parse_args()
     if args.apply:
         apply()
     if args.validate:
         validate()
     if not (args.apply or args.validate):
         print("Usage: --apply [--validate]")
 
+
 if __name__ == "__main__":
     main()
would reformat tools/codex_make_smoke_tests.py
--- tools/codex_import_normalizer.py	2025-09-10 07:58:47.273140+00:00
+++ tools/codex_import_normalizer.py	2025-09-10 13:53:48.396153+00:00
@@ -67,14 +67,11 @@
 
 def log_error(step: str, err: Exception | str, context: str = ""):
     msg = str(err)
     with ERRORS_LOG.open("a", encoding="utf-8") as f:
         f.write(
-            json.dumps(
-                {"ts": now_iso(), "step": step, "error": msg, "context": context}
-            )
-            + "\n"
+            json.dumps({"ts": now_iso(), "step": step, "error": msg, "context": context}) + "\n"
         )
     rq = (
         f"Question for ChatGPT-5 {now_iso()}:\n"
         f"While performing [{step}], encountered the following error:\n"
         f"{msg}\n"
@@ -275,13 +272,11 @@
 
 # ---------------------------
 # Main
 # ---------------------------
 def main():
-    parser = argparse.ArgumentParser(
-        description="Codex-ready import normalizer & ruff fixer"
-    )
+    parser = argparse.ArgumentParser(description="Codex-ready import normalizer & ruff fixer")
     parser.add_argument(
         "--target",
         required=True,
         help="Path to Python file to normalize imports (e.g., codex_workflow.py)",
     )
@@ -307,13 +302,11 @@
     try:
         before = target.read_text(encoding="utf-8")
         after = split_and_alpha_imports(before)
         if after != before:
             target.write_text(after, encoding="utf-8")
-            write_changelog(
-                "Split & alphabetize imports (one per line)", target, before, after
-            )
+            write_changelog("Split & alphabetize imports (one per line)", target, before, after)
         append_results(f"Normalized imports for {target.relative_to(REPO_ROOT)}")
     except Exception as e:
         log_error("3.1: Normalize imports", e, str(target))
 
     # Phase 3.2 & 3.3: ruff fix + converge
@@ -353,16 +346,12 @@
         if README.exists():
             rb = README.read_text(encoding="utf-8")
             ra = update_readme(rb)
             if ra != rb:
                 README.write_text(ra, encoding="utf-8")
-                write_changelog(
-                    "README add Ruff usage & DO-NOT-ACTIVATE note", README, rb, ra
-                )
-            append_results(
-                "README checked/updated for Ruff usage & DO-NOT-ACTIVATE statement."
-            )
+                write_changelog("README add Ruff usage & DO-NOT-ACTIVATE note", README, rb, ra)
+            append_results("README checked/updated for Ruff usage & DO-NOT-ACTIVATE statement.")
     except Exception as e:
         log_error("3.5: README update", e, str(README))
 
     # Phase 6: finalization summary
     append_results(
would reformat tools/codex_import_normalizer.py
--- tools/codex_patch_exec.py	2025-09-10 07:58:47.273140+00:00
+++ tools/codex_patch_exec.py	2025-09-10 13:53:48.407648+00:00
@@ -26,15 +26,11 @@
     return datetime.utcnow().replace(microsecond=0).isoformat() + "Z"
 
 
 def log_change(action, path, why, preview=""):
     CHANGE_LOG.write_text(
-        (
-            CHANGE_LOG.read_text(encoding="utf-8")
-            if CHANGE_LOG.exists()
-            else "# Codex Change Log\n"
-        ),
+        (CHANGE_LOG.read_text(encoding="utf-8") if CHANGE_LOG.exists() else "# Codex Change Log\n"),
         encoding="utf-8",
     )
     with CHANGE_LOG.open("a", encoding="utf-8") as fh:
         fh.write(
             f"## {ts()} — {path.relative_to(REPO)}\n- **Action:** {action}\n- **Rationale:** {why}\n"
@@ -44,13 +40,11 @@
             fh.write("\n")
 
 
 def q5(step, err, ctx):
     with ERR.open("a", encoding="utf-8") as fh:
-        fh.write(
-            json.dumps({"ts": ts(), "step": step, "error": err, "context": ctx}) + "\n"
-        )
+        fh.write(json.dumps({"ts": ts(), "step": step, "error": err, "context": ctx}) + "\n")
     print(
         textwrap.dedent(
             f"""
     Question for ChatGPT-5 {ts()}:
     While performing [{step}], encountered the following error:
@@ -271,12 +265,10 @@
         patch_compose_gpu()
         patch_run_gpu()
     if args.validate:
         validate_local()
     if not (args.apply or args.validate):
-        print(
-            "Usage: --apply [--validate]\nPolicy: DO NOT ACTIVATE online CI; run checks locally."
-        )
+        print("Usage: --apply [--validate]\nPolicy: DO NOT ACTIVATE online CI; run checks locally.")
 
 
 if __name__ == "__main__":
     main()
would reformat tools/codex_patch_exec.py
--- tools/codex_ingestion_workflow.py	2025-09-10 07:58:47.273140+00:00
+++ tools/codex_ingestion_workflow.py	2025-09-10 13:53:48.415521+00:00
@@ -51,15 +51,17 @@
             fromfile=f"a/{path.as_posix()}",
             tofile=f"b/{path.as_posix()}",
             n=3,
         )
         diff = "".join(ud)
-    entry = textwrap.dedent(f"""\
+    entry = textwrap.dedent(
+        f"""\
     ## {ts()} — {action}: `{path.as_posix()}`
     **Rationale:** {rationale}
     {"```diff\n" + diff + "\n```" if diff else ""}
-    """)
+    """
+    )
     with CHANGE_LOG.open("a", encoding="utf-8") as f:
         f.write(entry + "\n")
 
 
 def log_error(step: str, message: str, context: str, files: list[str] | None = None):
@@ -67,17 +69,19 @@
         "timestamp": ts(),
         "step": step,
         "error": message,
         "context": context,
         "files": files or [],
-        "question_for_chatgpt_5": textwrap.dedent(f"""\
+        "question_for_chatgpt_5": textwrap.dedent(
+            f"""\
             Question for ChatGPT-5:
             While performing [{step}], encountered the following error:
             {message}
             Context: {context}
             What are the possible causes, and how can this be resolved while preserving intended functionality?
-        """).strip(),
+        """
+        ).strip(),
     }
     with ERRORS_LOG.open("a", encoding="utf-8") as f:
         f.write(json.dumps(record, ensure_ascii=False) + "\n")
     print("\n" + record["question_for_chatgpt_5"] + "\n", file=sys.stderr)
 
@@ -111,26 +115,22 @@
     if before == content:
         return
     if not dry_run:
         path.parent.mkdir(parents=True, exist_ok=True)
         path.write_text(content, encoding="utf-8")
-    log_change(
-        path, "create" if before is None else "update", rationale, before, content
-    )
+    log_change(path, "create" if before is None else "update", rationale, before, content)
 
 
 def patch_file_transform(path: Path, transform, dry_run: bool, rationale: str):
     before = read(path)
     after = transform(before)
     if after is None or after == before:
         return
     if not dry_run:
         path.parent.mkdir(parents=True, exist_ok=True)
         path.write_text(after, encoding="utf-8")
-    log_change(
-        path, "update" if before is not None else "create", rationale, before, after
-    )
+    log_change(path, "update" if before is not None else "create", rationale, before, after)
 
 
 # ---------- Phase 1: prep ----------
 
 
@@ -235,12 +235,11 @@
 
     def transform(before: Optional[str]) -> str:
         base = before or ""
         add_header = (
             INGESTION_HEADER
-            if "from pathlib import Path" not in base
-            and "Ingestion utilities." not in base
+            if "from pathlib import Path" not in base and "Ingestion utilities." not in base
             else ""
         )
         new = base
         new = re.sub(
             r"(?ms)^def\s+ingest\s*\(.*?^\)",
@@ -251,28 +250,22 @@
         )
         if not new.strip():
             new = add_header + "\n"
         elif add_header:
             new = add_header + "\n" + new
-        new = (
-            new.rstrip()
-            + "\n"
-            + INGEST_FUNCTION.strip()
-            + "\n"
-            + INGESTOR_SHIM.strip()
-            + "\n"
-        )
+        new = new.rstrip() + "\n" + INGEST_FUNCTION.strip() + "\n" + INGESTOR_SHIM.strip() + "\n"
         return new
 
     rationale = "Add/normalize ingest(path, encoding, chunk_size) semantics and directory-guard; provide Ingestor shim if absent."
     patch_file_transform(target, transform, dry_run, rationale)
 
 
 def patch_ingestion_readme(dry_run: bool):
     target = REPO_ROOT / "src" / "ingestion" / "README.md"
     before = read(target) or ""
-    section = textwrap.dedent("""\
+    section = textwrap.dedent(
+        """\
         # Ingestion
 
         ## Parameters
 
         - `path: Union[str, Path]` — file to read.
@@ -289,11 +282,12 @@
 
         # Chunked streaming
         for chunk in ingest("data/sample.txt", encoding="utf-8", chunk_size=4096):
             process(chunk)
         ```
-    """)
+    """
+    )
     after = section if not before.strip() else before.rstrip() + "\n\n" + section
     write_if_changed(
         target,
         after,
         dry_run,
@@ -301,11 +295,12 @@
     )
 
 
 def ensure_tests(dry_run: bool):
     target = REPO_ROOT / "tests" / "test_ingestion_io.py"
-    content = textwrap.dedent("""\
+    content = textwrap.dedent(
+        """\
         import io
         from pathlib import Path
         import pytest
 
         # Try both module-level ingest and optional Ingestor shim
@@ -342,11 +337,12 @@
         def test_directory_raises_filenotfound(tmp_path: Path):
             d = tmp_path / "a_dir"
             d.mkdir()
             with pytest.raises(FileNotFoundError):
                 _call_ingest(d)
-    """)
+    """
+    )
     write_if_changed(
         target,
         content,
         dry_run,
         "Add tests for encoding, chunk_size, str(path), and directory error behavior.",
@@ -355,13 +351,11 @@
 
 def patch_deep_research_script(dry_run: bool):
     target = REPO_ROOT / "scripts" / "deep_research_task_process.py"
     if not target.exists():
         with RESULTS_MD.open("a", encoding="utf-8") as f:
-            f.write(
-                "- Note: scripts/deep_research_task_process.py not found; skipped.\n"
-            )
+            f.write("- Note: scripts/deep_research_task_process.py not found; skipped.\n")
         return
 
     def transform(before: Optional[str]) -> Optional[str]:
         if before is None:
             return None
@@ -378,20 +372,22 @@
                     new,
                 )
         if "from ingestion import ingest" not in new:
             new = "from ingestion import ingest\n" + new
         if removed:
-            helper = textwrap.dedent('''
+            helper = textwrap.dedent(
+                '''
 
                 # Replaced placeholder ingestion tasks with actual calls:
                 def run_ingestion_example(path: str):
                     """
                     Example bridge to real ingestion implementation.
                     """
                     data = ingest(path)
                     return data
-            ''')
+            '''
+            )
             new = new.rstrip() + "\n" + helper
         return new
 
     patch_file_transform(
         target,
@@ -407,19 +403,21 @@
     alternatives: list[str],
     failures: list[str],
     evidence: str,
     decision: str,
 ):
-    entry = textwrap.dedent(f"""\
+    entry = textwrap.dedent(
+        f"""\
     ### Pruning
     - Item: {item}
     - Purpose: {purpose}
     - Alternatives evaluated: {alternatives}
     - Failure modes: {failures}
     - Evidence: {evidence}
     - Decision: {decision}
-    """)
+    """
+    )
     with CHANGE_LOG.open("a", encoding="utf-8") as f:
         f.write(entry + "\n")
 
 
 # ---------- Phase 6: finalization ----------
@@ -439,13 +437,11 @@
 
 # ---------- main ----------
 
 
 def main():
-    parser = argparse.ArgumentParser(
-        description="Apply ingestion updates with logs and tests."
-    )
+    parser = argparse.ArgumentParser(description="Apply ingestion updates with logs and tests.")
     g = parser.add_mutually_exclusive_group()
     g.add_argument("--write", action="store_true", help="Apply changes to disk.")
     g.add_argument(
         "--dry-run",
         action="store_true",
would reformat tools/codex_ingestion_workflow.py
--- tools/codex_logging_workflow.py	2025-09-10 07:58:47.273140+00:00
+++ tools/codex_logging_workflow.py	2025-09-10 13:53:48.499530+00:00
@@ -68,13 +68,11 @@
         )
     if not ERROR_LOG.exists():
         ERROR_LOG.write_text("", encoding="utf-8")
 
 
-def append_change(
-    file: Path, action: str, rationale: str, before: str = "", after: str = ""
-):
+def append_change(file: Path, action: str, rationale: str, before: str = "", after: str = ""):
     diff = ""
     if before or after:
         diff = "\n".join(
             difflib.unified_diff(
                 before.splitlines(),
@@ -148,13 +146,11 @@
             "1.1 Verify clean working state",
             f"git not available or failed (rc={rc})",
             err.strip(),
         )
     elif not clean:
-        record_error(
-            "1.1 Verify clean working state", "Working tree not clean", out.strip()
-        )
+        record_error("1.1 Verify clean working state", "Working tree not clean", out.strip())
 
     # 1.2 Read README/CONTRIBUTING
     readme = safe_read(README)
     contrib = safe_read(CONTRIB)
 
@@ -178,27 +174,19 @@
         # classify lightweight
         ext = p.suffix.lower()
         role = (
             "code"
             if ext in {".py", ".sh", ".js", ".ts", ".tsx", ".sql", ".go", ".rs"}
-            else "doc"
-            if ext in {".md", ".rst", ".txt"}
-            else "asset"
-        )
-        files.append(
-            {"path": p.as_posix(), "ext": ext, "role": role, "size": p.stat().st_size}
-        )
+            else "doc" if ext in {".md", ".rst", ".txt"} else "asset"
+        )
+        files.append({"path": p.as_posix(), "ext": ext, "role": role, "size": p.stat().st_size})
     files_sorted = sorted(files, key=lambda d: d["path"])
     inv_md = ["# Inventory (lightweight)\n"]
     for f in files_sorted[:1000]:
-        inv_md.append(
-            f"- `{f['path']}` ({f['ext'] or '∅'}, {f['role']}, {f['size']} bytes)"
-        )
+        inv_md.append(f"- `{f['path']}` ({f['ext'] or '∅'}, {f['role']}, {f['size']} bytes)")
     safe_write(INVENTORY_MD, "\n".join(inv_md) + "\n", "Initial inventory")
-    safe_write(
-        INVENTORY_JSON, json.dumps(files_sorted, indent=2), "Initial inventory (JSON)"
-    )
+    safe_write(INVENTORY_JSON, json.dumps(files_sorted, indent=2), "Initial inventory (JSON)")
 
     # 1.4 Flags
     flags = {"DO_NOT_ACTIVATE_GITHUB_ACTIONS": DO_NOT_ACTIVATE_GITHUB_ACTIONS}
     safe_write(FLAGS_JSON, json.dumps(flags, indent=2), "Set constraint flags")
 
@@ -390,13 +378,11 @@
         record_error("3.1 Read candidate for instrumentation", str(e), p.as_posix())
         return False
 
     changed = False
     if "from src.codex.logging.session_logger import log_event" not in src:
-        header = (
-            "from src.codex.logging.session_logger import log_event, get_session_id\n"
-        )
+        header = "from src.codex.logging.session_logger import log_event, get_session_id\n"
         new_src = header + src
         src, changed = new_src, True
 
     if "session_id = get_session_id()" not in src:
         new_src = "session_id = get_session_id()\n" + src
@@ -459,13 +445,11 @@
 
 
 # ----------------------------- Phase 5 & 6: Finalization -----------------------------
 
 
-def phase6(
-    created: Dict[str, str], candidates: List[Candidate], instrumented: List[str]
-):
+def phase6(created: Dict[str, str], candidates: List[Candidate], instrumented: List[str]):
     unresolved = []
     if not (REPO_ROOT / "codex" / "logging" / "session_logger.py").exists():
         unresolved.append("logging module missing")
     if not (REPO_ROOT / "tests" / "test_session_logging_mirror.py").exists():
         unresolved.append("test missing")
would reformat tools/codex_logging_workflow.py
error: cannot format tools/codex_seq_runner.py: Cannot parse: 147:41:             r"(ap.add_argument\("--epochs",.*?\)\))",
--- tools/codex_run.py	2025-09-10 13:53:40.156279+00:00
+++ tools/codex_run.py	2025-09-10 13:53:48.630825+00:00
@@ -13,14 +13,27 @@
 from pathlib import Path
 from typing import List, Tuple
 
 OK, WARN, FAIL = 0, 1, 2
 
-def run(cmd: List[str], *, cwd: Path | None = None, timeout: int | None = None, env: dict | None = None, log: Path | None = None) -> Tuple[int, str]:
-    proc = subprocess.Popen(cmd, cwd=str(cwd) if cwd else None,
-                            stdout=subprocess.PIPE, stderr=subprocess.STDOUT,
-                            env=env or os.environ.copy(), text=True)
+
+def run(
+    cmd: List[str],
+    *,
+    cwd: Path | None = None,
+    timeout: int | None = None,
+    env: dict | None = None,
+    log: Path | None = None,
+) -> Tuple[int, str]:
+    proc = subprocess.Popen(
+        cmd,
+        cwd=str(cwd) if cwd else None,
+        stdout=subprocess.PIPE,
+        stderr=subprocess.STDOUT,
+        env=env or os.environ.copy(),
+        text=True,
+    )
     try:
         out, _ = proc.communicate(timeout=timeout)
     except subprocess.TimeoutExpired:
         proc.kill()
         out = f"[TIMEOUT] {' '.join(map(shlex.quote, cmd))} exceeded {timeout}s\n"
@@ -31,67 +44,84 @@
         log.parent.mkdir(parents=True, exist_ok=True)
         with open(log, "a", encoding="utf-8") as fh:
             fh.write(out)
     return rc, out
 
+
 def rewrite_readme_cli(readme: Path) -> Tuple[bool, str]:
     if not readme.exists():
         return False, "README not found; skipped"
     text = readme.read_text(encoding="utf-8", errors="ignore")
     new_text = re.sub(r"(^|\s)chatgpt-codex(\s+)", r"\1python tools/audit_builder.py\2", text)
     if new_text != text:
         readme.write_text(new_text, encoding="utf-8")
         return True, "normalized CLI references"
     return False, "no changes"
 
+
 def run_audit(prompt: Path, artifacts: Path) -> Tuple[int, str]:
     artifacts.mkdir(parents=True, exist_ok=True)
     if Path("tools/audit_builder.py").exists():
-        rc, out = run([sys.executable, "tools/audit_builder.py", "--prompt-file", str(prompt)], log=artifacts/"audit.log")
+        rc, out = run(
+            [sys.executable, "tools/audit_builder.py", "--prompt-file", str(prompt)],
+            log=artifacts / "audit.log",
+        )
         if rc == 0:
-            (artifacts/"audit.md").write_text(out, encoding="utf-8")
+            (artifacts / "audit.md").write_text(out, encoding="utf-8")
             return OK, "audit generated"
         return FAIL, "audit script failed"
     return WARN, "audit script missing"
+
 
 def precommit_run(timeout: int, artifacts: Path, skip_hooks: str | None = None) -> Tuple[int, str]:
     env = os.environ.copy()
     if skip_hooks:
         env["SKIP"] = skip_hooks
     cmd = ["pre-commit", "run", "--all-files", "--verbose"]
-    rc, _ = run(cmd, timeout=timeout, env=env, log=artifacts/"precommit.log")
+    rc, _ = run(cmd, timeout=timeout, env=env, log=artifacts / "precommit.log")
     if rc == 124:
         return WARN, "pre-commit timed out"
     if rc != 0:
-        run(["pre-commit", "clean"], env=env, log=artifacts/"precommit.log")
-        rc2, _ = run(cmd, timeout=timeout, env=env, log=artifacts/"precommit.log")
+        run(["pre-commit", "clean"], env=env, log=artifacts / "precommit.log")
+        rc2, _ = run(cmd, timeout=timeout, env=env, log=artifacts / "precommit.log")
         if rc2 != 0:
             return FAIL, "pre-commit failed"
     return OK, "pre-commit passed"
+
 
 def has_pytest_cov() -> bool:
     rc, out = run(["pytest", "--version"])
     return "pytest-cov" in out
 
+
 def run_tests(cov_target: str, cov_threshold: int, artifacts: Path) -> Tuple[int, str]:
     if has_pytest_cov():
-        cmd = ["pytest", f"--cov={cov_target}", "--cov-report=term", f"--cov-fail-under={cov_threshold}"]
-        rc, out = run(cmd, log=artifacts/"tests.log")
+        cmd = [
+            "pytest",
+            f"--cov={cov_target}",
+            "--cov-report=term",
+            f"--cov-fail-under={cov_threshold}",
+        ]
+        rc, out = run(cmd, log=artifacts / "tests.log")
         if rc != 0:
             return FAIL, "tests or coverage failed"
         return OK, "tests with coverage passed"
-    rc, _ = run(["pytest", "-q"], log=artifacts/"tests.log")
+    rc, _ = run(["pytest", "-q"], log=artifacts / "tests.log")
     if rc != 0:
         return FAIL, "tests failed"
     return WARN, "tests passed without coverage"
+
 
 def append_changelog(msgs: List[str]) -> None:
     path = Path("CHANGELOG_codex.md")
     stamp = time.strftime("%Y-%m-%d %H:%M:%S")
     entry = [f"## {stamp} – Codex run"] + [f"- {m}" for m in msgs]
     previous = path.read_text(encoding="utf-8") if path.exists() else ""
-    path.write_text((previous + ("\n" if previous else "") + "\n".join(entry) + "\n"), encoding="utf-8")
+    path.write_text(
+        (previous + ("\n" if previous else "") + "\n".join(entry) + "\n"), encoding="utf-8"
+    )
+
 
 def main() -> int:
     ap = argparse.ArgumentParser()
     ap.add_argument("--prompt-file", default="AUDIT_PROMPT.md")
     ap.add_argument("--readme", default="README.md")
@@ -122,7 +152,8 @@
     status = max(rc_audit, rc_pc, rc_tests)
     for m in msgs:
         print(m)
     return 0 if status == OK else (1 if status == WARN else 2)
 
+
 if __name__ == "__main__":
     raise SystemExit(main())
would reformat tools/codex_run.py
--- tools/codex_patch_session_logging.py	2025-09-10 07:58:47.273140+00:00
+++ tools/codex_patch_session_logging.py	2025-09-10 13:53:48.702700+00:00
@@ -51,13 +51,11 @@
 
 # ---------- utilities ----------
 
 
 def now_iso() -> str:
-    return (
-        datetime.now(timezone.utc).isoformat(timespec="seconds").replace("+00:00", "Z")
-    )
+    return datetime.now(timezone.utc).isoformat(timespec="seconds").replace("+00:00", "Z")
 
 
 def read_text(p: str) -> str:
     with open(p, "r", encoding="utf-8") as f:
         return f.read()
@@ -117,13 +115,11 @@
         "question_for_chatgpt5": block,
     }
     append(ERRORS, json.dumps(entry) + "\n")
 
 
-def add_change(
-    file_path: str, action: str, rationale: str, before: str, after: str
-) -> None:
+def add_change(file_path: str, action: str, rationale: str, before: str, after: str) -> None:
     diff = "\n".join(
         difflib.unified_diff(
             before.splitlines(),
             after.splitlines(),
             fromfile=f"a/{file_path}",
@@ -231,13 +227,11 @@
 
 
 def main() -> int:
     ok, out = run_ok(["git", "status", "--porcelain"])
     if not ok:
-        log_error(
-            "1.1", "Check clean working state", out, "git status --porcelain failed"
-        )
+        log_error("1.1", "Check clean working state", out, "git status --porcelain failed")
     elif out.strip():
         log_error(
             "1.1",
             "Uncommitted changes present",
             out.strip(),
@@ -317,29 +311,21 @@
         results.append(
             f"- Patched `{TARGET_REL}` to replace `except Exception: pass` with logging + skip/fail."
         )
     else:
         results.append(f"- No patch applied to `{TARGET_REL}` (pattern not found).")
-    results.append(
-        "- Ensured `import logging` and `import pytest` presence (idempotent)."
-    )
+    results.append("- Ensured `import logging` and `import pytest` presence (idempotent).")
     results.append("- Recorded diffs in `.codex/change_log.md`.")
-    results.append(
-        "- Captured any errors in `.codex/errors.ndjson` (ChatGPT-5 format)."
-    )
-    results.append(
-        "- Constraint observed: **DO NOT ACTIVATE ANY GitHub Actions files.**"
-    )
+    results.append("- Captured any errors in `.codex/errors.ndjson` (ChatGPT-5 format).")
+    results.append("- Constraint observed: **DO NOT ACTIVATE ANY GitHub Actions files.**")
 
     append(RESULTS, "# Results Summary\n" + "\n".join(results) + "\n")
     append(RESULTS, "\n**DO NOT ACTIVATE ANY GitHub Actions files.**\n")
 
     has_errors = os.path.isfile(ERRORS) and os.path.getsize(ERRORS) > 0
     return 1 if has_errors else 0
 
 
 if __name__ == "__main__":
-    parser = argparse.ArgumentParser(
-        description="Codex workflow for session logging test patch."
-    )
+    parser = argparse.ArgumentParser(description="Codex workflow for session logging test patch.")
     _ = parser.parse_args()
     sys.exit(main())
would reformat tools/codex_patch_session_logging.py
--- tools/codex_session_logging_workflow.py	2025-09-10 07:58:47.273140+00:00
+++ tools/codex_session_logging_workflow.py	2025-09-10 13:53:48.758475+00:00
@@ -66,17 +66,13 @@
     )
 
 
 def run(cmd, step_num, step_desc, cwd=ROOT, env=None, check=True):
     try:
-        cp = subprocess.run(  # nosec B603
-            cmd, cwd=cwd, env=env, capture_output=True, text=True
-        )
+        cp = subprocess.run(cmd, cwd=cwd, env=env, capture_output=True, text=True)  # nosec B603
         if check and cp.returncode != 0:
-            raise RuntimeError(
-                f"cmd={cmd} rc={cp.returncode} stderr={cp.stderr.strip()}"
-            )
+            raise RuntimeError(f"cmd={cmd} rc={cp.returncode} stderr={cp.stderr.strip()}")
         return cp
     except Exception as e:
         append_error(step_num, step_desc, str(e), f"cmd={cmd}")
         return None
 
@@ -87,12 +83,11 @@
         cp = run(["git", "rev-parse", "--show-toplevel"], "1.1", "Identify repo root")
         if cp and cp.returncode == 0:
             repo_root = pathlib.Path(cp.stdout.strip())
             if repo_root.resolve() != ROOT.resolve():
                 append_change(
-                    "Repo root from git differs from script ROOT: "
-                    f"{repo_root} vs {ROOT}"
+                    "Repo root from git differs from script ROOT: " f"{repo_root} vs {ROOT}"
                 )
         cp2 = run(
             ["git", "status", "--porcelain"],
             "1.1",
             "Check clean working tree",
@@ -334,17 +329,13 @@
             ]
         )
         if need_write:
             backup = TEST_FILE.with_suffix(".py.bak")
             shutil.copy2(TEST_FILE, backup)
-            append_change(
-                f"Backed up existing tests/test_session_logging.py -> {backup.name}"
-            )
+            append_change(f"Backed up existing tests/test_session_logging.py -> {backup.name}")
             TEST_FILE.write_text(TEST_BODY, encoding="utf-8")
-            append_change(
-                "Updated tests/test_session_logging.py with required coverage."
-            )
+            append_change("Updated tests/test_session_logging.py with required coverage.")
             created = True
     else:
         TEST_FILE.write_text(TEST_BODY, encoding="utf-8")
         append_change("Created tests/test_session_logging.py with required coverage.")
         created = True
@@ -354,13 +345,11 @@
 def run_pytest():
     try:
         import importlib.util as iu
 
         if iu.find_spec("pytest") is None:
-            append_error(
-                "3.4", "Run tests", "pytest not installed", "pip install -U pytest"
-            )
+            append_error("3.4", "Run tests", "pytest not installed", "pip install -U pytest")
             return None
     except Exception as e:
         append_error("3.4", "Check pytest availability", str(e), "")
         return None
     cp = run(
@@ -368,13 +357,11 @@
         "3.4",
         "Run tests",
         check=False,
     )
     if cp:
-        summary = (
-            f"pytest rc={cp.returncode}\nSTDOUT:\n{cp.stdout}\nSTDERR:\n{cp.stderr}"
-        )
+        summary = f"pytest rc={cp.returncode}\nSTDOUT:\n{cp.stdout}\nSTDERR:\n{cp.stderr}"
         append_change("Executed pytest on test_session_logging.py\n" + summary)
     return cp
 
 
 def phase6_finalize():
would reformat tools/codex_session_logging_workflow.py
--- tools/codex_precommit_bootstrap.py	2025-09-10 07:58:47.273140+00:00
+++ tools/codex_precommit_bootstrap.py	2025-09-10 13:53:48.816083+00:00
@@ -74,24 +74,19 @@
             )
         )
         diff = "\n".join(diff_lines[:200])  # avoid overlong logs
     with CHANGE_LOG.open("a", encoding="utf-8") as f:
         f.write(
-            f"\n### {ts}\n- **File**: {path}\n- **Action**: {action}\n- "
-            f"**Why**: {rationale}\n"
+            f"\n### {ts}\n- **File**: {path}\n- **Action**: {action}\n- " f"**Why**: {rationale}\n"
         )
         f.write("```diff\n" + (diff or "(no textual diff)") + "\n```\n")
 
 
 def log_error(step_num_desc: str, error_message: str, context: str):
     CODEX_DIR.mkdir(parents=True, exist_ok=True)
     entry = {
-        "ts": (
-            datetime.now(timezone.utc)
-            .isoformat(timespec="seconds")
-            .replace("+00:00", "Z")
-        ),
+        "ts": (datetime.now(timezone.utc).isoformat(timespec="seconds").replace("+00:00", "Z")),
         "step": step_num_desc,
         "error": error_message,
         "context": context,
     }
     with ERRORS_NDJSON.open("a", encoding="utf-8") as f:
@@ -116,13 +111,11 @@
         tmp.replace(path)
     else:
         path.parent.mkdir(parents=True, exist_ok=True)
         path.write_text(content, encoding="utf-8")
     after = path.read_text(encoding="utf-8")
-    log_change(
-        path, "write" if before is not None else "create", rationale, before, after
-    )
+    log_change(path, "write" if before is not None else "create", rationale, before, after)
 
 
 def ensure_repo_clean(force: bool):
     rc, out, err = sh(["git", "status", "--porcelain"])
     if rc != 0:
@@ -154,11 +147,12 @@
     return "\n".join(items)
 
 
 def render_precommit_yaml(existing: str | None) -> str:
     base = (
-        textwrap.dedent(f"""
+        textwrap.dedent(
+            f"""
     repos:
       - repo: https://github.com/astral-sh/ruff-pre-commit
         rev: {R_RUFF_PRECOMMIT_REV}
         hooks:
           - id: ruff-check
@@ -176,21 +170,21 @@
         hooks:
           - id: trailing-whitespace
           - id: end-of-file-fixer
           - id: check-yaml
           - id: mixed-line-ending
-    """).strip()
+    """
+        ).strip()
         + "\n"
     )
     if not existing:
         return base
     needed = []
     if "astral-sh/ruff-pre-commit" not in existing:
         needed.append(
             re.findall(
-                r"(?s)- repo: https://github.com/astral-sh/ruff-pre-commit.*?"
-                r"(?=\n\n- repo:|$)",
+                r"(?s)- repo: https://github.com/astral-sh/ruff-pre-commit.*?" r"(?=\n\n- repo:|$)",
                 base,
             )[0]
         )
     if "https://github.com/psf/black" not in existing:
         needed.append(
@@ -214,11 +208,12 @@
 def upsert_readme_section():
     txt = README.read_text(encoding="utf-8") if README.exists() else "# _codex_\n"
     section_title = "## Pre-commit (Ruff + Black)"
     if section_title in txt:
         return txt
-    guide = textwrap.dedent(f"""
+    guide = textwrap.dedent(
+        f"""
     {section_title}
 
     This repository uses [pre-commit](https://pre-commit.com) to run
     code-quality hooks locally.
     **DO NOT ACTIVATE ANY GitHub Actions files.**
@@ -242,11 +237,12 @@
 
     **Optional — run Black manually (kept as manual stage)**
     ```bash
     pre-commit run --hook-stage manual black --all-files
     ```
-    """).strip()
+    """
+    ).strip()
     return txt.rstrip() + "\n\n" + guide + "\n"
 
 
 def upsert_pyproject():
     base = ""
@@ -256,26 +252,30 @@
     has_ruff = re.search(r"(?m)^\[tool\.ruff\]", base) is not None
     has_black = re.search(r"(?m)^\[tool\.black\]", base) is not None
 
     if not has_ruff:
         parts.append(
-            textwrap.dedent("""
+            textwrap.dedent(
+                """
         [tool.ruff]
         line-length = 88
         target-version = "py312"
 
         [tool.ruff.lint]
         select = ["E", "F", "I"]
-        """).strip()
+        """
+            ).strip()
         )
     if not has_black:
         parts.append(
-            textwrap.dedent("""
+            textwrap.dedent(
+                """
         [tool.black]
         line-length = 88
         target-version = ["py312"]
-        """).strip()
+        """
+            ).strip()
         )
 
     if not parts:
         return base
     if base.strip():
@@ -324,15 +324,11 @@
 
     inv = inventory()
     print("Repository inventory (top-level):\n" + inv)
 
     try:
-        existing = (
-            PRECOMMIT_YAML.read_text(encoding="utf-8")
-            if PRECOMMIT_YAML.exists()
-            else None
-        )
+        existing = PRECOMMIT_YAML.read_text(encoding="utf-8") if PRECOMMIT_YAML.exists() else None
         rendered = render_precommit_yaml(existing)
         if not dry:
             safe_write(
                 PRECOMMIT_YAML,
                 rendered,
@@ -368,13 +364,11 @@
                 TEST_SMOKE,
                 ensure_smoke_test(),
                 "Add smoke test for .pre-commit-config.yaml presence",
             )
     except Exception as e:
-        log_error(
-            "3.4: create smoke test", repr(e), "tests/test_precommit_config_exists.py"
-        )
+        log_error("3.4: create smoke test", repr(e), "tests/test_precommit_config_exists.py")
 
     try:
         results = (
             textwrap.dedent(
                 f"""
@@ -411,13 +405,11 @@
     except Exception as e:
         log_error("6.2: write .codex/results.md", repr(e), "final summary")
 
     unresolved = ERRORS_NDJSON.exists() and ERRORS_NDJSON.stat().st_size > 0
     if unresolved:
-        print(
-            "Unresolved errors were captured in .codex/errors.ndjson", file=sys.stderr
-        )
+        print("Unresolved errors were captured in .codex/errors.ndjson", file=sys.stderr)
         sys.exit(1)
     print("Success. Pre-commit configuration bootstrapped.")
     sys.exit(0)
 
 
would reformat tools/codex_precommit_bootstrap.py
--- tools/codex_workflow_executor.py	2025-09-10 13:53:40.132279+00:00
+++ tools/codex_workflow_executor.py	2025-09-10 13:53:49.112449+00:00
@@ -73,11 +73,14 @@
 def ensure_make_target_shells():
     make_txt = MAKEFILE.read_text(encoding="utf-8") if MAKEFILE.exists() else ""
     target = "\ncodex-gates:\n\t@bash ci_local.sh\n"
     if "codex-gates:" not in make_txt:
         header = ".PHONY: codex-gates\n" if ".PHONY: codex-gates" not in make_txt else ""
-        MAKEFILE.write_text(make_txt + ("\n" if not make_txt.endswith("\n") else "") + header + target, encoding="utf-8")
+        MAKEFILE.write_text(
+            make_txt + ("\n" if not make_txt.endswith("\n") else "") + header + target,
+            encoding="utf-8",
+        )
         log_change('Makefile: added tiny "make codex-gates" target that shells to ci_local.sh')
 
 
 # --- ci_local.sh: venv-first, deterministic
 def ensure_ci_local_present():
@@ -103,11 +106,15 @@
     env = dict(os.environ)
     try:
         run(["bash", "ci_local.sh"], check=True, env=env)
         log_change("Local gates passed (pre-commit, pytest)")
     except subprocess.CalledProcessError as e:
-        ask_gpt5("Phase 6: Run local gates", f"returncode={e.returncode}", "pre-commit/pytest failed via ci_local.sh")
+        ask_gpt5(
+            "Phase 6: Run local gates",
+            f"returncode={e.returncode}",
+            "pre-commit/pytest failed via ci_local.sh",
+        )
         raise
 
 
 def main():
     ensure_codex_dir()
@@ -129,6 +136,5 @@
     return 0
 
 
 if __name__ == "__main__":
     sys.exit(main())
-
would reformat tools/codex_workflow_executor.py
--- tools/codex_supplied_task_runner.py	2025-09-10 07:58:47.273140+00:00
+++ tools/codex_supplied_task_runner.py	2025-09-10 13:53:49.146982+00:00
@@ -200,13 +200,11 @@
         sys.exit(2)
 
 
 def inject_docstring(path: Path, doc: str, apply: bool, changed: list[str]) -> None:
     if not path.exists():
-        record_error(
-            "3.1 DOCSTRINGS", f"Missing target file: {path}", "Will skip insertion"
-        )
+        record_error("3.1 DOCSTRINGS", f"Missing target file: {path}", "Will skip insertion")
         return
     text = path.read_text(encoding="utf-8")
     orig = text
     has_top_doc = bool(re.match(r'^\s*("""|\'\'\')', text))
     if not has_top_doc:
@@ -224,13 +222,11 @@
             + "**After (head):**\n```\n"
             + "\n".join(after)
             + "\n```\n",
         )
     else:
-        log_change(
-            f"Docstring unchanged: {path}", "Existing top-level docstring detected."
-        )
+        log_change(f"Docstring unchanged: {path}", "Existing top-level docstring detected.")
 
 
 def patch_readme(apply: bool, changed: list[str]) -> None:
     if not README.exists():
         record_error("3.3 README", "README.md not found", "Skipping README patch")
@@ -249,13 +245,11 @@
     if new_text is None:
         new_text = text.rstrip() + "\n\n" + README_INSERT + "\n"
     if apply:
         README.write_text(new_text, encoding="utf-8")
     changed.append(str(README))
-    log_change(
-        "README.md", "Inserted `SQLite Connection Pooling` subsection with examples."
-    )
+    log_change("README.md", "Inserted `SQLite Connection Pooling` subsection with examples.")
 
 
 def patch_agents_or_readme(apply: bool, changed: list[str]) -> None:
     target = AGENTS if AGENTS.exists() else README
     if not target.exists():
@@ -342,13 +336,11 @@
                         "mtime": st.st_mtime,
                     }
                 )
         except Exception:
             continue
-    (CODEX_DIR / "inventory.json").write_text(
-        json.dumps(items, indent=2), encoding="utf-8"
-    )
+    (CODEX_DIR / "inventory.json").write_text(json.dumps(items, indent=2), encoding="utf-8")
     log_change("Inventory", f"{len(items)} files indexed.")
 
 
 def main() -> None:
     ap = argparse.ArgumentParser()
@@ -361,23 +353,19 @@
 
     ensure_codex_dirs()
     build_inventory()
 
     if not is_clean_repo():
-        record_error(
-            "1.1 CLEAN", "Uncommitted changes detected", "Proceeding anyway (non-fatal)"
-        )
+        record_error("1.1 CLEAN", "Uncommitted changes detected", "Proceeding anyway (non-fatal)")
 
     changed: list[str] = []
 
     for rel in TARGETS:
         p = ROOT / rel
         doc = DOCSTRINGS.get(rel)
         if doc:
-            inject_docstring(
-                p, doc, apply=(args.apply and not args.dry_run), changed=changed
-            )
+            inject_docstring(p, doc, apply=(args.apply and not args.dry_run), changed=changed)
 
     patch_readme(apply=(args.apply and not args.dry_run), changed=changed)
     patch_agents_or_readme(apply=(args.apply and not args.dry_run), changed=changed)
 
     maybe_pre_commit(changed)
would reformat tools/codex_supplied_task_runner.py
--- tools/disable_remote_ci.py	2025-09-10 13:53:40.160279+00:00
+++ tools/disable_remote_ci.py	2025-09-10 13:53:49.171367+00:00
@@ -41,13 +41,24 @@
 While performing [{step}:{desc}], encountered the following error:
 {type(err).__name__}: {err}
 Context: {ctx}
 What are the possible causes, and how can this be resolved while preserving intended functionality?
 """
-    ERRORS_MD.write_text((ERRORS_MD.read_text() if ERRORS_MD.exists() else "") + "\n\n" + msg, encoding="utf-8")
+    ERRORS_MD.write_text(
+        (ERRORS_MD.read_text() if ERRORS_MD.exists() else "") + "\n\n" + msg, encoding="utf-8"
+    )
     with ERRORS_ND.open("a", encoding="utf-8") as f:
-        json.dump({"ts": utcnow(), "step": step, "desc": desc, "error": f"{type(err).__name__}: {err}", "ctx": ctx}, f)
+        json.dump(
+            {
+                "ts": utcnow(),
+                "step": step,
+                "desc": desc,
+                "error": f"{type(err).__name__}: {err}",
+                "ctx": ctx,
+            },
+            f,
+        )
         f.write("\n")
 
 
 def append_changelog(title, bullets):
     body = "".join([f"- {b}\n" for b in bullets])
@@ -97,10 +108,11 @@
     # Replace entire on: block with `on:\n  workflow_dispatch:`
     new = re.sub(r"(?ms)^on:\s*(?:.+?)(?=^\S|\Z)", "on:\n  workflow_dispatch:\n", text)
     if new != text:
         any_change = True
         text = new
+
     # For each job under jobs:, inject if line when missing (best-effort)
     def guard_jobs(txt: str) -> tuple[str, int]:
         jobs_guarded = 0
         pattern = re.compile(r"(?m)^(\s{2}[A-Za-z0-9_.-]+:\s*\n(\s{4}.+\n)*)")
         pos = 0
@@ -111,14 +123,15 @@
                 block = block.splitlines()
                 indent = "    "
                 block.insert(1, f"{indent}if: ${{ false }}")
                 jobs_guarded += 1
                 block = "\n".join(block) + "\n"
-            out += txt[pos:m.start()] + block
+            out += txt[pos : m.start()] + block
             pos = m.end()
         out += txt[pos:]
         return out, jobs_guarded
+
     text, guarded = guard_jobs(text)
     if any_change or guarded:
         path.write_text(text, encoding="utf-8")
     return (any_change or bool(guarded), guarded)
 
@@ -159,14 +172,17 @@
                 changed_files += 1
                 total_jobs_guarded += guarded
         except Exception as e:
             record_error("STEP_06", "Patch workflow triggers/guards", e, ctx=str(wf))
     write_ci_doc()
-    append_changelog("Disable remote CI", [
-        f"Patched {changed_files} workflow file(s) to `workflow_dispatch` and guarded jobs.",
-        f"Total jobs guarded: {total_jobs_guarded}",
-    ])
+    append_changelog(
+        "Disable remote CI",
+        [
+            f"Patched {changed_files} workflow file(s) to `workflow_dispatch` and guarded jobs.",
+            f"Total jobs guarded: {total_jobs_guarded}",
+        ],
+    )
     print(f"[Summary] Patched files: {changed_files} | Jobs guarded: {total_jobs_guarded}")
     print(f"[Docs]    Wrote: {DOCS / 'ci.md'}")
     if ERRORS_MD.exists():
         print(f"[Errors]  See: {ERRORS_MD} and {ERRORS_ND}")
 
would reformat tools/disable_remote_ci.py
--- tools/codex_src_consolidation.py	2025-09-10 07:58:47.273140+00:00
+++ tools/codex_src_consolidation.py	2025-09-10 13:53:49.241677+00:00
@@ -17,13 +17,11 @@
 # --------------------------- Utilities & Logging ---------------------------
 
 
 def repo_root() -> Path:
     try:
-        p = subprocess.check_output(
-            ["git", "rev-parse", "--show-toplevel"], text=True
-        ).strip()
+        p = subprocess.check_output(["git", "rev-parse", "--show-toplevel"], text=True).strip()
         return Path(p)
     except Exception:
         return Path.cwd()
 
 
@@ -53,13 +51,11 @@
 ):
     CHANGE_LOG.parent.mkdir(parents=True, exist_ok=True)
     if not CHANGE_LOG.exists():
         CHANGE_LOG.write_text("# .codex/change_log.md\n\n", encoding="utf-8")
     entry = (
-        f"## {now_iso()} — {action}\n"
-        f"**File:** {path.as_posix()}\n"
-        f"**Why:** {rationale}\n"
+        f"## {now_iso()} — {action}\n" f"**File:** {path.as_posix()}\n" f"**Why:** {rationale}\n"
     )
     if before or after:
         entry += "```diff\n"
         if before:
             entry += f"- {before}\n"
@@ -120,13 +116,11 @@
             role = (
                 "code"
                 if p.suffix in {".py", ".sh", ".js", ".ts", ".sql", ".html", ".css"}
                 else "other"
             )
-            items.append(
-                {"path": str(p.relative_to(R)), "role": role, "size": p.stat().st_size}
-            )
+            items.append({"path": str(p.relative_to(R)), "role": role, "size": p.stat().st_size})
     inv = {"root": str(R), "count": len(items), "items": items}
     INVENTORY.write_text(json.dumps(inv, indent=2), encoding="utf-8")
     return inv
 
 
@@ -248,13 +242,11 @@
     for md in candidates:
         if not md.exists():
             continue
         try:
             txt = md.read_text(encoding="utf-8")
-            new = txt.replace(" codex/", " src/codex/").replace(
-                "`codex/`", "`src/codex/`"
-            )
+            new = txt.replace(" codex/", " src/codex/").replace("`codex/`", "`src/codex/`")
             if new != txt:
                 md.write_text(new, encoding="utf-8")
                 log_change(
                     md,
                     "update-docs",
@@ -292,13 +284,11 @@
 def safe_rename_legacy_codex():
     ts = time.strftime("%Y%m%d_%H%M%S")
     new = R / f"codex_legacy_{ts}"
     try:
         D_TOP.rename(new)
-        log_change(
-            D_TOP, "rename", "Preserve legacy top-level codex directory", after=new.name
-        )
+        log_change(D_TOP, "rename", "Preserve legacy top-level codex directory", after=new.name)
         return new
     except Exception as e:
         log_error("3.2 RENAME", str(e), "Preserving legacy codex before symlink/proxy")
         return None
 
@@ -446,12 +436,11 @@
         "constructed": constructed,
         "inventory_count": inv.get("count", 0),
         "explicit_warning": "DO NOT ACTIVATE ANY GitHub Actions files.",
         "next_steps": [
             "Run pytest to validate imports/tests: `pytest -q`",
-            "If Windows with no symlink support, use --mode proxy "
-            "(already attempted in auto).",
+            "If Windows with no symlink support, use --mode proxy " "(already attempted in auto).",
             "Review .codex/change_log.md and .codex/errors.ndjson",
         ],
     }
     RESULTS.write_text(json.dumps(results, indent=2), encoding="utf-8")
     print(json.dumps(results, indent=2))
would reformat tools/codex_src_consolidation.py
--- tools/install_codex_hooks.py	2025-09-10 13:53:40.152279+00:00
+++ tools/install_codex_hooks.py	2025-09-10 13:53:49.258542+00:00
@@ -94,6 +94,5 @@
         print(f"Failed to install prepare-commit-msg hook at {hook}: {exc}", flush=True)
 
 
 if __name__ == "__main__":
     main()
-    
\ No newline at end of file
would reformat tools/install_codex_hooks.py
--- tools/codex_sqlite_align.py	2025-09-10 07:58:47.273140+00:00
+++ tools/codex_sqlite_align.py	2025-09-10 13:53:49.310855+00:00
@@ -183,13 +183,11 @@
             r"(sqlite3\.connect\(\s*[ru]?)(['\"])([^'\"]+)(\2)(\s*\))",
             rf"\1\2{repo_root.as_posix()}/{default_path}\2\5",
             snippet,
         )
     else:
-        return re.sub(
-            r"(['\"])([^'\"]+\.(?:db|sqlite))\1", rf"\1./{default_path}\1", snippet
-        )
+        return re.sub(r"(['\"])([^'\"]+\.(?:db|sqlite))\1", rf"\1./{default_path}\1", snippet)
 
 
 def try_update_file(
     p: Path,
     repo_root: Path,
@@ -242,26 +240,22 @@
                     reason="Write failed (permissions or lock)",
                     alternatives=["Run with elevated perms", "Modify via PR patch"],
                     risk="Medium",
                 )
             )
-            step_error(
-                "3.1: Default Path Alignment", e, f"Writing file {p}", research_path
-            )
+            step_error("3.1: Default Path Alignment", e, f"Writing file {p}", research_path)
 
 
 def update_readme(
     readme: Path, repo_root: Path, change_log: List[ChangeEntry], research_path: Path
 ):
     if not readme.exists():
         return
     try:
         text = readme.read_text(encoding="utf-8")
         original = text
-        text = re.sub(
-            r"(sqlite\+?:///)[^\s\)]+", r"./.codex/.codex/session_logs.db", text
-        )
+        text = re.sub(r"(sqlite\+?:///)[^\s\)]+", r"./.codex/.codex/session_logs.db", text)
         text = re.sub(
             r"sqlite3\.connect\(\s*[ru]?['\"]([^'\"]+\.(?:db|sqlite))['\"]\s*\)",
             "sqlite3.connect('./.codex/.codex/session_logs.db')",
             text,
         )
@@ -279,13 +273,11 @@
                     changes=1,
                     notes="Standardized README DB references",
                 )
             )
     except Exception as e:
-        step_error(
-            "3.4: README Reference Updates", e, f"Updating {readme}", research_path
-        )
+        step_error("3.4: README Reference Updates", e, f"Updating {readme}", research_path)
 
 
 def discover_db_files(repo_root: Path) -> List[Path]:
     candidates = []
     for base, dirs, fns in os.walk(repo_root):
@@ -337,13 +329,11 @@
     try:
         con = sqlite3.connect(db_path)
         cur = con.cursor()
         cur.execute("SELECT name FROM sqlite_master WHERE type='table'")
         tables = [r[0] for r in cur.fetchall()]
-        prioritized = sorted(
-            tables, key=lambda t: (0 if LIKELY_LOG_TABLE_PAT.search(t) else 1, t)
-        )
+        prioritized = sorted(tables, key=lambda t: (0 if LIKELY_LOG_TABLE_PAT.search(t) else 1, t))
         for t in prioritized:
             try:
                 safe = _sanitize_table(t)
             except ValueError:
                 continue
@@ -358,13 +348,11 @@
                     fh.write(",".join(cols) + "\n")
                     for r in rows:
                         fh.write(
                             ",".join(
                                 [
-                                    json.dumps(v, ensure_ascii=False)
-                                    if v is not None
-                                    else ""
+                                    json.dumps(v, ensure_ascii=False) if v is not None else ""
                                     for v in r
                                 ]
                             )
                             + "\n"
                         )
@@ -386,17 +374,13 @@
 
 # -------------------- Main Workflow --------------------
 
 
 def main():
-    ap = argparse.ArgumentParser(
-        description="Codex SQLite alignment & logging preview tool"
-    )
+    ap = argparse.ArgumentParser(description="Codex SQLite alignment & logging preview tool")
     ap.add_argument("--repo", type=str, default=".", help="Path to repo root")
-    ap.add_argument(
-        "--max-rows", type=int, default=50, help="Max rows for table previews"
-    )
+    ap.add_argument("--max-rows", type=int, default=50, help="Max rows for table previews")
     ap.add_argument("--verbose", action="store_true")
     args = ap.parse_args()
 
     repo_root = Path(args.repo).resolve()
     out_dir = repo_root / ".codex" / "automation_out"
@@ -409,58 +393,47 @@
     (repo_root / ".codex").mkdir(parents=True, exist_ok=True)
 
     try:
         update_readme(repo_root / "README.md", repo_root, change_log, research_md)
     except Exception as e:
-        step_error(
-            "2.1: README Parsing", e, f"Path {repo_root / 'README.md'}", research_md
-        )
+        step_error("2.1: README Parsing", e, f"Path {repo_root / 'README.md'}", research_md)
 
     files = iter_repo_files(repo_root)
     for p in files:
         try_update_file(p, repo_root, change_log, prunes, research_md)
 
     db_candidates = discover_db_files(repo_root)
     db_inventory = {
         "discovered": [str(p) for p in db_candidates],
         "timestamp": datetime.now(timezone.utc).isoformat().replace("+00:00", "Z"),
     }
-    (out_dir / "db_inventory.json").write_text(
-        json.dumps(db_inventory, indent=2), encoding="utf-8"
-    )
+    (out_dir / "db_inventory.json").write_text(json.dumps(db_inventory, indent=2), encoding="utf-8")
 
     catalogs = []
     previews = []
     for dbp in db_candidates:
         try:
             cat = sqlite_catalog(dbp, max_rows=args.max_rows)
             catalogs.append(cat)
         except Exception as e:
-            step_error(
-                "3.3: Auto-Inference & Preview", e, f"Cataloging {dbp}", research_md
-            )
+            step_error("3.3: Auto-Inference & Preview", e, f"Cataloging {dbp}", research_md)
             continue
         try:
             previews += dump_preview(dbp, out_dir, max_rows=args.max_rows)
         except Exception as e:
-            step_error(
-                "3.3: Auto-Inference & Preview", e, f"Previewing {dbp}", research_md
-            )
-
-    (out_dir / "db_catalog.json").write_text(
-        json.dumps(catalogs, indent=2), encoding="utf-8"
-    )
+            step_error("3.3: Auto-Inference & Preview", e, f"Previewing {dbp}", research_md)
+
+    (out_dir / "db_catalog.json").write_text(json.dumps(catalogs, indent=2), encoding="utf-8")
 
     implemented = {
         "O1_default_path": True,
         "O2_dual_extension": True,
         "O3_auto_infer_preview": True,
     }
     executed = {
         "O1_default_path": any(
-            c.file.endswith((".py", ".toml", ".yaml", ".yml", ".json", ".md"))
-            for c in change_log
+            c.file.endswith((".py", ".toml", ".yaml", ".yml", ".json", ".md")) for c in change_log
         ),
         "O2_dual_extension": len(db_candidates) >= 0,
         "O3_auto_infer_preview": len(previews) > 0 or len(catalogs) > 0,
     }
     pruned_count = len(prunes)
would reformat tools/codex_sqlite_align.py
--- tools/file_integrity_audit.py	2025-09-10 13:53:40.128279+00:00
+++ tools/file_integrity_audit.py	2025-09-10 13:53:49.337050+00:00
@@ -7,103 +7,128 @@
 import sys
 
 
 def sha256(p: pathlib.Path) -> str:
     h = hashlib.sha256()
-    with p.open('rb') as f:
-        for chunk in iter(lambda: f.read(65536), b''): h.update(chunk)
+    with p.open("rb") as f:
+        for chunk in iter(lambda: f.read(65536), b""):
+            h.update(chunk)
     return h.hexdigest()
 
+
 def snapshot(out_path: str):
-    root = pathlib.Path('.').resolve()
+    root = pathlib.Path(".").resolve()
     out = {}
-    for p in root.rglob('*'):
-        if p.is_file() and '.git' not in p.parts:
+    for p in root.rglob("*"):
+        if p.is_file() and ".git" not in p.parts:
             rel = str(p.relative_to(root))
-            out[rel] = {'sha256': sha256(p), 'size': p.stat().st_size}
-    pathlib.Path(out_path).write_text(json.dumps(out, indent=2), encoding='utf-8')
+            out[rel] = {"sha256": sha256(p), "size": p.stat().st_size}
+    pathlib.Path(out_path).write_text(json.dumps(out, indent=2), encoding="utf-8")
     print(f"[integrity] snapshot -> {out_path}")
 
+
 def compare(pre_path: str, post_path: str, allow_removed: list, allow_added: list) -> int:
-    pre = json.loads(pathlib.Path(pre_path).read_text(encoding='utf-8'))
-    post = json.loads(pathlib.Path(post_path).read_text(encoding='utf-8'))
+    pre = json.loads(pathlib.Path(pre_path).read_text(encoding="utf-8"))
+    post = json.loads(pathlib.Path(post_path).read_text(encoding="utf-8"))
 
     pre_files, post_files = set(pre.keys()), set(post.keys())
     added = list(post_files - pre_files)
     removed = list(pre_files - post_files)
-    changed = [p for p in (pre_files & post_files) if pre[p]['sha256'] != post[p]['sha256']]
+    changed = [p for p in (pre_files & post_files) if pre[p]["sha256"] != post[p]["sha256"]]
 
     post_hash_to_paths = {}
     for pth, meta in post.items():
-        post_hash_to_paths.setdefault(meta['sha256'], set()).add(pth)
+        post_hash_to_paths.setdefault(meta["sha256"], set()).add(pth)
     moves = []
     rem_left = []
     for rf in removed:
-        h = pre[rf]['sha256']
+        h = pre[rf]["sha256"]
         targets = sorted(post_hash_to_paths.get(h, []))
         if targets:
-            moves.append({'from': rf, 'to': targets[0]})
+            moves.append({"from": rf, "to": targets[0]})
         else:
             rem_left.append(rf)
 
     add_left = set(added)
     for m in moves:
-        if m['to'] in add_left:
-            add_left.remove(m['to'])
+        if m["to"] in add_left:
+            add_left.remove(m["to"])
 
     def match_any(path, patterns):
         return any(fnmatch.fnmatch(path, pat) for pat in patterns)
+
     unexpected_removed = [p for p in rem_left if not match_any(p, allow_removed)]
     unexpected_added = [p for p in add_left if not match_any(p, allow_added)]
 
     try:
-        git_renames = subprocess.run([
-            'git','diff','--name-status','-M','-C','HEAD~1','HEAD'
-        ], capture_output=True, text=True, check=False).stdout.strip()
+        git_renames = subprocess.run(
+            ["git", "diff", "--name-status", "-M", "-C", "HEAD~1", "HEAD"],
+            capture_output=True,
+            text=True,
+            check=False,
+        ).stdout.strip()
     except Exception:
-        git_renames = ''
+        git_renames = ""
 
     report = {
-        'summary': {
-            'removed': len(removed), 'added': len(added), 'changed': len(changed),
-            'moves': len(moves),
-            'unexpected_removed': len(unexpected_removed), 'unexpected_added': len(unexpected_added)
+        "summary": {
+            "removed": len(removed),
+            "added": len(added),
+            "changed": len(changed),
+            "moves": len(moves),
+            "unexpected_removed": len(unexpected_removed),
+            "unexpected_added": len(unexpected_added),
         },
-        'details': {
-            'removed': removed, 'added': added, 'changed': changed,
-            'moves': moves,
-            'unexpected_removed': unexpected_removed,
-            'unexpected_added': list(add_left),
-            'git_diff_name_status': git_renames
-        }
+        "details": {
+            "removed": removed,
+            "added": added,
+            "changed": changed,
+            "moves": moves,
+            "unexpected_removed": unexpected_removed,
+            "unexpected_added": list(add_left),
+            "git_diff_name_status": git_renames,
+        },
     }
-    out = pathlib.Path('.')/'.codex'/'validation'/pathlib.Path(pre_path).parent.name/'compare_report.json'
+    out = (
+        pathlib.Path(".")
+        / ".codex"
+        / "validation"
+        / pathlib.Path(pre_path).parent.name
+        / "compare_report.json"
+    )
     out.parent.mkdir(parents=True, exist_ok=True)
-    out.write_text(json.dumps(report, indent=2), encoding='utf-8')
+    out.write_text(json.dumps(report, indent=2), encoding="utf-8")
     print(json.dumps(report, indent=2))
     return 0 if not changed and not unexpected_removed and not unexpected_added else 1
 
+
 def main():
-    if len(sys.argv) < 3 or sys.argv[1] not in {'snapshot','compare'}:
-        print('usage: file_integrity_audit.py snapshot <out.json> | compare <pre.json> <post.json> [--allow-removed X ...] [--allow-added Y ...]')
+    if len(sys.argv) < 3 or sys.argv[1] not in {"snapshot", "compare"}:
+        print(
+            "usage: file_integrity_audit.py snapshot <out.json> | compare <pre.json> <post.json> [--allow-removed X ...] [--allow-added Y ...]"
+        )
         return 2
-    if sys.argv[1] == 'snapshot':
-        snapshot(sys.argv[2]); return 0
+    if sys.argv[1] == "snapshot":
+        snapshot(sys.argv[2])
+        return 0
     pre, post = sys.argv[2], sys.argv[3]
     allow_removed, allow_added = [], []
     i = 4
     while i < len(sys.argv):
-        if sys.argv[i] == '--allow-removed':
+        if sys.argv[i] == "--allow-removed":
             i += 1
-            while i < len(sys.argv) and not sys.argv[i].startswith('--'):
-                allow_removed.append(sys.argv[i]); i += 1
+            while i < len(sys.argv) and not sys.argv[i].startswith("--"):
+                allow_removed.append(sys.argv[i])
+                i += 1
             continue
-        if sys.argv[i] == '--allow-added':
+        if sys.argv[i] == "--allow-added":
             i += 1
-            while i < len(sys.argv) and not sys.argv[i].startswith('--'):
-                allow_added.append(sys.argv[i]); i += 1
+            while i < len(sys.argv) and not sys.argv[i].startswith("--"):
+                allow_added.append(sys.argv[i])
+                i += 1
             continue
         i += 1
     return compare(pre, post, allow_removed, allow_added)
 
-if __name__ == '__main__':
+
+if __name__ == "__main__":
     raise SystemExit(main())
would reformat tools/file_integrity_audit.py
--- tools/purge_session_logs.py	2025-09-10 07:58:47.273140+00:00
+++ tools/purge_session_logs.py	2025-09-10 13:53:49.494415+00:00
@@ -40,32 +40,27 @@
     else:
         print(f"Log directory not found: {log_dir}")
 
     # Purge SQLite rows
     db_path = db_path or Path(
-        os.getenv("CODEX_LOG_DB_PATH")
-        or os.getenv("CODEX_DB_PATH", ".codex/session_logs.db")
+        os.getenv("CODEX_LOG_DB_PATH") or os.getenv("CODEX_DB_PATH", ".codex/session_logs.db")
     )
     rows_deleted = 0
     if db_path.exists():
         conn = sqlite3.connect(db_path)
         try:
             cur = conn.execute(
                 "SELECT name FROM sqlite_master WHERE type='table' AND name='session_events'"
             )
             if cur.fetchone():
                 cutoff_ts = cutoff_dt.timestamp()
-                cur = conn.execute(
-                    "SELECT COUNT(*) FROM session_events WHERE ts < ?", (cutoff_ts,)
-                )
+                cur = conn.execute("SELECT COUNT(*) FROM session_events WHERE ts < ?", (cutoff_ts,))
                 rows_deleted = cur.fetchone()[0]
                 if dry_run:
                     print(f"Would delete {rows_deleted} rows from {db_path}")
                 else:
-                    conn.execute(
-                        "DELETE FROM session_events WHERE ts < ?", (cutoff_ts,)
-                    )
+                    conn.execute("DELETE FROM session_events WHERE ts < ?", (cutoff_ts,))
                     conn.commit()
                     conn.execute("VACUUM")
             else:
                 print(f"Table 'session_events' not found in {db_path}")
         finally:
would reformat tools/purge_session_logs.py
--- tools/offline_repo_auditor.py	2025-09-10 07:58:47.273140+00:00
+++ tools/offline_repo_auditor.py	2025-09-10 13:53:49.953282+00:00
@@ -124,13 +124,11 @@
 
     def walk_repo(self, root: str) -> Iterable[str]:
         for dirpath, dirnames, filenames in os.walk(root):
             # prune ignored dirs
             dirnames[:] = [
-                d
-                for d in dirnames
-                if d not in IGNORE_DIRS and not d.startswith(".mamba")
+                d for d in dirnames if d not in IGNORE_DIRS and not d.startswith(".mamba")
             ]
             for name in filenames:
                 yield os.path.join(dirpath, name)
 
     def is_text(self, path: str) -> bool:
@@ -141,13 +139,11 @@
         findings: List[FileFinding] = []
         lines = content.splitlines()
         for i, line in enumerate(lines, start=1):
             for pat in STUB_PATTERNS:
                 if re.search(pat, line):
-                    findings.append(
-                        FileFinding(path=path, line_no=i, kind=pat, line=line.strip())
-                    )
+                    findings.append(FileFinding(path=path, line_no=i, kind=pat, line=line.strip()))
                     break
         return findings
 
     def parse_py(self, path: str, content: str) -> Optional[PyStructure]:
         try:
@@ -177,13 +173,11 @@
                 classes.append(node.name)
                 if ast.get_docstring(node):
                     docstrings += 1
         # LOC and comments
         loc = content.count("\n") + 1
-        comments = sum(
-            1 for line in content.splitlines() if line.strip().startswith("#")
-        )
+        comments = sum(1 for line in content.splitlines() if line.strip().startswith("#"))
         return PyStructure(
             imports=imports,
             functions=functions,
             classes=classes,
             docstrings=docstrings,
@@ -197,13 +191,11 @@
         # Top-level
         try:
             entries = os.listdir(root)
         except Exception as e:
             raise RuntimeError(f"Failed to listdir({root}): {e}") from e
-        self.summary.top_dirs = sorted(
-            [e for e in entries if os.path.isdir(os.path.join(root, e))]
-        )
+        self.summary.top_dirs = sorted([e for e in entries if os.path.isdir(os.path.join(root, e))])
         self.summary.top_files = sorted(
             [e for e in entries if os.path.isfile(os.path.join(root, e))]
         )
 
         for path in self.walk_repo(root):
@@ -211,13 +203,11 @@
             ext = os.path.splitext(path)[1].lower()
             if ext == ".ipynb":
                 self.summary.notebooks.append(rel)
             if ext in {".yaml", ".yml", ".toml", ".ini", ".cfg", ".json"}:
                 self.summary.configs.append(rel)
-            if fnmatch.fnmatch(rel, "tests/test_*.py") or fnmatch.fnmatch(
-                rel, "test/*.py"
-            ):
+            if fnmatch.fnmatch(rel, "tests/test_*.py") or fnmatch.fnmatch(rel, "test/*.py"):
                 self.summary.tests.append(rel)
 
             if not self.is_text(path):
                 continue
             try:
@@ -248,26 +238,22 @@
             return False
 
         def seen_file(pattern: str) -> bool:
             return any(
                 fnmatch.fnmatch(p, pattern)
-                for p in list(summary.py_structs.keys())
-                + summary.configs
-                + summary.top_files
+                for p in list(summary.py_structs.keys()) + summary.configs + summary.top_files
             )
 
         # Tokenization
         caps["tokenization"] = (
             "Implemented"
             if any("tokenizer" in p.lower() for p in summary.py_structs.keys())
             else "Missing"
         )
 
         # Modeling
-        if seen_import("torch") or any(
-            "model" in p.lower() for p in summary.py_structs.keys()
-        ):
+        if seen_import("torch") or any("model" in p.lower() for p in summary.py_structs.keys()):
             caps["modeling"] = "Partially Implemented"
         else:
             caps["modeling"] = "Missing"
 
         # Training
@@ -290,24 +276,17 @@
             if any("eval" in p.lower() for p in summary.py_structs.keys())
             else "Missing"
         )
 
         # Logging/Monitoring
-        if (
-            seen_import("torch.utils.tensorboard")
-            or seen_import("mlflow")
-            or seen_import("wandb")
-        ):
+        if seen_import("torch.utils.tensorboard") or seen_import("mlflow") or seen_import("wandb"):
             caps["logging"] = "Partially Implemented"
         else:
             caps["logging"] = "Missing"
 
         # Checkpointing
-        if any(
-            "checkpoint" in p.lower() or "ckpt" in p.lower()
-            for p in summary.py_structs.keys()
-        ):
+        if any("checkpoint" in p.lower() or "ckpt" in p.lower() for p in summary.py_structs.keys()):
             caps["checkpointing"] = "Partially Implemented"
         else:
             caps["checkpointing"] = "Missing"
 
         # Data Handling
@@ -330,30 +309,24 @@
         else:
             caps["security"] = "Missing"
 
         # Internal CI/Test
         if summary.tests or any(
-            f in summary.top_files
-            for f in ["tox.ini", "noxfile.py", ".pre-commit-config.yaml"]
+            f in summary.top_files for f in ["tox.ini", "noxfile.py", ".pre-commit-config.yaml"]
         ):
             caps["ci"] = "Implemented"
         else:
             caps["ci"] = "Missing"
 
         # Deployment
-        if any(
-            f in summary.top_files for f in ["pyproject.toml", "setup.py", "Dockerfile"]
-        ):
+        if any(f in summary.top_files for f in ["pyproject.toml", "setup.py", "Dockerfile"]):
             caps["deploy"] = "Partially Implemented"
         else:
             caps["deploy"] = "Missing"
 
         # Docs
-        if (
-            any(f.lower().startswith("readme") for f in summary.top_files)
-            or summary.notebooks
-        ):
+        if any(f.lower().startswith("readme") for f in summary.top_files) or summary.notebooks:
             caps["docs"] = "Partially Implemented"
         else:
             caps["docs"] = "Missing"
 
         # Experiment Tracking
@@ -368,13 +341,11 @@
         else:
             caps["extensibility"] = "Missing"
 
         return caps
 
-    def render_markdown(
-        self, out_path: str, repo: str = "Aries-Serpent/_codex_"
-    ) -> None:
+    def render_markdown(self, out_path: str, repo: str = "Aries-Serpent/_codex_") -> None:
         now = dt.datetime.utcnow().strftime("%Y-%m-%d %H:%M:%S")
         buf = io.StringIO()
         w = buf.write
 
         # Header
@@ -420,13 +391,11 @@
             w(f"| {title} | {caps.get(key, 'Missing')} |\n")
         w("\n")
 
         # Findings
         w("## 3) High-Signal Findings\n\n")
-        w(
-            "- Automated heuristic assessment; validate against your code’s ground truth.\n"
-        )
+        w("- Automated heuristic assessment; validate against your code’s ground truth.\n")
         w("- Add deterministic seeding and RNG capture if absent.\n")
         w("- Provide offline-safe logging (TB/NDJSON) and MLflow local tracking.\n")
         w("- Ensure configs exist for seed/device/dtype/precision.\n")
         w("- Add tests and tox gate to enforce offline correctness.\n\n")
 
@@ -450,13 +419,11 @@
         now = dt.datetime.utcnow().strftime("%Y-%m-%d %H:%M:%S")
         with open(args.out, "w", encoding="utf-8") as f:
             f.write(f"# [Audit]: Collection Error\n> Generated: {now}\n\n")
             f.write("```\n")
             f.write(f"Question for ChatGPT-5 {now}:\n")
-            f.write(
-                "While performing STEP_1:REPO_TRAVERSAL, encountered the following error:\n"
-            )
+            f.write("While performing STEP_1:REPO_TRAVERSAL, encountered the following error:\n")
             f.write(f"{e}\n")
             f.write("Context: offline auditor execution.\n")
             f.write(
                 "What are the possible causes, and how can this be resolved while preserving intended functionality?\n"
             )
would reformat tools/offline_repo_auditor.py
--- tools/monitoring_integrate.py	2025-09-10 07:58:47.273140+00:00
+++ tools/monitoring_integrate.py	2025-09-10 13:53:49.989802+00:00
@@ -252,13 +252,11 @@
                     f"{type(e).__name__}: {e}",
                     "Initialize MLflow local file store",
                 )
                 self._log_exception("mlflow_init")
         try:
-            self.metrics_thread = SystemMetrics(
-                self.metrics_interval, self.log_system_metrics
-            )
+            self.metrics_thread = SystemMetrics(self.metrics_interval, self.log_system_metrics)
             self.metrics_thread.start()
         except Exception as e:
             q5(
                 "SysMetrics:start",
                 f"{type(e).__name__}: {e}",
@@ -309,13 +307,11 @@
                 "log_histogram",
                 f"{type(e).__name__}: {e}",
                 f"tag={tag}, step={step}, bins={bins}",
             )
 
-    def log_artifact(
-        self, local_path: Path, artifact_name: Optional[str] = None
-    ) -> None:
+    def log_artifact(self, local_path: Path, artifact_name: Optional[str] = None) -> None:
         try:
             if self.mlf:
                 mlflow.log_artifact(str(local_path), artifact_path=artifact_name or "")
             if self.wb:
                 wandb.save(str(local_path))
@@ -325,17 +321,13 @@
     def log_system_metrics(self, payload: dict) -> None:
         try:
             append(self.logs / "system_metrics.jsonl", json.dumps(payload) + "\n")
             step = int(time.time())
             if "cpu_percent" in payload:
-                self.log_scalar(
-                    "system/cpu_percent", float(payload["cpu_percent"]), step
-                )
+                self.log_scalar("system/cpu_percent", float(payload["cpu_percent"]), step)
             if "ram_used_mb" in payload:
-                self.log_scalar(
-                    "system/ram_used_mb", float(payload["ram_used_mb"]), step
-                )
+                self.log_scalar("system/ram_used_mb", float(payload["ram_used_mb"]), step)
         except Exception as e:
             q5(
                 "log_system_metrics",
                 f"{type(e).__name__}: {e}",
                 "write & route metrics",
@@ -415,16 +407,12 @@
 def main() -> None:
     ap = argparse.ArgumentParser(
         description="Integrate monitoring (TB/W&B/MLflow) with system metrics."
     )
     ap.add_argument("--run-name", default="demo", help="Name for this run.")
-    ap.add_argument(
-        "--output-root", default="runs", help="Root directory for run outputs."
-    )
-    ap.add_argument(
-        "--enable-tensorboard", action="store_true", help="Enable TensorBoard logging."
-    )
+    ap.add_argument("--output-root", default="runs", help="Root directory for run outputs.")
+    ap.add_argument("--enable-tensorboard", action="store_true", help="Enable TensorBoard logging.")
     ap.add_argument(
         "--enable-wandb",
         action="store_true",
         help="Enable W&B logging (requires WANDB_PROJECT).",
     )
@@ -438,13 +426,11 @@
         type=float,
         default=5.0,
         help="System metrics interval in seconds.",
     )
     ap.add_argument("--steps", type=int, default=50, help="Demo steps to run.")
-    ap.add_argument(
-        "--write-docs", action="store_true", help="Also write docs/ops/monitoring.md."
-    )
+    ap.add_argument("--write-docs", action="store_true", help="Also write docs/ops/monitoring.md.")
     args = ap.parse_args()
 
     out = REPO / args.output_root / args.run_name
     out.mkdir(parents=True, exist_ok=True)
     log_change("create", out, "Prepare monitoring output dir")
would reformat tools/monitoring_integrate.py
--- tools/run_supplied_task.py	2025-09-10 07:58:47.273140+00:00
+++ tools/run_supplied_task.py	2025-09-10 13:53:50.015692+00:00
@@ -67,26 +67,20 @@
 Context: {ctx}
 What are the possible causes, and how can this be resolved while preserving intended functionality?
 """
     sys.stderr.write(block + "\n")
     ERRORS.write_text(
-        json.dumps({"ts": now_iso(), "step": step, "error": err, "context": ctx})
-        + "\n",
+        json.dumps({"ts": now_iso(), "step": step, "error": err, "context": ctx}) + "\n",
         encoding="utf-8",
         append=True if hasattr(CHANGE_LOG, "append") else False,
     )
     # pathlib has no append; emulate:
     with ERRORS.open("a", encoding="utf-8") as f:
-        f.write(
-            json.dumps({"ts": now_iso(), "step": step, "error": err, "context": ctx})
-            + "\n"
-        )
-
-
-def append_change(
-    file_path: pathlib.Path, action: str, rationale: str, before: str, after: str
-):
+        f.write(json.dumps({"ts": now_iso(), "step": step, "error": err, "context": ctx}) + "\n")
+
+
+def append_change(file_path: pathlib.Path, action: str, rationale: str, before: str, after: str):
     diff = "\n".join(
         difflib.unified_diff(
             before.splitlines(),
             after.splitlines(),
             fromfile=str(file_path),
@@ -94,11 +88,12 @@
             lineterm="",
         )
     )
     with CHANGE_LOG.open("a", encoding="utf-8") as f:
         f.write(
-            textwrap.dedent(f"""
+            textwrap.dedent(
+                f"""
         ## {now_iso()} — {file_path.relative_to(ROOT)}
         - **Action:** {action}
         - **Rationale:** {rationale}
 
         <details><summary>Diff (summary)</summary>
@@ -106,11 +101,12 @@
         ```diff
         {diff}
         ```
 
         </details>
-        """).strip()
+        """
+            ).strip()
             + "\n\n"
         )
 
 
 def sha256_text(s: str) -> str:
@@ -138,13 +134,11 @@
             try:
                 items.append(
                     {
                         "path": str(p.relative_to(ROOT)),
                         "size": p.stat().st_size,
-                        "sha256": sha256_text(
-                            p.read_text(encoding="utf-8", errors="ignore")
-                        ),
+                        "sha256": sha256_text(p.read_text(encoding="utf-8", errors="ignore")),
                     }
                 )
             except Exception:
                 items.append(
                     {
@@ -162,21 +156,17 @@
     # Guard: ensure we never plan writes under .github/workflows
     workflows = ROOT / ".github" / "workflows"
     if workflows.exists():
         # Document presence; no modifications will occur.
         with CHANGE_LOG.open("a", encoding="utf-8") as f:
-            f.write(
-                f"{now_iso()} — Detected workflows at {workflows}, no changes will be made.\n"
-            )
+            f.write(f"{now_iso()} — Detected workflows at {workflows}, no changes will be made.\n")
 
 
 def patch_viewer_table_validation(path: pathlib.Path):
     src = safe_read(path)
     new = src
-    rationale = (
-        "Enforce `--table` to match ^[A-Za-z0-9_]+$ and fail fast with clear error."
-    )
+    rationale = "Enforce `--table` to match ^[A-Za-z0-9_]+$ and fail fast with clear error."
 
     # 1) Ensure import blocks have argparse + re
     if "import re" not in new:
         new = (
             new.replace("\nimport ", "\nimport re\nimport ", 1)
@@ -188,48 +178,49 @@
         if "argparse" not in new:
             new = "import argparse\n" + new
 
     # 2) Inject validator if absent
     if "_validate_table_name" not in new:
-        validator = textwrap.dedent(f"""
+        validator = textwrap.dedent(
+            f"""
         def _validate_table_name(s: str) -> str:
             pattern = re.compile(r"{TABLE_PATTERN}")
             if s is None:
                 return s
             if pattern.fullmatch(s):
                 return s
             raise argparse.ArgumentTypeError(
                 "Invalid table name: '{{s}}'. Only letters, digits, and underscore are allowed."
             )
-        """)
+        """
+        )
         # place near top after imports
         # heuristics: after first double newline
         parts = new.split("\n\n", 1)
-        new = (
-            parts[0]
-            + "\n\n"
-            + validator
-            + ("\n\n" + parts[1] if len(parts) > 1 else "\n")
-        )
+        new = parts[0] + "\n\n" + validator + ("\n\n" + parts[1] if len(parts) > 1 else "\n")
 
     # 3) Prefer argparse wiring: --table … type=_validate_table_name
     new = re.sub(
         r'(add_argument\(\s*["\']--table["\'][^)]*)\)',
-        lambda m: (m.group(1) + ", type=_validate_table_name)")
-        if "type=" not in m.group(1)
-        else m.group(0),
+        lambda m: (
+            (m.group(1) + ", type=_validate_table_name)")
+            if "type=" not in m.group(1)
+            else m.group(0)
+        ),
         new,
     )
 
     # 4) If code accesses args.table without prior validation, add runtime guard once.
     if "args.table" in new and "Invalid table name:" not in new:
-        guard = textwrap.dedent(f"""
+        guard = textwrap.dedent(
+            f"""
         # Runtime guard (defense-in-depth) in case argparse wiring is bypassed:
         if getattr(args, "table", None):
             if not re.fullmatch(r"{TABLE_PATTERN}", args.table):
                 raise SystemExit(f"Invalid table name: '{{args.table}}'. Only letters, digits, and underscore are allowed.")
-        """)
+        """
+        )
         # Heuristic: insert after a line that looks like "args = parser.parse_args()" or similar
         new = re.sub(
             r"(args\s*=\s*[^\n]*parse_args\([^)]*\)\s*)",
             r"\1\n" + guard + "\n",
             new,
@@ -259,29 +250,29 @@
         )
 
     def ensure_warning(func_name: str):
         nonlocal new
         # crude block detection
-        pattern = re.compile(
-            rf"(def\s+{func_name}\s*\(.*?\):)(.*?)(?=^def\s|\Z)", re.S | re.M
-        )
+        pattern = re.compile(rf"(def\s+{func_name}\s*\(.*?\):)(.*?)(?=^def\s|\Z)", re.S | re.M)
         m = pattern.search(new)
         if not m:
             echo_q("Phase3: locate function", f"{func_name} not found", f"file={path}")
             return
         _, body = m.group(1), m.group(2)
         if "logging.warning" in body and "retries" in body:
             return
         # Insert a warning near common retry exits
-        insertion = textwrap.dedent("""
+        insertion = textwrap.dedent(
+            """
             # Warning when retries have been exhausted
             try:
                 _last_err  # noqa: F821
             except NameError:
                 _last_err = None
             logging.warning("Write attempt failed after all retries in %s: %s", __name__, _last_err)
-        """)
+        """
+        )
         # Heuristic: append before return/raise at end of block
         body2 = re.sub(
             r"(return\s+[^\n]+|raise\s+[^\n]+)\s*$",
             insertion + r"\n\1",
             body,
@@ -333,23 +324,23 @@
         raise
 
 
 def main():
     parser = argparse.ArgumentParser()
-    parser.add_argument(
-        "--dry-run", action="store_true", help="Compute edits but do not write."
-    )
+    parser.add_argument("--dry-run", action="store_true", help="Compute edits but do not write.")
     args = parser.parse_args()
 
     ensure_dirs()
     enforce_no_actions_touch()
     inventory()
 
     # Safety: require clean git worktree for non-dry runs
     try:
         dirty = (
-            subprocess.check_output(["git", "status", "--porcelain"], cwd=str(ROOT))  # nosec B603,B607
+            subprocess.check_output(
+                ["git", "status", "--porcelain"], cwd=str(ROOT)
+            )  # nosec B603,B607
             .decode()
             .strip()
         )
     except Exception as e:
         echo_q(
@@ -358,13 +349,11 @@
             "Ensure git is available and repository is initialized.",
         )
         dirty = ""
     if dirty:
         echo_q("Phase1: clean tree check", "Working tree not clean", dirty)
-        print(
-            "Refusing to edit because the working tree is not clean.", file=sys.stderr
-        )
+        print("Refusing to edit because the working tree is not clean.", file=sys.stderr)
         sys.exit(2)
 
     # T1
     if FILES["viewer"].exists():
         if not args.dry_run:
@@ -382,22 +371,24 @@
     # README doc note
     maybe_update_readme(FILES["readme"])
 
     # Results
     RESULTS.write_text(
-        textwrap.dedent(f"""
+        textwrap.dedent(
+            f"""
     # Results Summary ({now_iso()})
 
     - Implemented:
         - T1: Table name validation in viewer.py (regex: {TABLE_PATTERN})
         - T2: Warning on retry exhaustion in session_hooks helpers
     - Residual gaps: see `.codex/errors.ndjson` if present.
     - Pruning: none.
     - Next steps: strengthen smoke tests for invalid `--table` & forced retry paths.
 
     **DO NOT ACTIVATE ANY GitHub Actions files.**
-    """).strip()
+    """
+        ).strip()
         + "\n",
         encoding="utf-8",
     )
 
     # Lint only the two files per task spec
would reformat tools/run_supplied_task.py
--- tools/update_docs_nav_and_links.py	2025-09-10 13:49:27.368673+00:00
+++ tools/update_docs_nav_and_links.py	2025-09-10 13:53:50.052008+00:00
@@ -21,13 +21,11 @@
     for path in REPO_ROOT.rglob("*.md"):
         text = path.read_text(encoding="utf-8")
         new_text = text
         for old, new in LINK_MAP.items():
             new_text = new_text.replace(old, new)
-        new_text = re.sub(
-            r"CHANGELOG_([\w.-]+)\.md", r"docs/changelog/CHANGELOG_\1.md", new_text
-        )
+        new_text = re.sub(r"CHANGELOG_([\w.-]+)\.md", r"docs/changelog/CHANGELOG_\1.md", new_text)
         if new_text != text:
             path.write_text(new_text, encoding="utf-8")
             touched.append(path)
     return touched
 
@@ -46,25 +44,21 @@
                     if isinstance(value, str):
                         for old, new in LINK_MAP.items():
                             if value.endswith(old):
                                 item[key] = value.replace(old, new)
                         if "CHANGELOG_" in value and "docs/changelog/" not in value:
-                            item[key] = value.replace(
-                                "CHANGELOG_", "docs/changelog/CHANGELOG_"
-                            )
+                            item[key] = value.replace("CHANGELOG_", "docs/changelog/CHANGELOG_")
                     elif isinstance(value, list):
                         rewrite_nav(value)
 
     rewrite_nav(nav)
     cfg.write_text(yaml.safe_dump(data, sort_keys=False), encoding="utf-8")
 
 
 def main() -> None:
     parser = argparse.ArgumentParser()
-    parser.add_argument(
-        "--mkdocs", action="store_true", help="Also update mkdocs.yml navigation"
-    )
+    parser.add_argument("--mkdocs", action="store_true", help="Also update mkdocs.yml navigation")
     args = parser.parse_args()
     update_links()
     if args.mkdocs:
         update_mkdocs()
 
would reformat tools/update_docs_nav_and_links.py
--- tools/unify_logging_canonical.py	2025-09-10 07:58:47.273140+00:00
+++ tools/unify_logging_canonical.py	2025-09-10 13:53:50.123415+00:00
@@ -34,14 +34,11 @@
 if DO_NOT_ACTIVATE_GITHUB_ACTIONS:
     SKIP_DIRS |= {".github", ".github/workflows"}
 
 CANONICAL_DIR = REPO_ROOT / "src" / "codex" / "logging"
 LEGACY_WRAPPERS = {
-    REPO_ROOT
-    / "codex"
-    / "logging"
-    / "session_logger.py": "src.codex.logging.session_logger",
+    REPO_ROOT / "codex" / "logging" / "session_logger.py": "src.codex.logging.session_logger",
     REPO_ROOT
     / "codex"
     / "logging"
     / "session_query.py": "src.codex.logging.query_logs",  # maps "session_query" -> "query_logs"
 }
@@ -142,13 +139,11 @@
             err.strip() or out.strip(),
             "git status failed",
         )
         sys.exit(1)
     if out.strip():
-        append_error(
-            "1.1", "Verify clean worktree", "Working tree is not clean", out.strip()
-        )
+        append_error("1.1", "Verify clean worktree", "Working tree is not clean", out.strip())
         sys.exit(1)
 
 
 def load_readmes() -> None:
     for p in [REPO_ROOT / "README.md", REPO_ROOT / "README_UPDATED.md"]:
would reformat tools/unify_logging_canonical.py
--- tools/git_patch_parser_complete.py	2025-09-10 07:58:47.273140+00:00
+++ tools/git_patch_parser_complete.py	2025-09-10 13:53:50.240860+00:00
@@ -71,16 +71,12 @@
     context: str  # The @@ ... @@ line context
     lines: List[PatchLine] = field(default_factory=list)
 
     def validate(self) -> bool:
         """Validate hunk line counts match actual lines"""
-        context_lines = sum(
-            1 for line in self.lines if line.line_type == LineType.CONTEXT
-        )
-        delete_lines = sum(
-            1 for line in self.lines if line.line_type == LineType.DELETE
-        )
+        context_lines = sum(1 for line in self.lines if line.line_type == LineType.CONTEXT)
+        delete_lines = sum(1 for line in self.lines if line.line_type == LineType.DELETE)
         add_lines = sum(1 for line in self.lines if line.line_type == LineType.ADD)
 
         expected_old = context_lines + delete_lines
         expected_new = context_lines + add_lines
 
@@ -406,13 +402,11 @@
         old_count = int(match.group(2) or "1")
         new_start = int(match.group(3))
         new_count = int(match.group(4) or "1")
         context = match.group(5) or ""
 
-        self.current_hunk = HunkData(
-            old_start, old_count, new_start, new_count, context
-        )
+        self.current_hunk = HunkData(old_start, old_count, new_start, new_count, context)
 
     def _add_hunk_line(self, line_type: LineType, content: str):
         """Add a line to the current hunk"""
         if not self.current_hunk:
             self.errors.append("Hunk line without hunk header")
@@ -629,13 +623,11 @@
                 content += "\n"
             full_path.write_text(content, encoding="utf-8")
 
         return {"file": target_path, "operation": "modify", "success": True}
 
-    def _apply_hunk(
-        self, lines: List[str], hunk: HunkData, offset: int
-    ) -> Tuple[List[str], int]:
+    def _apply_hunk(self, lines: List[str], hunk: HunkData, offset: int) -> Tuple[List[str], int]:
         """Apply a single hunk to lines"""
         # Find hunk position (accounting for offset)
         start_pos = hunk.old_start - 1 + offset
 
         # Validate context lines match
@@ -684,13 +676,11 @@
 
         result_lines.extend(lines[start_pos + len(hunk_old_lines) :])
 
         # Calculate line offset change
         old_line_count = sum(
-            1
-            for pl in hunk.lines
-            if pl.line_type in (LineType.CONTEXT, LineType.DELETE)
+            1 for pl in hunk.lines if pl.line_type in (LineType.CONTEXT, LineType.DELETE)
         )
         new_line_count = sum(
             1 for pl in hunk.lines if pl.line_type in (LineType.CONTEXT, LineType.ADD)
         )
 
@@ -701,25 +691,17 @@
 # Command Line Interface
 # ============================================================================
 
 
 def main():
-    parser = argparse.ArgumentParser(
-        description="Complete Git Patch Parser and Applier"
-    )
+    parser = argparse.ArgumentParser(description="Complete Git Patch Parser and Applier")
     parser.add_argument("--patch", "-p", help="Patch file (default: stdin)")
-    parser.add_argument(
-        "--apply", action="store_true", help="Apply patches to filesystem"
-    )
-    parser.add_argument(
-        "--dry-run", action="store_true", help="Show what would be done"
-    )
+    parser.add_argument("--apply", action="store_true", help="Apply patches to filesystem")
+    parser.add_argument("--dry-run", action="store_true", help="Show what would be done")
     parser.add_argument("--verbose", "-v", action="store_true", help="Verbose output")
     parser.add_argument("--workspace", default=".", help="Workspace root directory")
-    parser.add_argument(
-        "--parse-only", action="store_true", help="Only parse, don't apply"
-    )
+    parser.add_argument("--parse-only", action="store_true", help="Only parse, don't apply")
     parser.add_argument(
         "--output-format",
         choices=["text", "json"],
         default="text",
         help="Output format",
@@ -754,13 +736,11 @@
                         "old_path": pf.old_path,
                         "new_path": pf.new_path,
                         "operation": pf.operation.value,
                         "is_binary": pf.is_binary,
                         "hunk_count": len(pf.hunks),
-                        "session_data": pf.session_data.__dict__
-                        if pf.session_data
-                        else None,
+                        "session_data": pf.session_data.__dict__ if pf.session_data else None,
                     }
                     for pf in patch_files
                 ],
                 "errors": parse_errors,
             }
would reformat tools/git_patch_parser_complete.py
--- tools/workflow_merge.py	2025-09-10 07:58:47.273140+00:00
+++ tools/workflow_merge.py	2025-09-10 13:53:50.503156+00:00
@@ -54,13 +54,11 @@
         "What are the possible causes, and how can this be resolved while preserving intended functionality?\n\n"
     )
 
 
 def run(cmd: List[str], check: bool = False) -> subprocess.CompletedProcess:
-    return subprocess.run(
-        cmd, cwd=str(REPO), text=True, capture_output=True, check=check
-    )
+    return subprocess.run(cmd, cwd=str(REPO), text=True, capture_output=True, check=check)
 
 
 def have(cmd: str) -> bool:
     return shutil.which(cmd) is not None
 
@@ -99,12 +97,11 @@
     total = 0
     for p in REPO.rglob("*"):
         if not p.is_file():
             continue
         if any(
-            seg in p.parts
-            for seg in (".git", ".venv", "venv", "node_modules", "dist", "build")
+            seg in p.parts for seg in (".git", ".venv", "venv", "node_modules", "dist", "build")
         ):
             continue
         if p.suffix.lower() not in {
             ".py",
             ".md",
@@ -161,20 +158,14 @@
             src = authoritative.read_text(encoding="utf-8", errors="ignore")
             dst = target.read_text(encoding="utf-8", errors="ignore")
             if src != dst:
                 with target.open("a", encoding="utf-8") as f:
                     f.write(
-                        "\n\n# BEGIN MERGED FROM: "
-                        + str(authoritative.relative_to(REPO))
-                        + "\n"
+                        "\n\n# BEGIN MERGED FROM: " + str(authoritative.relative_to(REPO)) + "\n"
                     )
                     f.write(src)
-                    f.write(
-                        "\n# END MERGED FROM: "
-                        + str(authoritative.relative_to(REPO))
-                        + "\n"
-                    )
+                    f.write("\n# END MERGED FROM: " + str(authoritative.relative_to(REPO)) + "\n")
                 src_rel = authoritative.relative_to(REPO)
                 dst_rel = target.relative_to(REPO)
                 log_change("Merge", f"Merged content from {src_rel} into {dst_rel}")
         except Exception as e:
             log_error("3: ensure_at_root merge", e, f"authoritative={authoritative}")
@@ -358,13 +349,11 @@
             "and update references'"
         ),
     )
 
     # Compliance: do not alter CI triggers
-    log_change(
-        "Compliance", "DO NOT ACTIVATE ANY GitHub Actions files. ALL GitHub Action."
-    )
+    log_change("Compliance", "DO NOT ACTIVATE ANY GitHub Actions files. ALL GitHub Action.")
 
     print("Consolidation complete. See .codex/ for logs and results.")
     return 0
 
 
would reformat tools/workflow_merge.py

Oh no! 💥 💔 💥
121 files would be reformatted, 423 files would be left unchanged, 2 files would fail to reformat.

isort....................................................................Failed
- hook id: isort
- files were modified by this hook

Fixing /workspace/_codex_/codex_script.py
Fixing /workspace/_codex_/scripts/deep_research_task_process.py
Fixing /workspace/_codex_/src/codex_ml/eval/datasets.py
Fixing /workspace/_codex_/src/codex_ml/models/__init__.py
Fixing /workspace/_codex_/src/ingestion/__init__.py
Fixing /workspace/_codex_/src/utils/__init__.py
Fixing /workspace/_codex_/tests/test_db_utils.py
Fixing /workspace/_codex_/tests/utils/test_checkpoint_rng.py
Fixing /workspace/_codex_/tools/codex_seq_runner.py

fix end of files.........................................................Failed
- hook id: end-of-file-fixer
- exit code: 1
- files were modified by this hook

Fixing codex_ast_upgrade.py
Fixing codex_script.py
Fixing src/utils/checkpointing.py
Fixing src/codex_ml/training/callbacks.py
Fixing tests/test_error_log.py
Fixing training/__init__.py
Fixing tools/codex_workflow_executor.py
Fixing tests/test_codex_maintenance.py
Fixing tools/doctor.sh
Fixing tests/test_codex_cli.py
Fixing tools/install_codex_hooks.py
Fixing scripts/codex_local_audit.sh
Fixing ci_local.sh

trim trailing whitespace.................................................Failed
- hook id: trailing-whitespace
- exit code: 1
- files were modified by this hook

Fixing tools/codex_coverage_booster.py
Fixing src/codex_ml/cli/audit_pipeline.py
Fixing tools/ephem_autoscaler.sh
Fixing tools/install_codex_hooks.py
Fixing patches/ci_local.patch
Fixing patches/analysis.patch
Fixing tests/test_train_loop.py

bandit...................................................................Failed
- hook id: bandit
- exit code: 1

[main]	INFO	profile include tests: None
[main]	INFO	profile exclude tests: None
[main]	INFO	cli include tests: None
[main]	INFO	cli exclude tests: None
[main]	INFO	using config: bandit.yaml
[main]	INFO	running on Python 3.12.10
[warnings]	WARNING	invalid escape sequence '\s'

[tester]	WARNING	nosec encountered (B608), but no failed test on line 210
[tester]	WARNING	nosec encountered (B608), but no failed test on line 210
[tester]	WARNING	nosec encountered (B608), but no failed test on line 210
[tester]	WARNING	nosec encountered (B607), but no failed test on line 24
[tester]	WARNING	nosec encountered (B607), but no failed test on line 117
[tester]	WARNING	nosec encountered (B112), but no failed test on line 128
[tester]	WARNING	nosec encountered (B607), but no failed test on line 89
[warnings]	WARNING	invalid escape sequence '\)'

[warnings]	WARNING	invalid escape sequence '\.'

[tester]	WARNING	nosec encountered (B608), but no failed test on line 49
[tester]	WARNING	nosec encountered (B608), but no failed test on line 49
[tester]	WARNING	nosec encountered (B608), but no failed test on line 50
[tester]	WARNING	nosec encountered (B608), but no failed test on line 50
[tester]	WARNING	nosec encountered (B607), but no failed test on line 330
[tester]	WARNING	nosec encountered (B607), but no failed test on line 330
[tester]	WARNING	nosec encountered (B607), but no failed test on line 350
[tester]	WARNING	nosec encountered (B607), but no failed test on line 350
[tester]	WARNING	nosec encountered (B607), but no failed test on line 350
Working... ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 0:00:06
Run started:2025-09-10 13:53:58.579655

Test results:
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./.codex/codex_repo_scout.py:9:0
8	import shutil
9	import subprocess
10	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./.codex/codex_repo_scout.py:109:15
108	    try:
109	        proc = subprocess.run(cmd, cwd=ROOT, capture_output=True, text=True)
110	        if check and proc.returncode != 0:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./.codex/codex_repo_scout.py:234:12
233	                txt += f.read_text(encoding="utf-8", errors="ignore") + "\n"
234	            except Exception:
235	                pass
236	        hints = len(

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./.codex/codex_repo_scout.py:380:12
379	                paths.append(p.relative_to(ROOT).as_posix())
380	            except Exception:
381	                pass
382	    return paths

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b608_hardcoded_sql_expressions.html
   Location: ./.codex/run_db_utils_workflow.py:122:24
121	
122	DB_UTILS_TEMPLATE = f'''# Auto-generated by .codex/run_db_utils_workflow.py
123	# Purpose: Shared discovery helpers for logging SQLite schemas.
124	# Constraint: DO NOT ACTIVATE ANY GitHub Actions files.
125	
126	from __future__ import annotations
127	import os, sqlite3
128	from typing import Dict, List, Tuple, Optional
129	
130	{LIKELY_MAP_LITERAL}
131	
132	def open_db(path: Optional[str] = None, env_keys=("CODEX_DB_PATH", "CODEX_LOG_DB_PATH")) -> sqlite3.Connection:
133	    """
134	    Open a SQLite DB at `path` or from known env vars; if none exist, attempt common paths.
135	    """
136	    if path and path.strip():
137	        return sqlite3.connect(path)
138	    for k in env_keys:
139	        v = os.getenv(k)
140	        if v and v.strip():
141	            return sqlite3.connect(v)
142	    for guess in ("data/codex.db", "data/logs.sqlite", ".codex/session_logs.db", "logs.db"):
143	        if os.path.exists(guess):
144	            return sqlite3.connect(guess)
145	    # Fallback: in-memory (callers should handle empty state)
146	    return sqlite3.connect(":memory:")
147	
148	def list_tables(con: sqlite3.Connection) -> List[str]:
149	    cur = con.execute("SELECT name FROM sqlite_master WHERE type='table'")
150	    return [r[0] for r in cur.fetchall()]
151	
152	def get_columns(con: sqlite3.Connection, table: str) -> List[str]:
153	    cur = con.execute(f"PRAGMA table_info({{table}})")
154	    return [r[1] for r in cur.fetchall()]
155	
156	def _first_match(columns: List[str], candidates: List[str]) -> Optional[str]:
157	    cols_lower = [c.lower() for c in columns]
158	    for cand in candidates:
159	        if cand.lower() in cols_lower:
160	            return columns[cols_lower.index(cand.lower())]
161	    return None
162	
163	def infer_probable_table(con: sqlite3.Connection, candidates=("session_events","logs","events","messages")) -> Optional[str]:
164	    tables = list_tables(con)
165	    if not tables: return None
166	    # Direct candidate match first
167	    for c in candidates:
168	        if c in tables:
169	            return c
170	    # Heuristic: choose table with many likely columns
171	    best = None; best_score = -1
172	    for t in tables:
173	        cols = get_columns(con, t)
174	        score = 0
175	        for k, cand in LIKELY_MAP.items():
176	            score += 1 if _first_match(cols, cand) else 0
177	        if score > best_score:
178	            best, best_score = t, score
179	    return best
180	
181	def infer_columns(con: sqlite3.Connection, table: str) -> Dict[str, Optional[str]]:
182	    cols = get_columns(con, table) if table else []
183	    mapping = {{}}
184	    for logical, cands in LIKELY_MAP.items():
185	        mapping[logical] = _first_match(cols, cands)
186	    return mapping
187	'''
188	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./.codex/run_workflow.py:21:0
20	import re
21	import subprocess
22	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./.codex/run_workflow.py:52:15
51	    try:
52	        proc = subprocess.run(
53	            args, cwd=cwd or REPO_ROOT, capture_output=capture, text=True, check=False
54	        )
55	        if check and proc.returncode != 0:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./codex_ml/cli/main.py:21:0
20	_module = importlib.util.module_from_spec(_spec)
21	assert _spec.loader is not None
22	_spec.loader.exec_module(_module)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./codex_ml/tracking/mlflow_utils.py:17:0
16	_module = importlib.util.module_from_spec(_spec)
17	assert _spec.loader is not None
18	_spec.loader.exec_module(_module)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./codex_ml/utils/checkpointing.py:13:0
12	_module = importlib.util.module_from_spec(_spec)
13	assert _spec.loader is not None
14	_spec.loader.exec_module(_module)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./codex_utils/ndjson.py:21:8
20	            self.f.close()
21	        except Exception:
22	            pass

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./codex_utils/repro.py:9:0
8	import random
9	import subprocess
10	import sys

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./codex_utils/repro.py:49:12
48	                torch.backends.cudnn.benchmark = False  # type: ignore[attr-defined]
49	            except Exception:
50	                pass
51	        torch_state = torch.get_rng_state().tolist() if hasattr(torch, "get_rng_state") else None

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./codex_utils/repro.py:77:17
76	    try:
77	        commit = subprocess.check_output(["git", "rev-parse", "HEAD"], text=True).strip()
78	    except Exception:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./codex_utils/repro.py:77:17
76	    try:
77	        commit = subprocess.check_output(["git", "rev-parse", "HEAD"], text=True).strip()
78	    except Exception:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./codex_utils/repro.py:78:4
77	        commit = subprocess.check_output(["git", "rev-parse", "HEAD"], text=True).strip()
78	    except Exception:
79	        pass
80	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./codex_workflow.py:18:0
17	import re
18	import subprocess
19	import sys

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./deploy/deploy_codex_pipeline.py:14:4
13	        out["mem_pct"] = psutil.virtual_memory().percent
14	    except Exception:
15	        pass
16	    try:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./deploy/deploy_codex_pipeline.py:25:4
24	        out["gpu_mem_used"] = int(mi.used)
25	    except Exception:
26	        pass
27	    return out

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./deploy/deploy_codex_pipeline.py:95:8
94	                handles["tb"].add_scalar(k, float(v), global_step=step)
95	        except Exception:
96	            pass
97	    if handles.get("wandb"):

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./deploy/deploy_codex_pipeline.py:100:8
99	            handles["wandb"].log(dict(metrics, step=step))
100	        except Exception:
101	            pass
102	    if handles.get("mlf"):

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./deploy/deploy_codex_pipeline.py:108:8
107	                MU.log_artifacts(art)
108	        except Exception:
109	            pass
110	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./documentation/codex_symbolic_pipeline.py:148:10
147	        raise ValueError("corpus must not be empty")
148	    rng = random.Random(cfg.seed)
149	    vocab: Dict[str, int] = {}

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./documentation/codex_symbolic_pipeline.py:172:10
171	        raise ValueError("demos must not be empty")
172	    rng = random.Random(cfg.seed)
173	    token_probs = model.meta["token_probs"].copy()

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./documentation/codex_symbolic_pipeline.py:219:10
218	    weights = [0.0] * len(token_index)
219	    rng = random.Random(cfg.seed)
220	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./documentation/codex_symbolic_pipeline.py:265:10
264	    base_probs = model.meta["token_probs"].copy()
265	    rng = random.Random(cfg.seed)
266	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./scripts/apply_session_logging_workflow.py:22:0
21	    _codex_sqlite_auto()
22	except Exception:
23	    pass
24	import textwrap

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./scripts/apply_session_logging_workflow.py:159:8
158	            txt = p.read_text(encoding="utf-8", errors="ignore")
159	        except Exception:
160	            continue
161	        for sym in (

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./scripts/check_licenses.py:6:0
5	import json
6	import subprocess
7	import sys

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./scripts/check_licenses.py:14:11
13	def _run_pip_licenses() -> Iterable[dict]:
14	    proc = subprocess.run(
15	        ["pip-licenses", "--format=json"],
16	        capture_output=True,
17	        text=True,
18	        check=True,
19	    )
20	    return json.loads(proc.stdout or "[]")

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./scripts/check_licenses.py:14:11
13	def _run_pip_licenses() -> Iterable[dict]:
14	    proc = subprocess.run(
15	        ["pip-licenses", "--format=json"],
16	        capture_output=True,
17	        text=True,
18	        check=True,
19	    )
20	    return json.loads(proc.stdout or "[]")

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./scripts/codex_end_to_end.py:11:0
10	
11	import subprocess
12	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./scripts/codex_end_to_end.py:37:9
36	    ]
37	    cp = subprocess.run(cmd, capture_output=True, text=True)
38	    if cp.returncode != 0:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./scripts/deploy_codex_pipeline.py:21:0
20	import os
21	import subprocess
22	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./scripts/deploy_codex_pipeline.py:65:8
64	    if req.exists():
65	        subprocess.run([sys.executable, "-m", "pip", "install", "-r", str(req)], check=True)
66	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./scripts/deploy_codex_pipeline.py:302:4
301	            log_metrics({"gpu_util": float(util)}, step=0, enabled=mlf_cfg.enable)
302	    except Exception:  # noqa: BLE001
303	        pass
304	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./scripts/env/export_env_json.py:6:0
5	import platform
6	import subprocess
7	import sys

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./scripts/env/export_env_json.py:17:15
16	    try:
17	        return subprocess.check_output(["git", "rev-parse", "HEAD"], text=True).strip()
18	    except Exception:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./scripts/env/export_env_json.py:17:15
16	    try:
17	        return subprocess.check_output(["git", "rev-parse", "HEAD"], text=True).strip()
18	    except Exception:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./scripts/export_env.py:9:0
8	import platform
9	import subprocess
10	import sys

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./scripts/export_env.py:47:29
46	    try:
47	        info["git_commit"] = subprocess.check_output(
48	            ["git", "rev-parse", "HEAD"], text=True
49	        ).strip()
50	    except Exception as exc:  # pragma: no cover - logging path

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./scripts/export_env.py:47:29
46	    try:
47	        info["git_commit"] = subprocess.check_output(
48	            ["git", "rev-parse", "HEAD"], text=True
49	        ).strip()
50	    except Exception as exc:  # pragma: no cover - logging path

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./scripts/export_env.py:54:29
53	    try:
54	        info["pip_freeze"] = subprocess.check_output(
55	            [sys.executable, "-m", "pip", "freeze"], text=True
56	        )
57	    except Exception as exc:  # pragma: no cover - logging path

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./scripts/run_codex_tasks.py:24:0
23	import re
24	import subprocess
25	from datetime import datetime

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./scripts/run_codex_tasks.py:67:8
66	            text = path.read_text(encoding="utf-8")
67	        except Exception:
68	            continue
69	        for pattern in patterns:

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./scripts/run_codex_tasks.py:81:4
80	    # Pre-commit (if installed)
81	    subprocess.run(["pre-commit", "run", "--all-files"], check=True, cwd=str(ROOT))
82	    # Nox sessions (if noxfile exists)

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./scripts/run_codex_tasks.py:81:4
80	    # Pre-commit (if installed)
81	    subprocess.run(["pre-commit", "run", "--all-files"], check=True, cwd=str(ROOT))
82	    # Nox sessions (if noxfile exists)

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./scripts/run_codex_tasks.py:88:16
87	            try:
88	                subprocess.run(["nox", "-s", session], check=True, cwd=str(ROOT))
89	            except subprocess.CalledProcessError as exc:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./scripts/run_codex_tasks.py:88:16
87	            try:
88	                subprocess.run(["nox", "-s", session], check=True, cwd=str(ROOT))
89	            except subprocess.CalledProcessError as exc:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./scripts/run_sweep.py:66:21
65	        cmd = ["python", "-m", "codex_ml.cli.main", *overrides]
66	        subprocess = __import__("subprocess")
67	        result = subprocess.run(cmd, check=False)

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./scripts/run_sweep.py:67:17
66	        subprocess = __import__("subprocess")
67	        result = subprocess.run(cmd, check=False)
68	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./scripts/sbom_cyclonedx.py:4:0
3	import shutil
4	import subprocess
5	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./scripts/sbom_cyclonedx.py:19:4
18	    cmd = [tool, "-o", str(out)] if "cyclonedx-py" in tool else [tool, "--output", str(out)]
19	    subprocess.run(cmd, check=False)
20	    print(f"SBOM written to {out}")

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./src/codex/cli.py:6:0
5	import json
6	import subprocess
7	import sys

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./src/codex/cli.py:39:8
38	    try:
39	        subprocess.run(["nox", "-s", "tests"], check=True)
40	    except Exception as exc:  # noqa: BLE001

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./src/codex/cli.py:39:8
38	    try:
39	        subprocess.run(["nox", "-s", "tests"], check=True)
40	    except Exception as exc:  # noqa: BLE001

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./src/codex/cli.py:75:8
74	    try:
75	        subprocess.run([sys.executable, str(script), "--init", "--db", db], check=True)
76	    except Exception as exc:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./src/codex/cli.py:96:8
95	    try:
96	        subprocess.run(args, check=True)
97	    except Exception as exc:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./src/codex/cli.py:111:8
110	    try:
111	        subprocess.run(args, check=True)
112	    except Exception as exc:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/db/sqlite_patch.py:134:12
133	                conn.close()
134	            except Exception:
135	                pass
136	        _CONN_POOL.clear()

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/conversation_logger.py:25:4
24	        cx.execute("PRAGMA journal_mode=WAL;")
25	    except Exception:
26	        pass
27	    return cx

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/conversation_logger.py:42:4
41	        cx.execute("PRAGMA journal_mode=WAL;")
42	    except Exception:
43	        pass
44	    return cx

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/conversation_logger.py:52:4
51	        cx.execute("PRAGMA journal_mode=WAL;")
52	    except Exception:
53	        pass
54	    return cx

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/conversation_logger.py:62:4
61	        cx.execute("PRAGMA journal_mode=WAL;")
62	    except Exception:
63	        pass
64	    return cx

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/db_utils.py:23:0
22	    _codex_sqlite_auto()
23	except Exception:
24	    pass
25	from typing import Dict, List, Optional, Union

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/db_utils.py:48:8
47	            conn.execute("PRAGMA journal_mode=WAL;")
48	        except Exception:
49	            pass
50	        return conn

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/db_utils.py:57:12
56	                conn.execute("PRAGMA journal_mode=WAL;")
57	            except Exception:
58	                pass
59	            return conn

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/db_utils.py:71:12
70	                conn.execute("PRAGMA journal_mode=WAL;")
71	            except Exception:
72	                pass
73	            return conn

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/db_utils.py:78:4
77	        conn.execute("PRAGMA journal_mode=WAL;")
78	    except Exception:
79	        pass
80	    return conn

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/export.py:34:0
33	    _codex_sqlite_auto()
34	except Exception:
35	    pass
36	import sys

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b608_hardcoded_sql_expressions.html
   Location: ./src/codex/logging/export.py:78:14
77	        sql = (
78	            f"SELECT {', '.join(cols)} FROM {table} "
79	            f"WHERE {mapping['session_id']}=? ORDER BY {mapping['timestamp']}"
80	        )

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/import_ndjson.py:52:0
51	    _codex_sqlite_auto()
52	except Exception:  # pragma: no cover
53	    pass
54	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/import_ndjson.py:126:12
125	                fcntl.flock(f.fileno(), fcntl.LOCK_UN)
126	            except Exception:
127	                pass
128	        f.close()

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/query_logs.py:40:0
39	    _codex_sqlite_auto()
40	except Exception:
41	    pass
42	import sys

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b608_hardcoded_sql_expressions.html
   Location: ./src/codex/logging/query_logs.py:110:12
109	    select = ", ".join(cols)
110	    sql = f"SELECT {select} FROM {table}"
111	    where: List[str] = []

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/session_logger.py:107:4
106	        conn.execute("PRAGMA journal_mode=WAL;")
107	    except Exception:
108	        pass
109	    try:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/session_logger.py:155:12
154	                conn.execute("PRAGMA journal_mode=WAL;")
155	            except Exception:
156	                pass
157	            CONN_POOL[key] = conn

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/session_logger.py:162:8
161	            conn.execute("PRAGMA journal_mode=WAL;")
162	        except Exception:
163	            pass
164	    try:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/session_logger.py:166:4
165	        conn.execute("PRAGMA journal_mode=WAL;")
166	    except Exception:
167	        pass
168	    try:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/session_logger.py:170:4
169	        conn.execute("PRAGMA journal_mode=WAL;")
170	    except Exception:
171	        pass
172	    try:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/session_logger.py:174:4
173	        conn.execute("PRAGMA journal_mode=WAL;")
174	    except Exception:
175	        pass
176	    try:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/logging/session_logger.py:337:4
336	        conn.execute("PRAGMA journal_mode=WAL;")
337	    except Exception:
338	        pass
339	    try:

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b608_hardcoded_sql_expressions.html
   Location: ./src/codex/logging/session_query.py:146:16
145	        select_cols.append(cols["message"])
146	        sql = f"SELECT {', '.join(select_cols)} FROM {table}"
147	        params: List[object] = []

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./src/codex/search/providers.py:14:0
13	import json
14	import subprocess
15	from dataclasses import dataclass

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./src/codex/search/providers.py:42:24
41	        try:
42	            completed = subprocess.run(
43	                ["rg", "--json", query, str(self.root)],
44	                check=True,
45	                capture_output=True,
46	                text=True,
47	            )
48	        except Exception:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./src/codex/search/providers.py:42:24
41	        try:
42	            completed = subprocess.run(
43	                ["rg", "--json", query, str(self.root)],
44	                check=True,
45	                capture_output=True,
46	                text=True,
47	            )
48	        except Exception:

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: ./src/codex/search/providers.py:85:17
84	        try:
85	            with urllib.request.urlopen(url, timeout=10) as response:
86	                data = json.load(response)

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./src/codex/search/providers.py:114:12
113	                results.extend(provider.search(query))
114	            except Exception:
115	                # Each provider is responsible for handling its own errors. If
116	                # an unexpected exception bubbles up we swallow it here so that
117	                # other providers still run.
118	                continue
119	        return results

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/training.py:717:16
716	                    torch.nn.utils.clip_grad_norm_(model.parameters(), grad_clip)
717	                except Exception:
718	                    pass
719	            if optimizer is not None and sched_name and last_sched is None:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/training.py:724:16
723	                    last_sched.step()
724	                except Exception:
725	                    pass
726	            rec = {

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex/training.py:817:8
816	            clip_grad_norm_(model.parameters(), grad_clip)
817	        except Exception:
818	            pass
819	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./src/codex/utils/subprocess.py:5:0
4	
5	import subprocess
6	from pathlib import Path

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/analysis/extractors.py:108:4
107	                    out.imports.append({"raw": code})
108	    except Exception:
109	        pass
110	    return out

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/analysis/parsers.py:42:8
41	            return ParseResult(mode="cst", cst_tree=cst.parse_module(code))
42	        except Exception:
43	            pass
44	    # Tertiary: Parso (tolerant/partial)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/analysis/parsers.py:48:8
47	            return ParseResult(mode="parso", parso_tree=parso.parse(code))
48	        except Exception:
49	            pass
50	    # Last resort: degraded

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/analysis/providers.py:37:12
36	                            out.append({"where": path, "line": i, "snippet": line.strip()})
37	            except Exception:
38	                pass
39	        return out

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/analysis/registry.py:34:0
33	    register_extractor("degraded", extract_degraded)
34	except Exception:
35	    # Registration is best-effort; failures fall back to manual wiring.
36	    pass

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/cli/audit_pipeline.py:107:12
106	                evidence.extend(prov.search(q))
107	            except Exception:
108	                pass
109	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/cli/main.py:52:4
51	            GlobalHydra.instance().clear()
52	    except Exception:
53	        pass
54	

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./src/codex_ml/data/loader.py:13:0
12	import json
13	import pickle
14	from pathlib import Path

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b301-pickle
   Location: ./src/codex_ml/data/loader.py:58:15
57	    if cache_file.exists():
58	        return pickle.loads(cache_file.read_bytes())
59	    texts = load_texts(path, encoding)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/data/loaders.py:67:8
66	            return len(enc.encode(text))
67	        except Exception:
68	            pass
69	    return len(text.split())

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./src/codex_ml/data/loaders.py:141:8
140	
141	        _rnd.Random(seed).shuffle(paths)
142	    filt: Optional[SafetyFilters] = None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./src/codex_ml/data/loaders.py:235:4
234	    """Return deterministic train/val/test indices for *n* samples."""
235	    assert 0.0 <= test_split < 1.0 and 0.0 <= val_split < 1.0
236	    import random as _rnd

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./src/codex_ml/data/sharding.py:6:4
5	def shard_range(rank: int, world: int, n: int) -> tuple[int, int]:
6	    assert 0 <= rank < world and n >= 0
7	    base, rem = divmod(n, world)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./src/codex_ml/data/splits.py:7:4
6	def train_val_test_split(dataset: Sequence, val_frac: float = 0.1, test_frac: float = 0.1, seed: int = 42) -> Tuple[List, List, List]:
7	    assert 0 <= val_frac < 1 and 0 <= test_frac < 1 and (val_frac + test_frac) < 1
8	    rng = np.random.default_rng(seed)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/data_utils.py:78:8
77	            Path(checksum_path).write_text(checksum, encoding="utf-8")
78	        except Exception:
79	            # best-effort provenance output
80	            pass
81	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/data_utils.py:91:12
90	                    return list(data["train"]), list(data["val"])
91	            except Exception:
92	                # Ignore malformed cache and recompute
93	                pass
94	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./src/codex_ml/data_utils.py:96:10
95	    # Deterministic shuffle and split
96	    rng = random.Random(seed)
97	    items_shuffled = list(items)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/data_utils.py:110:8
109	            )
110	        except Exception:
111	            # Best-effort cache only
112	            pass
113	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./src/codex_ml/eval/eval_runner.py:32:10
31	        return float(val), None, None
32	    rng = random.Random(seed)
33	    vals: List[float] = []

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./src/codex_ml/eval/metrics.py:15:0
14	import re
15	import subprocess
16	import tempfile

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./src/codex_ml/eval/metrics.py:48:12
47	            tgt = np.asarray(list(targets), dtype=int)
48	            assert (
49	                arr.ndim == 2 and arr.shape[0] == tgt.shape[0]
50	            ), "logits shape [N,V] and targets [N]"
51	            # stable softmax log prob

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./src/codex_ml/eval/metrics.py:143:11
142	    # Run pytest
143	    proc = subprocess.run(
144	        ["pytest", "-q", tests_dir], cwd=str(tmpdir), capture_output=True, text=True
145	    )
146	    out = proc.stdout + proc.stderr

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./src/codex_ml/eval/metrics.py:143:11
142	    # Run pytest
143	    proc = subprocess.run(
144	        ["pytest", "-q", tests_dir], cwd=str(tmpdir), capture_output=True, text=True
145	    )
146	    out = proc.stdout + proc.stderr

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/interfaces/registry.py:38:4
37	            fh.write(json.dumps(record) + "\n")
38	    except Exception:
39	        pass
40	    sys.stderr.write(

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/metrics/registry.py:206:4
205	        return float(scorer.corpus_score(preds, [targets]).score)
206	    except Exception:
207	        pass
208	    # Fallback to nltk

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./src/codex_ml/models/decoder_only.py:54:8
53	        super().__init__()
54	        assert cfg.d_model % cfg.n_heads == 0, "d_model must be divisible by n_heads"
55	        self.cfg = cfg

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/models/registry.py:106:8
105	            model = model.to(getattr(torch, str(dtype)))
106	        except Exception:  # pragma: no cover - invalid dtype
107	            pass
108	    device = cfg.get("device")

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/models/registry.py:112:8
111	            model = model.to(device)
112	        except Exception:  # pragma: no cover - invalid device
113	            pass
114	    return model

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./src/codex_ml/monitoring/codex_logging.py:10:0
9	import platform
10	import subprocess
11	import sys

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/monitoring/codex_logging.py:165:12
164	                loggers.tb = SummaryWriter(logdir)  # type: ignore[arg-type]
165	            except Exception:
166	                pass
167	

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./src/codex_ml/monitoring/codex_logging.py:243:16
242	            _GIT_COMMIT = (
243	                subprocess.check_output(
244	                    ["git", "-C", str(root), "rev-parse", "HEAD"], text=True
245	                ).strip()
246	            )

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./src/codex_ml/monitoring/codex_logging.py:243:16
242	            _GIT_COMMIT = (
243	                subprocess.check_output(
244	                    ["git", "-C", str(root), "rev-parse", "HEAD"], text=True
245	                ).strip()
246	            )

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/monitoring/codex_logging.py:270:8
269	            metrics["ram_percent"] = float(psutil.virtual_memory().percent)
270	        except Exception:
271	            pass
272	    elif not _PSUTIL_WARNED:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/monitoring/codex_logging.py:340:8
339	                metrics["gpu_util_mean"] = util_sum / max(1, len(gpus))
340	        except Exception:
341	            pass
342	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./src/codex_ml/monitoring/codex_logging.py:355:8
354	            out[k] = float(v)  # type: ignore[arg-type]
355	        except Exception:
356	            continue
357	    return out

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/monitoring/codex_logging.py:369:8
368	                loggers.tb.add_scalar(k, v, step)
369	        except Exception:
370	            pass
371	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/monitoring/codex_logging.py:375:8
374	            loggers.wb.log({**values, "step": step})
375	        except Exception:
376	            pass
377	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/monitoring/codex_logging.py:381:8
380	            mlflow.log_metrics(values, step=step)
381	        except Exception:
382	            pass
383	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/peft/peft_adapter.py:112:8
111	            setattr(model, "peft_config", dict(merged))
112	        except Exception:
113	            # Silently ignore attribute setting failures
114	            pass
115	        return model

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/peft/peft_adapter.py:126:8
125	            setattr(adapted, "peft_config", dict(merged))
126	        except Exception:
127	            # Ignore attribute setting failures but continue with adapted model
128	            pass
129	        return adapted

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/peft/peft_adapter.py:134:8
133	            setattr(model, "peft_config", dict(merged))
134	        except Exception:
135	            # Ignore attribute setting failures in fallback case
136	            pass
137	        return model

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '{REDACTED}'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b105_hardcoded_password_string.html
   Location: ./src/codex_ml/safety/filters.py:12:15
11	
12	REDACT_TOKEN = "{REDACTED}"
13	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/safety/filters.py:105:8
104	                return logits
105	        except Exception:
106	            pass
107	        if isinstance(logits, list):

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./src/codex_ml/safety/sandbox.py:8:0
7	import shutil
8	import subprocess
9	import tempfile

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./src/codex_ml/safety/sandbox.py:57:13
56	    try:
57	        cp = subprocess.run(
58	            argv,
59	            input=stdin,
60	            cwd=str(work),
61	            env=env,
62	            preexec_fn=preexec,
63	            timeout=timeout + 1,
64	            text=False,
65	            capture_output=True,
66	        )
67	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./src/codex_ml/symbolic_pipeline.py:191:10
190	        raise ValueError("corpus must not be empty")
191	    rng = random.Random(cfg.seed)
192	    vocab: Dict[str, int] = {}

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./src/codex_ml/symbolic_pipeline.py:234:10
233	        raise ValueError("demos must not be empty")
234	    rng = random.Random(cfg.seed)
235	    token_probs: Dict[str, float] = model.meta.get("token_probs", {}).copy()

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./src/codex_ml/symbolic_pipeline.py:290:10
289	    weights = [0.0] * len(token_index)
290	    rng = random.Random(cfg.seed)
291	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./src/codex_ml/symbolic_pipeline.py:343:10
342	    base_probs = model.meta.get("base_token_probs", token_probs.copy())
343	    rng = random.Random(cfg.seed)
344	

--------------------------------------------------
>> Issue: [B104:hardcoded_bind_all_interfaces] Possible binding to all interfaces.
   Severity: Medium   Confidence: Medium
   CWE: CWE-605 (https://cwe.mitre.org/data/definitions/605.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b104_hardcoded_bind_all_interfaces.html
   Location: ./src/codex_ml/telemetry/server.py:16:55
15	
16	def start_metrics_server(port: int = 8000, addr: str = "0.0.0.0") -> Optional[bool]:
17	    """Start a Prometheus metrics server if ``prometheus_client`` is available.

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '<BOS>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b105_hardcoded_password_string.html
   Location: ./src/codex_ml/tokenization/__init__.py:8:12
7	
8	BOS_TOKEN = "<BOS>"
9	EOS_TOKEN = "<EOS>"

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '<EOS>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b105_hardcoded_password_string.html
   Location: ./src/codex_ml/tokenization/__init__.py:9:12
8	BOS_TOKEN = "<BOS>"
9	EOS_TOKEN = "<EOS>"
10	PAD_TOKEN = "<PAD>"

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '<PAD>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b105_hardcoded_password_string.html
   Location: ./src/codex_ml/tokenization/__init__.py:10:12
9	EOS_TOKEN = "<EOS>"
10	PAD_TOKEN = "<PAD>"
11	UNK_TOKEN = "<UNK>"

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '<UNK>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b105_hardcoded_password_string.html
   Location: ./src/codex_ml/tokenization/__init__.py:11:12
10	PAD_TOKEN = "<PAD>"
11	UNK_TOKEN = "<UNK>"
12	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./src/codex_ml/tracking/git_tag.py:12:0
11	import locale
12	import subprocess
13	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./src/codex_ml/tracking/git_tag.py:22:12
21	                return out.decode(enc)
22	            except Exception:
23	                continue
24	        return out.decode("utf-8", errors="replace")

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./src/codex_ml/tracking/git_tag.py:31:14
30	    try:
31	        out = subprocess.check_output(["git", "rev-parse", "HEAD"])
32	        return _decode(out).strip()

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./src/codex_ml/tracking/git_tag.py:31:14
30	    try:
31	        out = subprocess.check_output(["git", "rev-parse", "HEAD"])
32	        return _decode(out).strip()

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./src/codex_ml/tracking/init_experiment.py:5:0
4	import socket
5	import subprocess
6	import time

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./src/codex_ml/tracking/init_experiment.py:78:12
77	        return (
78	            subprocess.check_output(
79	                ["git", "rev-parse", "--short", "HEAD"], stderr=subprocess.DEVNULL
80	            )
81	            .decode()

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./src/codex_ml/tracking/init_experiment.py:78:12
77	        return (
78	            subprocess.check_output(
79	                ["git", "rev-parse", "--short", "HEAD"], stderr=subprocess.DEVNULL
80	            )
81	            .decode()

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/tracking/mlflow_utils.py:248:8
247	            ml.log_metric(k, float(v), step=step)  # type: ignore[arg-type]
248	        except Exception:
249	            # be robust; drop bad values quietly
250	            pass
251	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/tracking/writers.py:60:12
59	                self._writer.close()
60	            except Exception:  # pragma: no cover
61	                pass
62	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/tracking/writers.py:91:12
90	                self._mlflow.end_run()
91	            except Exception:  # pragma: no cover
92	                pass
93	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/tracking/writers.py:123:12
122	                self._run.finish()
123	            except Exception:  # pragma: no cover
124	                pass
125	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./src/codex_ml/train_loop.py:86:15
85	    random.seed(42 + epoch)
86	    targets = [random.randint(0, 4) for _ in range(100)]
87	    preds: list[int] = []

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./src/codex_ml/train_loop.py:93:17
92	        batch_p = [
93	            t if random.random() < (0.4 + 0.15 * epoch) else random.randint(0, 4) for t in batch_t
94	        ]

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./src/codex_ml/train_loop.py:93:61
92	        batch_p = [
93	            t if random.random() < (0.4 + 0.15 * epoch) else random.randint(0, 4) for t in batch_t
94	        ]

--------------------------------------------------
>> Issue: [B403:blacklist] Consider possible security implications associated with pickle module.
   Severity: Low   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b403-import-pickle
   Location: ./src/codex_ml/utils/checkpointing.py:19:0
18	import json
19	import pickle
20	import platform

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./src/codex_ml/utils/checkpointing.py:23:0
22	import shutil
23	import subprocess
24	import sys

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./src/codex_ml/utils/checkpointing.py:100:15
99	        repo_root = Path(__file__).resolve().parents[3]
100	        return subprocess.check_output(
101	            ["git", "rev-parse", "HEAD"], cwd=repo_root, text=True
102	        ).strip()
103	    except Exception:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./src/codex_ml/utils/checkpointing.py:100:15
99	        repo_root = Path(__file__).resolve().parents[3]
100	        return subprocess.check_output(
101	            ["git", "rev-parse", "HEAD"], cwd=repo_root, text=True
102	        ).strip()
103	    except Exception:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/utils/checkpointing.py:112:4
111	            return _prov_git_commit()  # type: ignore[misc]
112	    except Exception:
113	        pass
114	    return _fallback_git_commit()

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/utils/checkpointing.py:155:4
154	                return env
155	    except Exception:
156	        pass
157	    # Fallback to minimal snapshot

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/utils/checkpointing.py:193:4
192	        )
193	    except Exception:
194	        pass
195	

--------------------------------------------------
>> Issue: [B301:blacklist] Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
   Severity: Medium   Confidence: High
   CWE: CWE-502 (https://cwe.mitre.org/data/definitions/502.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b301-pickle
   Location: ./src/codex_ml/utils/checkpointing.py:512:24
511	            with open(path / "state.pkl", "rb") as fh:
512	                state = pickle.load(fh)
513	            if (

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./src/codex_ml/utils/env.py:5:0
4	import platform
5	import subprocess
6	from pathlib import Path

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./src/codex_ml/utils/env.py:20:12
19	        return (
20	            subprocess.check_output(["git", "rev-parse", "HEAD"], cwd=root, text=True)
21	            .strip()

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./src/codex_ml/utils/env.py:20:12
19	        return (
20	            subprocess.check_output(["git", "rev-parse", "HEAD"], cwd=root, text=True)
21	            .strip()

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/utils/error_log.py:35:4
34	            fh.write(json.dumps(entry) + "\n")
35	    except Exception:
36	        pass
37	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/utils/error_log.py:49:8
48	                path.rename(rotated)
49	        except Exception:
50	            pass
51	    path.parent.mkdir(parents=True, exist_ok=True)

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./src/codex_ml/utils/provenance.py:7:0
6	import platform
7	import subprocess
8	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./src/codex_ml/utils/provenance.py:21:15
20	    try:  # pragma: no cover - dependent on environment
21	        return subprocess.check_output([sys.executable, "-m", "pip", "freeze"], text=True)
22	    except Exception:

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./src/codex_ml/utils/provenance.py:33:15
32	                break
33	        return subprocess.check_output(["git", "rev-parse", "HEAD"], cwd=root, text=True).strip()
34	    except Exception:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./src/codex_ml/utils/provenance.py:33:15
32	                break
33	        return subprocess.check_output(["git", "rev-parse", "HEAD"], cwd=root, text=True).strip()
34	    except Exception:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/utils/provenance.py:60:4
59	            ]
60	    except Exception:
61	        pass
62	    try:  # pragma: no cover - optional deps

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/utils/provenance.py:66:4
65	        info["system_metrics"] = _codex_sample_system()
66	    except Exception:
67	        pass
68	    return info

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/utils/repro.py:48:8
47	            torch.use_deterministic_algorithms(True)
48	        except Exception:  # pragma: no cover - older torch
49	            pass
50	        # Configure cuDNN for determinism

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/codex_ml/utils/repro.py:54:8
53	            torch.backends.cudnn.benchmark = False
54	        except Exception:  # pragma: no cover - no cudnn
55	            pass
56	        # Set CUDA seed if available

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./src/codex_ml/utils/seed.py:20:10
19	    items: MutableSequence[T] = list(seq)
20	    rng = random.Random(seed)
21	    rng.shuffle(items)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./src/ingestion/__init__.py:74:14
73	        items = list(seq)
74	        rng = random.Random(seed)
75	        rng.shuffle(items)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/ingestion/__init__.py:93:8
92	            return _repo_detect_encoding(p)
93	        except Exception:
94	            # Fall through to other detectors
95	            pass
96	    if _io_text__detect_encoding is not None:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/ingestion/__init__.py:99:8
98	            return _io_text__detect_encoding(p)
99	        except Exception:
100	            pass
101	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/ingestion/__init__.py:116:4
115	            return "utf-8"
116	    except Exception:
117	        pass
118	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./src/ingestion/__init__.py:123:8
122	            return enc
123	        except Exception:
124	            continue
125	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./src/ingestion/__init__.py:192:12
191	                break
192	            except Exception:
193	                continue
194	        else:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/ingestion/__init__.py:204:4
203	            text = text.lstrip("\ufeff")
204	    except Exception:
205	        pass
206	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/ingestion/__init__.py:230:8
229	            return txt
230	        except Exception:
231	            # Fall through to manual reader
232	            pass
233	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/ingestion/encoding_detect.py:95:4
94	            return "utf-8"
95	    except Exception:
96	        # If something odd happens while checking BOMs, continue gracefully.
97	        pass
98	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./src/ingestion/encoding_detect.py:141:8
140	            continue
141	        except Exception:
142	            # Any other unexpected error skip to next trial
143	            continue
144	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/ingestion/io_text.py:49:4
48	            return "utf-8"
49	    except Exception:
50	        # defensive: fall through to other strategies
51	        pass
52	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./src/ingestion/io_text.py:78:8
77	            continue
78	        except Exception:
79	            continue
80	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/ingestion/io_text.py:149:4
148	        text = text.replace("\r\n", "\n").replace("\r", "\n").lstrip("\ufeff")
149	    except Exception:
150	        # If normalization fails for any reason, return decoded text as-is
151	        pass
152	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/ingestion/utils.py:88:4
87	            return "utf-8"
88	    except Exception:
89	        pass
90	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./src/ingestion/utils.py:112:8
111	            continue
112	        except Exception:
113	            continue
114	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/ingestion/utils.py:128:8
127	            return _repo_detect_encoding(p)
128	        except Exception:
129	            # fall through to fallback detector
130	            pass
131	    return _fallback_detect_encoding(p)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./src/ingestion/utils.py:140:10
139	    items = list(seq)
140	    rng = random.Random(seed)
141	    rng.shuffle(items)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./src/ingestion/utils.py:169:4
168	
169	    assert 0 <= val_frac < 1 and 0 <= test_frac < 1 and (val_frac + test_frac) < 1
170	    cache = cache or _SPLIT_CACHE

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/ingestion/utils.py:186:4
185	        cache.set(key, result)
186	    except Exception:
187	        pass
188	    return result

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./src/ingestion/utils.py:201:4
200	    import json
201	    import subprocess
202	

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./src/ingestion/utils.py:206:14
205	    try:
206	        sha = subprocess.check_output(["git", "rev-parse", "HEAD"], text=True).strip()
207	    except Exception:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./src/ingestion/utils.py:206:14
205	    try:
206	        sha = subprocess.check_output(["git", "rev-parse", "HEAD"], text=True).strip()
207	    except Exception:

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./src/ingestion/utils.py:247:12
246	                break
247	            except Exception:
248	                continue
249	        else:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/ingestion/utils.py:256:4
255	        text = text.replace("\r\n", "\n").replace("\r", "\n").lstrip("\ufeff")
256	    except Exception:
257	        pass
258	    return text, str(enc)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./src/ingestion/utils.py:307:12
306	                return str(result)
307	            except Exception:
308	                # Fall through to manual reader
309	                pass
310	

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: '[UNK]'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b106_hardcoded_password_funcarg.html
   Location: ./src/tokenization/train_tokenizer.py:109:30
108	    else:
109	        tokenizer = Tokenizer(models.BPE(unk_token="[UNK]"))
110	        tokenizer.normalizer = normalizers.NFKC()

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tests/_codex_introspect.py:122:12
121	                patched.append(attr)
122	            except Exception:
123	                pass
124	    return patched

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/analysis/test_audit_pipeline.py:10:4
9	    result = parse_tiered(code)
10	    assert result.mode == "ast"
11	    assert result.ast_tree is not None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/analysis/test_audit_pipeline.py:11:4
10	    assert result.mode == "ast"
11	    assert result.ast_tree is not None
12	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/analysis/test_audit_pipeline.py:18:4
17	    report = audit_file(sample)
18	    assert report["mode"] == "ast"
19	    assert report["metrics"]["mccabe_minimal"] == 1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/analysis/test_audit_pipeline.py:19:4
18	    assert report["mode"] == "ast"
19	    assert report["metrics"]["mccabe_minimal"] == 1
20	    assert report["extraction"]["functions"][0]["name"] == "foo"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/analysis/test_audit_pipeline.py:20:4
19	    assert report["metrics"]["mccabe_minimal"] == 1
20	    assert report["extraction"]["functions"][0]["name"] == "foo"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/analysis/test_providers.py:11:4
10	    results = search.search("import os")
11	    assert any("sample.py" in r["where"] for r in results)
12	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/analysis/test_providers.py:16:4
15	    provider = ExternalWebSearch()
16	    assert provider.search("anything") == [{"disabled": True, "query": "anything"}]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/checkpointing/test_atomicity_and_resume.py:18:4
17	        mgr.save_now(1, b"x")
18	    assert not (tmp_path / "ckpt-1.pt").exists()
19	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/checkpointing/test_atomicity_and_resume.py:22:4
21	    p = mgr.save_now(2, b"x")
22	    assert CheckpointManager.find_resume(tmp_path) == str(p)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/checkpointing/test_best_not_pruned.py:12:4
11	    best_link = tmp_path / "best"
12	    assert os.readlink(best_link) == "ckpt-1.pt"
13	    assert (tmp_path / "ckpt-1.pt").exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/checkpointing/test_best_not_pruned.py:13:4
12	    assert os.readlink(best_link) == "ckpt-1.pt"
13	    assert (tmp_path / "ckpt-1.pt").exists()
14	    assert (tmp_path / "ckpt-2.pt").exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/checkpointing/test_best_not_pruned.py:14:4
13	    assert (tmp_path / "ckpt-1.pt").exists()
14	    assert (tmp_path / "ckpt-2.pt").exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/checkpointing/test_best_promotion.py:13:4
12	    best_link = tmp_path / "best"
13	    assert os.readlink(best_link) == "ckpt-3.pt"
14	    data = json.loads((tmp_path / "best.json").read_text())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/checkpointing/test_best_promotion.py:15:4
14	    data = json.loads((tmp_path / "best.json").read_text())
15	    assert data["value"] == 2.4 and data["step"] == 3

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/checkpointing/test_periodic_and_trim.py:13:4
12	    )
13	    assert files == ["ckpt-6.pt", "ckpt-8.pt", "ckpt-10.pt"]

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/cli/test_cli_viewer.py:1:0
1	import subprocess
2	import sys
3	from pathlib import Path

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/cli/test_cli_viewer.py:10:11
9	    cmd = [sys.executable, "-m", "scripts.cli.viewer", "--show", "nonexistent.txt"]
10	    proc = subprocess.run(cmd, capture_output=True, text=True, cwd=REPO_ROOT)
11	    # Should execute and exit with code 0 or 1 depending on file existence

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/cli/test_cli_viewer.py:12:4
11	    # Should execute and exit with code 0 or 1 depending on file existence
12	    assert proc.returncode in (0, 1)
13	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/cli/test_cli_viewer.py:17:11
16	    cmd = [sys.executable, "-m", "scripts.cli.viewer", "--show", "README.md"]
17	    proc = subprocess.run(cmd, capture_output=True, text=True, cwd=REPO_ROOT)
18	    assert proc.returncode == 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/cli/test_cli_viewer.py:18:4
17	    proc = subprocess.run(cmd, capture_output=True, text=True, cwd=REPO_ROOT)
18	    assert proc.returncode == 0
19	    assert "codex-universal" in proc.stdout

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/cli/test_cli_viewer.py:19:4
18	    assert proc.returncode == 0
19	    assert "codex-universal" in proc.stdout

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/cli/test_infer_cli_lora.py:53:4
52	
53	    assert called["lora_enabled"] is True
54	    assert called["lora_r"] == 4

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/cli/test_infer_cli_lora.py:54:4
53	    assert called["lora_enabled"] is True
54	    assert called["lora_r"] == 4
55	    assert called["lora_alpha"] == 32

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/cli/test_infer_cli_lora.py:55:4
54	    assert called["lora_r"] == 4
55	    assert called["lora_alpha"] == 32
56	    assert called["lora_dropout"] == 0.1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/cli/test_infer_cli_lora.py:56:4
55	    assert called["lora_alpha"] == 32
56	    assert called["lora_dropout"] == 0.1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/cli/test_subcommands.py:9:4
8	    result = runner.invoke(codex, ["metrics-server", "--help"])
9	    assert result.exit_code == 0
10	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/cli/test_subcommands.py:15:4
14	    result = runner.invoke(codex, ["tokenize", "hello"])
15	    assert result.exit_code == 0
16	    assert "[" in result.output

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/cli/test_subcommands.py:16:4
15	    assert result.exit_code == 0
16	    assert "[" in result.output

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/config/test_override_propagation.py:4:0
3	import os
4	import subprocess
5	from pathlib import Path

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/config/test_override_propagation.py:31:4
30	    env = {**os.environ, "PYTHONPATH": "src"}
31	    subprocess.run(cmd, check=True, env=env, cwd=ROOT)
32	    text = (ROOT / ".codex/hydra_last/.hydra/config.yaml").read_text()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/config/test_override_propagation.py:33:4
32	    text = (ROOT / ".codex/hydra_last/.hydra/config.yaml").read_text()
33	    assert "batch_size: 2" in text
34	    assert "lr: 0.1" in text

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/config/test_override_propagation.py:34:4
33	    assert "batch_size: 2" in text
34	    assert "lr: 0.1" in text
35	    assert "name: gpt2" in text

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/config/test_override_propagation.py:35:4
34	    assert "lr: 0.1" in text
35	    assert "name: gpt2" in text

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/config/test_provenance_snapshot.py:12:4
11	    snapshot_hydra_config(cfg, tmp_path, ["a=1"])
12	    assert (tmp_path / "config.yaml").exists()
13	    assert (tmp_path / "overrides.txt").read_text().strip() == "a=1"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/config/test_provenance_snapshot.py:13:4
12	    assert (tmp_path / "config.yaml").exists()
13	    assert (tmp_path / "overrides.txt").read_text().strip() == "a=1"
14	    info = json.loads((tmp_path / "provenance.json").read_text())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/config/test_provenance_snapshot.py:15:4
14	    info = json.loads((tmp_path / "provenance.json").read_text())
15	    assert "python" in info
16	    assert "pip_freeze" in info

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/config/test_provenance_snapshot.py:16:4
15	    assert "python" in info
16	    assert "pip_freeze" in info

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/config/test_sweep_expand.py:4:0
3	import os
4	import subprocess
5	from pathlib import Path

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/config/test_sweep_expand.py:16:11
15	    env = {**os.environ, "PYTHONPATH": "src"}
16	    proc = subprocess.run(cmd, check=True, capture_output=True, text=True, env=env, cwd=ROOT)
17	    return [line.strip() for line in proc.stdout.splitlines() if line.strip()]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/config/test_sweep_expand.py:24:4
23	    out = _run(["python", "scripts/run_sweep.py", "--sweep-file", str(sweep), "--dry-run"])
24	    assert any("{'a': 1, 'b': 3}" in line for line in out)
25	    assert len(out) == 2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/config/test_sweep_expand.py:25:4
24	    assert any("{'a': 1, 'b': 3}" in line for line in out)
25	    assert len(out) == 2
26	    out2 = _run(

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/config/test_sweep_expand.py:37:4
36	    )
37	    assert len(out2) == 1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/connectors/test_local_connector.py:12:4
11	    data = asyncio.run(conn.read_file(str(file)))
12	    assert data == b"hi"
13	    files = asyncio.run(conn.list_files(str(tmp_path)))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/connectors/test_local_connector.py:14:4
13	    files = asyncio.run(conn.list_files(str(tmp_path)))
14	    assert "a.txt" in files

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/connectors/test_registry.py:21:4
20	    conn = get_connector("dummy")
21	    assert isinstance(conn, DummyConnector)
22	    with pytest.raises(KeyError):

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_cache_flush_threshold.py:15:4
14	    cache.add_batch(batch)
15	    assert not list(tmp_path.glob("shard_*.npz"))
16	    cache.add_batch(batch)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_cache_flush_threshold.py:18:4
17	    shards = list(tmp_path.glob("shard_*.npz"))
18	    assert len(shards) == 1
19	    batches = list(TokenCache.iter_batches(tmp_path))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_cache_flush_threshold.py:20:4
19	    batches = list(TokenCache.iter_batches(tmp_path))
20	    assert len(batches) == 1
21	    assert batches[0]["input_ids"].shape[0] == 4

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_cache_flush_threshold.py:21:4
20	    assert len(batches) == 1
21	    assert batches[0]["input_ids"].shape[0] == 4

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_cache_roundtrip.py:25:4
24	    batches = list(TokenCache.iter_batches(tmp_path))
25	    assert len(batches) == 1
26	    reloaded = batches[0]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_cache_roundtrip.py:28:8
27	    for key in batch:
28	        assert np.array_equal(batch[key], reloaded[key])

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_hf_factory_compat.py:16:4
15	    ds = to_hf_dataset(texts, tok, max_length=8)
16	    assert set(ds.column_names) == {"input_ids", "attention_mask", "labels"}
17	    assert len(ds) == 2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_hf_factory_compat.py:17:4
16	    assert set(ds.column_names) == {"input_ids", "attention_mask", "labels"}
17	    assert len(ds) == 2
18	    first = ds[0]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_hf_factory_compat.py:19:4
18	    first = ds[0]
19	    assert isinstance(first["input_ids"][0], int)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_load_dataset.py:11:4
10	    data = load_dataset(path, cache_dir=tmp_path)
11	    assert data == ["foo", "bar", "alpha", "beta"]
12	    data2 = load_dataset(path, cache_dir=tmp_path)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_load_dataset.py:13:4
12	    data2 = load_dataset(path, cache_dir=tmp_path)
13	    assert data2 == data
14	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_load_dataset.py:19:4
18	    data = load_dataset(path, cache_dir=tmp_path)
19	    assert data == ["hello", "world"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_loaders.py:19:4
18	    b = [pc.prompt for pc in stream_paths(paths, seed=123)]
19	    assert a == b
20	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_loaders.py:26:4
25	    b = [pc.prompt for pc in stream_paths(paths, seed=2)]
26	    assert a != b

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_safety_filter.py:11:4
10	    out = apply_safety_filter(texts, True, filt)
11	    assert out[0] == "[x]"
12	    assert out[1] == "public"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_safety_filter.py:12:4
11	    assert out[0] == "[x]"
12	    assert out[1] == "public"
13	    assert apply_safety_filter(texts, False, filt) == texts

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_safety_filter.py:13:4
12	    assert out[1] == "public"
13	    assert apply_safety_filter(texts, False, filt) == texts

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_safety_filter_split.py:7:4
6	    train, val = split_dataset(texts, train_ratio=1.0, seed=0)
7	    assert "123-45-6789" not in train[0]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_split_dataset.py:8:4
7	    train2, val2 = split_dataset(texts, train_ratio=0.5, seed=123)
8	    assert train1 == train2
9	    assert val1 == val2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_split_dataset.py:9:4
8	    assert train1 == train2
9	    assert val1 == val2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_split_dataset_checksum.py:13:4
12	        h.update(t.encode("utf-8"))
13	    assert chk.read_text() == h.hexdigest()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_split_dataset_deterministic.py:8:4
7	    train2, val2 = split_dataset(texts, train_ratio=0.5, seed=123)
8	    assert train1 == train2 and val1 == val2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_streaming_memory.py:17:4
16	    after = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss
17	    assert total >= 5_000_000
18	    # Ensure memory increase stays below 50 MB

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/data/test_streaming_memory.py:19:4
18	    # Ensure memory increase stays below 50 MB
19	    assert (after - before) < 50_000

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_bleu_rouge_fallbacks.py:28:4
27	    rouge = get_metric("rougeL")
28	    assert bleu(["a"], ["a"]) is None
29	    assert rouge(["a"], ["a"]) is None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_bleu_rouge_fallbacks.py:29:4
28	    assert bleu(["a"], ["a"]) is None
29	    assert rouge(["a"], ["a"]) is None
30	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_bleu_rouge_fallbacks.py:36:4
35	    rows = [json.loads(line) for line in nd.read_text().splitlines()]
36	    assert len(rows) == 2
37	    assert all(r["value"] is None for r in rows)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_bleu_rouge_fallbacks.py:37:4
36	    assert len(rows) == 2
37	    assert all(r["value"] is None for r in rows)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_datasets_hf_disk.py:16:4
15	    examples = load_dataset(str(ds_path))
16	    assert examples == [Example("x", "y")]
17	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_datasets_hf_disk.py:30:4
29	    train_examples = load_dataset(str(ds_path))
30	    assert train_examples == [Example("a", "b")]
31	    test_examples = load_dataset(str(ds_path), hf_split="test")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_datasets_hf_disk.py:32:4
31	    test_examples = load_dataset(str(ds_path), hf_split="test")
32	    assert test_examples == [Example("c", "d")]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_eval_runner_max_samples.py:11:4
10	    record = json.loads(ndjson_path.read_text().strip().splitlines()[0])
11	    assert record["n"] == 1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_eval_runner_smoke.py:28:4
27	    )
28	    assert result.exit_code == 0
29	    nd = out_dir / "metrics.ndjson"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_eval_runner_smoke.py:31:4
30	    csv = out_dir / "metrics.csv"
31	    assert nd.exists()
32	    assert csv.exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_eval_runner_smoke.py:32:4
31	    assert nd.exists()
32	    assert csv.exists()
33	    rec = json.loads(nd.read_text().strip().splitlines()[0])

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_eval_runner_smoke.py:34:4
33	    rec = json.loads(nd.read_text().strip().splitlines()[0])
34	    assert rec["dataset"] == "toy_copy_task"
35	    assert rec["metric"] == "exact_match"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_eval_runner_smoke.py:35:4
34	    assert rec["dataset"] == "toy_copy_task"
35	    assert rec["metric"] == "exact_match"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_hf_dataset_loader.py:29:8
28	        )
29	        assert mock_load.call_args_list == [
30	            call("hf-internal-testing", "tiny-wikitext-2", split="train"),
31	            call("hf-internal-testing/tiny-wikitext-2", None, split="train"),
32	        ]
33	        assert len(data) == 2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_hf_dataset_loader.py:33:8
32	        ]
33	        assert len(data) == 2
34	        assert all(isinstance(item, Example) for item in data)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_hf_dataset_loader.py:34:8
33	        assert len(data) == 2
34	        assert all(isinstance(item, Example) for item in data)
35	        assert data[0].input == data[0].target

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_hf_dataset_loader.py:35:8
34	        assert all(isinstance(item, Example) for item in data)
35	        assert data[0].input == data[0].target
36	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_hf_dataset_loader.py:51:8
50	        mock_load.assert_called_once_with("openai/gsm8k", "main", split="train")
51	        assert data == [Example("sample", "sample")]
52	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_hf_dataset_loader.py:67:8
66	        mock_load.assert_called_once_with("glue", "mrpc", split="train")
67	        assert data == [Example("sample", "sample")]
68	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_hf_dataset_loader.py:88:8
87	        mock_load.assert_called_once_with("gsm8k", None, split="train")
88	        assert data == [Example("q1", "a1")]
89	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_hf_dataset_loader.py:104:8
103	        mock_load.assert_called_once_with("dummy", None, split="train")
104	        assert data == [Example("q", "a")]
105	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_hf_dataset_loader.py:136:8
135	        mock_load.assert_called_once_with("dummy", None, split="train")
136	        assert data == [Example("x", "x")]
137	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_metrics.py:11:4
10	    expected = math.exp(-(math.log(math.e / (math.e + 1)) + math.log(math.e / (math.e + 1))) / 2)
11	    assert abs(ppl - expected) < 1e-3
12	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_metrics.py:18:4
17	    acc = token_accuracy(preds, targets)
18	    assert acc == 0.5

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_metrics_correctness.py:9:4
8	    targets = [0, 1]
9	    assert M.perplexity(nll, targets, from_logits=False) == pytest.approx(1.0)
10	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_metrics_correctness.py:15:4
14	    targets = [1, 0, 3]
15	    assert M.token_accuracy(preds, targets) == pytest.approx(2 / 3)
16	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_metrics_correctness.py:21:4
20	    score = M.bleu(["the cat sat"], ["the cat sat"], lowercase=False)
21	    assert score == pytest.approx(1.0)
22	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_metrics_correctness.py:27:4
26	    result = M.rouge_l(["a b"], ["a b"], lowercase=False)
27	    assert result is not None
28	    assert result["rougeL_f"] == pytest.approx(1.0)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_metrics_correctness.py:28:4
27	    assert result is not None
28	    assert result["rougeL_f"] == pytest.approx(1.0)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_metrics_text_values.py:12:4
11	    ppl = perplexity(nll, targets, from_logits=False)
12	    assert math.isclose(ppl, 1.0)
13	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_metrics_text_values.py:16:4
15	    acc = token_accuracy(preds, [1, 0, 3])
16	    assert acc == pytest.approx(2 / 3)
17	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_metrics_text_values.py:25:4
24	    b = bleu(cand, ref)
25	    assert b is not None and math.isclose(b, 1.0)
26	    r = rouge_l(cand, ref)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_metrics_text_values.py:27:4
26	    r = rouge_l(cand, ref)
27	    assert r is not None and math.isclose(r["rougeL_f"], 1.0)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_registry_determinism.py:10:4
9	    second = acc(preds, targets)
10	    assert first == second
11	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_registry_determinism.py:17:4
16	    r2 = em(preds_s, targets_s)
17	    assert r1 == r2
18	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_registry_determinism.py:26:4
25	    r2 = metric(preds, targets)
26	    assert r1 == r2 == 1.0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_run_unit_tests.py:17:4
16	    summary = run_unit_tests(code, str(tests_dir))
17	    assert summary == {"passed": 0, "failed": 0, "errors": 2}

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_schema_compat.py:32:4
31	    # Allow additional fields (e.g., notes, ci_low, ci_high), only require a subset
32	    assert required.issubset(record.keys())
33	    assert record["dataset"] == "toy_copy_task"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_schema_compat.py:33:4
32	    assert required.issubset(record.keys())
33	    assert record["dataset"] == "toy_copy_task"
34	    assert record["metric"] == "exact_match"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_schema_compat.py:34:4
33	    assert record["dataset"] == "toy_copy_task"
34	    assert record["metric"] == "exact_match"
35	    assert float(record["value"]) == 1.0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_schema_compat.py:35:4
34	    assert record["metric"] == "exact_match"
35	    assert float(record["value"]) == 1.0
36	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_schema_compat.py:41:4
40	        rows = list(reader)
41	    assert rows, "CSV must contain at least one row"
42	    # Must contain required columns; allow extra columns

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_schema_compat.py:43:4
42	    # Must contain required columns; allow extra columns
43	    assert required.issubset(rows[0].keys())
44	    assert float(rows[0]["value"]) == float(record["value"])

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_schema_compat.py:44:4
43	    assert required.issubset(rows[0].keys())
44	    assert float(rows[0]["value"]) == float(record["value"])
45	    assert rows[0]["metric"] == record["metric"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/eval/test_schema_compat.py:45:4
44	    assert float(rows[0]["value"]) == float(record["value"])
45	    assert rows[0]["metric"] == record["metric"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/gates/test_quality_gates.py:32:4
31	    ppl = M.perplexity([math.log(4), math.log(4)], [0, 1], from_logits=False)
32	    assert ppl == pytest.approx(4.0)
33	    acc = M.token_accuracy([1, 2, 3], [1, 2, 0], ignore_index=0)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/gates/test_quality_gates.py:34:4
33	    acc = M.token_accuracy([1, 2, 3], [1, 2, 0], ignore_index=0)
34	    assert acc == pytest.approx(2 / 2)
35	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/gates/test_quality_gates.py:38:4
37	    score = M.bleu(["a b"], ["a b"])
38	    assert score == pytest.approx(1.0)
39	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/gates/test_quality_gates.py:42:4
41	    r = M.rouge_l(["a b c"], ["a b c"])
42	    assert r is not None and r["rougeL_f"] == pytest.approx(1.0)
43	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/gates/test_quality_gates.py:49:10
48	    set_reproducible(123)
49	    py1 = random.random()
50	    np1 = pytest.importorskip("numpy").random.rand()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/gates/test_quality_gates.py:54:4
53	    set_reproducible(123)
54	    assert py1 == random.random()
55	    assert np1 == pytest.importorskip("numpy").random.rand()

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/gates/test_quality_gates.py:54:18
53	    set_reproducible(123)
54	    assert py1 == random.random()
55	    assert np1 == pytest.importorskip("numpy").random.rand()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/gates/test_quality_gates.py:55:4
54	    assert py1 == random.random()
55	    assert np1 == pytest.importorskip("numpy").random.rand()
56	    assert torch.allclose(t1, torch.rand(1))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/gates/test_quality_gates.py:56:4
55	    assert np1 == pytest.importorskip("numpy").random.rand()
56	    assert torch.allclose(t1, torch.rand(1))
57	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/gates/test_quality_gates.py:84:4
83	    loggers = cl._codex_logging_bootstrap(SimpleNamespace(hydra_cfg=cfg))
84	    assert isinstance(loggers.tb, DummyWriter)
85	    assert calls["wb"]["mode"] == "offline" and calls["wb"]["project"] == "proj"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/gates/test_quality_gates.py:85:4
84	    assert isinstance(loggers.tb, DummyWriter)
85	    assert calls["wb"]["mode"] == "offline" and calls["wb"]["project"] == "proj"
86	    assert calls["ml_uri"] == "uri" and calls["ml_exp"] == "exp"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/gates/test_quality_gates.py:86:4
85	    assert calls["wb"]["mode"] == "offline" and calls["wb"]["project"] == "proj"
86	    assert calls["ml_uri"] == "uri" and calls["ml_exp"] == "exp"
87	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/gates/test_quality_gates.py:98:8
97	        inst = get_component("CODEX_TOKENIZER_PATH", "dummy_tok:Tok")
98	        assert inst.ok
99	    finally:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/ingestion/test_io_text.py:23:4
22	    out, used = read_text(p, encoding=enc)
23	    assert out == text
24	    assert used.lower().replace("-", "") == enc.replace("-", "")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/ingestion/test_io_text.py:24:4
23	    assert out == text
24	    assert used.lower().replace("-", "") == enc.replace("-", "")
25	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/ingestion/test_io_text.py:33:4
32	    out, used = read_text(p, encoding="auto")
33	    assert out == text
34	    assert used

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/ingestion/test_io_text.py:34:4
33	    assert out == text
34	    assert used
35	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/ingestion/test_io_text.py:49:4
48	    out, used = rt(p, encoding="auto")
49	    assert out == "hello" and used == "utf-8"
50	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/ingestion/test_io_text.py:56:4
55	    b = deterministic_shuffle(data, seed=123)
56	    assert a == b and a != data

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_apply_config.py:29:4
28	
29	    assert os.getenv("CODEX_TOKENIZER_PATH") == "pkg.tokenizer:Tok"
30	    assert os.getenv("CODEX_REWARD_PATH") == "pkg.reward:RM"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_apply_config.py:30:4
29	    assert os.getenv("CODEX_TOKENIZER_PATH") == "pkg.tokenizer:Tok"
30	    assert os.getenv("CODEX_REWARD_PATH") == "pkg.reward:RM"
31	    assert json.loads(os.environ["CODEX_REWARD_KWARGS"]) == {"alpha": 1}

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_apply_config.py:31:4
30	    assert os.getenv("CODEX_REWARD_PATH") == "pkg.reward:RM"
31	    assert json.loads(os.environ["CODEX_REWARD_KWARGS"]) == {"alpha": 1}
32	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_apply_config.py:41:4
40	    captured = capsys.readouterr().err
41	    assert "Question for ChatGPT" in captured
42	    assert "bad.yaml" in err_log.read_text()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_apply_config.py:42:4
41	    assert "Question for ChatGPT" in captured
42	    assert "bad.yaml" in err_log.read_text()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_env_tokenizer_component.py:14:8
13	        inst = get_component("CODEX_TOKENIZER_PATH", "tok_mod:Tok")
14	        assert inst.name == "tok"
15	    finally:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_get_component_env_var.py:10:4
9	    inst = get_component("CODEX_TOKENIZER_PATH", "dummy_mod:Dummy")
10	    assert inst.__class__.__name__ == "Dummy"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_loader_tokenizer_env.py:17:8
16	        inst = get_component("CODEX_TOKENIZER_PATH", "dummy_tok_env:DummyTok")
17	        assert getattr(inst, "ok", False)
18	    finally:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_registry_loader.py:17:8
16	        cls = load_component("tmp_mod:Dummy")
17	        assert cls.__name__ == "Dummy"
18	        os.environ["CODEX_DUMMY_PATH"] = "tmp_mod:Dummy"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_registry_loader.py:20:8
19	        inst = get_component("CODEX_DUMMY_PATH", "tmp_mod:Dummy")
20	        assert isinstance(inst, cls) and inst.flag
21	    finally:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:97:4
96	    ids = tk.encode("hello world")
97	    assert isinstance(ids, list) and len(ids) >= 2
98	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:101:4
100	    text = tk.decode(ids)
101	    assert isinstance(text, str)
102	    assert "hello" in text.lower()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:102:4
101	    assert isinstance(text, str)
102	    assert "hello" in text.lower()
103	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:111:4
110	    ids = tk.encode("a b c d e f g h i j")
111	    assert len(ids) == 5
112	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:115:4
114	    short_ids = tk.encode("hi")
115	    assert len(short_ids) == 5
116	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:126:4
125	
126	    assert len(batch) == len(texts)
127	    assert all(isinstance(x, list) for x in batch)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:127:4
126	    assert len(batch) == len(texts)
127	    assert all(isinstance(x, list) for x in batch)
128	    assert all(len(x) <= 8 for x in batch)  # Respects max_length

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:128:4
127	    assert all(isinstance(x, list) for x in batch)
128	    assert all(len(x) <= 8 for x in batch)  # Respects max_length
129	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:132:4
131	    decoded = tk.batch_decode(batch)
132	    assert len(decoded) == len(texts)
133	    assert all(isinstance(text, str) for text in decoded)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:133:4
132	    assert len(decoded) == len(texts)
133	    assert all(isinstance(text, str) for text in decoded)
134	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:142:4
141	    result = tk.batch_encode(["hello", "world"], return_dict=True)
142	    assert isinstance(result, dict)
143	    assert "input_ids" in result

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:143:4
142	    assert isinstance(result, dict)
143	    assert "input_ids" in result
144	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:147:4
146	    result_default = tk.batch_encode(["hello", "world"])
147	    assert isinstance(result_default, list)
148	    assert all(isinstance(x, list) for x in result_default)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:148:4
147	    assert isinstance(result_default, list)
148	    assert all(isinstance(x, list) for x in result_default)
149	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:157:4
156	    vocab_size = tk.vocab_size
157	    assert isinstance(vocab_size, int)
158	    assert vocab_size > 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:158:4
157	    assert isinstance(vocab_size, int)
158	    assert vocab_size > 0
159	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:163:4
162	    eos_id = tk.eos_id
163	    assert isinstance(pad_id, int)
164	    assert isinstance(eos_id, int)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:164:4
163	    assert isinstance(pad_id, int)
164	    assert isinstance(eos_id, int)
165	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:180:4
179	
180	    assert isinstance(ids_with_special, list)
181	    assert isinstance(ids_without_special, list)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:181:4
180	    assert isinstance(ids_with_special, list)
181	    assert isinstance(ids_without_special, list)
182	    # With special tokens should typically be longer

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:183:4
182	    # With special tokens should typically be longer
183	    assert len(ids_with_special) >= len(ids_without_special)
184	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:194:4
193	
194	    assert raw_tk is not None
195	    assert tokenizer is not None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:195:4
194	    assert raw_tk is not None
195	    assert tokenizer is not None
196	    assert raw_tk is tokenizer  # Should be the same object

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:196:4
195	    assert tokenizer is not None
196	    assert raw_tk is tokenizer  # Should be the same object
197	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:204:4
203	    result = tk.batch_encode_plus(["hello", "world"])
204	    assert isinstance(result, dict)
205	    assert "input_ids" in result

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:205:4
204	    assert isinstance(result, dict)
205	    assert "input_ids" in result
206	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:218:4
217	    ids = tk.encode("test input")
218	    assert isinstance(ids, list)
219	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:221:8
220	    if padding == "max_length" and max_length:
221	        assert len(ids) == max_length
222	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:230:4
229	    result = tk.decode([])
230	    assert isinstance(result, str)
231	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_hf.py:234:4
233	    ids = tk.encode("")
234	    assert isinstance(ids, list)
235	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/interfaces/test_tokenizer_loader_env.py:14:8
13	        inst = get_component("CODEX_TOKENIZER_PATH", "dummy_tok:Tok")
14	        assert inst.ok
15	    finally:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/modeling/test_decoder_only.py:19:4
18	    out = model(x)
19	    assert out["logits"].shape == (2, 8, model.cfg.vocab_size)
20	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/modeling/test_decoder_only.py:28:4
27	    m2 = _tiny_model()
28	    assert torch.allclose(m1(x)["logits"], m2(x)["logits"])
29	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/modeling/test_decoder_only.py:42:4
41	    expected += 2 * cfg.d_model
42	    assert total == expected
43	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/modeling/test_decoder_only.py:53:4
52	    ]
53	    assert torch.allclose(full, second, atol=1e-5)
54	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/modeling/test_decoder_only.py:63:4
62	    x = torch.randint(0, m.cfg.vocab_size, (1, 4))
63	    assert torch.allclose(m(x)["logits"], m2(x)["logits"])
64	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/modeling/test_decoder_only.py:70:4
69	    out = generate(m, None, prompt, max_new_tokens=5)
70	    assert out.size(1) >= 3
71	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/modeling/test_decoder_only.py:81:4
80	    names = [n for n, p in m.named_parameters() if "lora_" in n]
81	    assert names

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/modeling/test_model_registry.py:7:4
6	    model = get_model("MiniLM", {"vocab_size": 128})
7	    assert isinstance(model, minilm.MiniLM)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/models/test_lora_integration.py:27:4
26	    model = get_model("MiniLM", cfg)
27	    assert calls["cfg"]["enabled"] is True
28	    trainable = [n for n, p in model.named_parameters() if p.requires_grad]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/models/test_lora_integration.py:29:4
28	    trainable = [n for n, p in model.named_parameters() if p.requires_grad]
29	    assert trainable == ["lora.weight", "lora.bias"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/models/test_models_registry_api.py:12:4
11	    out = model(inp)
12	    assert out.shape[0] == 1
13	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/models/test_models_registry_api.py:26:8
25	    def fake_from_pretrained(name, **kwargs):  # pragma: no cover - patched
26	        assert kwargs.get("local_files_only") is True
27	        return DummyModel()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/models/test_models_registry_api.py:34:4
33	    model = get_model("bert-base-uncased", {"lora": {"enabled": False}})
34	    assert isinstance(model, DummyModel)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_async_writer_rotation.py:16:4
15	    lines = path.read_text(encoding="utf-8").strip().splitlines()
16	    assert lines, "log file is empty"
17	    for line in lines:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_codex_logging_bootstrap.py:18:4
17	    loggers = _codex_logging_bootstrap(args)
18	    assert loggers.tb is not None
19	    assert loggers.wb is not None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_codex_logging_bootstrap.py:19:4
18	    assert loggers.tb is not None
19	    assert loggers.wb is not None
20	    assert loggers.mlflow_active

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_codex_logging_bootstrap.py:20:4
19	    assert loggers.wb is not None
20	    assert loggers.mlflow_active
21	    loggers.wb.finish()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_codex_logging_cfg.py:38:4
37	    loggers = cl._codex_logging_bootstrap(argparse.Namespace(hydra_cfg=cfg))
38	    assert called["tb"] == str(tmp_path)
39	    assert called["wb"]["project"] == "proj" and called["wb"]["mode"] == "offline"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_codex_logging_cfg.py:39:4
38	    assert called["tb"] == str(tmp_path)
39	    assert called["wb"]["project"] == "proj" and called["wb"]["mode"] == "offline"
40	    assert loggers.wb == "wandb_obj"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_codex_logging_cfg.py:40:4
39	    assert called["wb"]["project"] == "proj" and called["wb"]["mode"] == "offline"
40	    assert loggers.wb == "wandb_obj"
41	    assert loggers.mlflow_active and called["ml_uri"] == "uri" and called["ml_exp"] == "exp"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_codex_logging_cfg.py:41:4
40	    assert loggers.wb == "wandb_obj"
41	    assert loggers.mlflow_active and called["ml_uri"] == "uri" and called["ml_exp"] == "exp"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_codex_logging_offline.py:35:4
34	    loggers = cl._codex_logging_bootstrap(argparse.Namespace(hydra_cfg=cfg))
35	    assert calls["tb"] == str(tmp_path)
36	    assert calls["wb"]["mode"] == "offline"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_codex_logging_offline.py:36:4
35	    assert calls["tb"] == str(tmp_path)
36	    assert calls["wb"]["mode"] == "offline"
37	    assert loggers.mlflow_active and calls["ml"] == "uri"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_codex_logging_offline.py:37:4
36	    assert calls["wb"]["mode"] == "offline"
37	    assert loggers.mlflow_active and calls["ml"] == "uri"

--------------------------------------------------
>> Issue: [B106:hardcoded_password_funcarg] Possible hardcoded password: '<pad>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b106_hardcoded_password_funcarg.html
   Location: ./tests/monitoring/test_engine_bootstrap.py:10:10
9	def _dummy_tokenizer():
10	    tok = types.SimpleNamespace(
11	        pad_token_id=0,
12	        pad_token="<pad>",
13	        eos_token_id=0,
14	        bos_token_id=0,
15	        __call__=lambda texts, return_tensors=None, padding=True, truncation=True, max_length=8: {
16	            "input_ids": [[0]],
17	            "attention_mask": [[1]],
18	        },
19	    )
20	    tok.add_special_tokens = lambda *a, **k: None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_engine_bootstrap.py:72:4
71	    eng.run_hf_trainer(texts=texts, output_dir=tmp_path, log_args=log_args)
72	    assert calls, "bootstrap should be called when flags enabled"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_logging_bootstrap_initialization.py:40:4
39	
40	    assert isinstance(loggers.tb, DummyWriter)
41	    assert loggers.wb is not None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_logging_bootstrap_initialization.py:41:4
40	    assert isinstance(loggers.tb, DummyWriter)
41	    assert loggers.wb is not None
42	    assert calls["wb"]["mode"] == "offline" and calls["wb"]["project"] == "proj"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_logging_bootstrap_initialization.py:42:4
41	    assert loggers.wb is not None
42	    assert calls["wb"]["mode"] == "offline" and calls["wb"]["project"] == "proj"
43	    assert loggers.mlflow_active and calls["ml_uri"] == "uri" and calls["ml_exp"] == "exp"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_logging_bootstrap_initialization.py:43:4
42	    assert calls["wb"]["mode"] == "offline" and calls["wb"]["project"] == "proj"
43	    assert loggers.mlflow_active and calls["ml_uri"] == "uri" and calls["ml_exp"] == "exp"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_logging_bootstrap_real.py:22:4
21	    loggers = cl._codex_logging_bootstrap(Namespace(hydra_cfg=cfg))
22	    assert loggers.tb is not None
23	    assert loggers.wb is not None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_logging_bootstrap_real.py:23:4
22	    assert loggers.tb is not None
23	    assert loggers.wb is not None
24	    assert loggers.mlflow_active

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_logging_bootstrap_real.py:24:4
23	    assert loggers.wb is not None
24	    assert loggers.mlflow_active
25	    loggers.tb.close()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_mlflow_monitoring_utils.py:10:4
9	    monkeypatch.setenv("CODEX_ENABLE_MLFLOW", "1")
10	    assert mlflow_utils.maybe_start_run() is None
11	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_mlflow_monitoring_utils.py:17:4
16	    monkeypatch.delenv("CODEX_ENABLE_MLFLOW", raising=False)
17	    assert mlflow_utils.maybe_start_run("r0") is None
18	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_mlflow_monitoring_utils.py:26:8
25	        m.start_run.return_value = run
26	        assert mlflow_utils.maybe_start_run("r1") is run
27	        m.set_tracking_uri.assert_called_once_with("file:/tmp/mlruns")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_mlflow_monitoring_utils.py:37:8
36	        m.start_run.return_value = run
37	        assert mlflow_utils.maybe_start_run("r2") is run
38	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_mlflow_monitoring_utils.py:47:8
46	        m.start_run.return_value = run
47	        assert mlflow_utils.maybe_start_run("r2", enabled=True) is run
48	        m.set_tracking_uri.assert_called_once_with("file:/tmp/mlruns")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_mlflow_monitoring_utils.py:58:8
57	        m.start_run.return_value = run
58	        assert mlflow_utils.maybe_start_run("r3", enabled=True) is run

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_monitoring_mlflow_utils.py:10:4
9	    monkeypatch.setenv("CODEX_ENABLE_MLFLOW", "1")
10	    assert mlflow_utils.maybe_start_run() is None
11	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_monitoring_mlflow_utils.py:17:4
16	    monkeypatch.delenv("CODEX_ENABLE_MLFLOW", raising=False)
17	    assert mlflow_utils.maybe_start_run("r0") is None
18	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_monitoring_mlflow_utils.py:26:8
25	        m.start_run.return_value = run
26	        assert mlflow_utils.maybe_start_run("r1") is run
27	        m.set_tracking_uri.assert_called_once_with("file:/tmp/mlruns")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_monitoring_mlflow_utils.py:37:8
36	        m.start_run.return_value = run
37	        assert mlflow_utils.maybe_start_run("r2") is run
38	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_monitoring_mlflow_utils.py:47:8
46	        m.start_run.return_value = run
47	        assert mlflow_utils.maybe_start_run("r2", enabled=True) is run
48	        m.set_tracking_uri.assert_called_once_with("file:/tmp/mlruns")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_monitoring_mlflow_utils.py:58:8
57	        m.start_run.return_value = run
58	        assert mlflow_utils.maybe_start_run("r3", enabled=True) is run

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_sampler_multi_gpu.py:38:4
37	    metrics = codex_logging._codex_sample_system()
38	    assert "gpus" in metrics
39	    assert len(metrics["gpus"]) == 2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_sampler_multi_gpu.py:39:4
38	    assert "gpus" in metrics
39	    assert len(metrics["gpus"]) == 2
40	    assert metrics["gpu_util_mean"] == 50

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_sampler_multi_gpu.py:40:4
39	    assert len(metrics["gpus"]) == 2
40	    assert metrics["gpu_util_mean"] == 50

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_schema_and_redaction.py:18:4
17	    data = red.dict()
18	    assert data["version"] == LOG_VERSION
19	    assert data["meta"]["api_key"] == "<redacted>"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_schema_and_redaction.py:19:4
18	    assert data["version"] == LOG_VERSION
19	    assert data["meta"]["api_key"] == "<redacted>"
20	    assert len(data["meta"]["note"]) == 4096

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/monitoring/test_schema_and_redaction.py:20:4
19	    assert data["meta"]["api_key"] == "<redacted>"
20	    assert len(data["meta"]["note"]) == 4096

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/multilingual/test_data_loader.py:18:4
17	    data = load_dataset(p, language="es")
18	    assert data[0]["text"] == "Hola"
19	    assert len(data) == 1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/multilingual/test_data_loader.py:19:4
18	    assert data[0]["text"] == "Hola"
19	    assert len(data) == 1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/multilingual/test_tokenizer.py:9:4
8	    decoded = [tok.decode(i) for i in ids]
9	    assert len(ids) == len(decoded)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/perf/test_perf_smoke.py:14:4
13	    # Basic sanity threshold: loop should finish quickly on modern CPUs
14	    assert elapsed < 1.0
15	    assert total > 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/perf/test_perf_smoke.py:15:4
14	    assert elapsed < 1.0
15	    assert total > 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/plugins/test_entry_point_discovery.py:35:4
34	    count, errs = reg.load_from_entry_points("codex_ml.x", require_api="v1")
35	    assert count == 1
36	    assert "bad" in errs and "boom" in errs["bad"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/plugins/test_entry_point_discovery.py:36:4
35	    assert count == 1
36	    assert "bad" in errs and "boom" in errs["bad"]
37	    assert "inc" in errs and "incompatible" in errs["inc"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/plugins/test_entry_point_discovery.py:37:4
36	    assert "bad" in errs and "boom" in errs["bad"]
37	    assert "inc" in errs and "incompatible" in errs["inc"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/plugins/test_factory_vs_class.py:22:4
21	    f = reg.resolve_and_instantiate("factory", 2)
22	    assert c.value == 1
23	    assert f.value == 2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/plugins/test_factory_vs_class.py:23:4
22	    assert c.value == 1
23	    assert f.value == 2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/plugins/test_registry_basic.py:11:4
10	
11	    assert "foo" in reg.names()
12	    item = reg.get("foo")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/plugins/test_registry_basic.py:13:4
12	    item = reg.get("foo")
13	    assert item is not None
14	    assert item.obj is Foo

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/plugins/test_registry_basic.py:14:4
13	    assert item is not None
14	    assert item.obj is Foo
15	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/plugins/test_registry_basic.py:28:4
27	
28	    assert reg.get("a").obj is B

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/privacy/test_dp_training.py:28:4
27	    out = run_custom_trainer(model, tokenizer, ds, None, cfg)
28	    assert "history" in out

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/reward_models/test_length_reward_model.py:8:4
7	    long = rm.evaluate("p", "hello")
8	    assert long > short
9	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/reward_models/test_length_reward_model.py:14:4
13	    scores = rm.batch_evaluate([("p", "ab"), ("p", "abcd")])
14	    assert scores == [2.0, 4.0]
15	    metrics = rm.learn([("p", "a")])

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/reward_models/test_length_reward_model.py:16:4
15	    metrics = rm.learn([("p", "a")])
16	    assert metrics == {"loss": 0.0}

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/safety/test_license_checker.py:3:0
2	import shutil
3	import subprocess
4	import types

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/safety/test_license_checker.py:15:4
14	    monkeypatch.setattr(subprocess, "run", lambda *a, **k: dummy)
15	    assert check_licenses.main() == 0
16	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/safety/test_license_checker.py:21:4
20	    monkeypatch.setattr(subprocess, "run", lambda *a, **k: dummy)
21	    assert check_licenses.main() == 1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/safety/test_risk_score.py:5:4
4	def test_safe_text():
5	    assert 0.0 <= risk_score("hello world") < 0.5
6	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/safety/test_risk_score.py:9:4
8	def test_flagged_text():
9	    assert risk_score("leak password please") > 0.5

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/safety/test_safety_filter_integration.py:17:4
16	    items = list(stream_paths([path], cfg=cfg))
17	    assert items[0].prompt == "my " + REDACT_TOKEN
18	    assert items[0].completion == REDACT_TOKEN

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/safety/test_safety_filter_integration.py:18:4
17	    assert items[0].prompt == "my " + REDACT_TOKEN
18	    assert items[0].completion == REDACT_TOKEN
19	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/safety/test_safety_filter_integration.py:26:4
25	    items = list(stream_paths([path], cfg=cfg))
26	    assert items[0].prompt == "my credit card"
27	    assert items[0].completion == "credit card"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/safety/test_safety_filter_integration.py:27:4
26	    assert items[0].prompt == "my credit card"
27	    assert items[0].completion == "credit card"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/security/test_log_redaction.py:13:4
12	    data = json.loads(p.read_text().strip())
13	    assert "REDACTED" in data["text"]
14	    assert data["redactions"]["secrets"] >= 1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/security/test_log_redaction.py:14:4
13	    assert "REDACTED" in data["text"]
14	    assert data["redactions"]["secrets"] >= 1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/security/test_safety_filters.py:8:4
7	    out = sanitize_prompt(s, cfg)
8	    assert "REDACTED" in out["text"] and out["redactions"]["pii"] >= 1
9	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/security/test_safety_filters.py:15:4
14	    out = sanitize_prompt(s, cfg)
15	    assert out["flags"]["jailbreak"] is True
16	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/security/test_safety_filters.py:21:4
20	    out = sanitize_output("123456789", cfg)
21	    assert out["flags"]["truncated"] is True

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/security/test_semgrep_rules.py:2:0
1	import shutil
2	import subprocess
3	from pathlib import Path

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./tests/security/test_semgrep_rules.py:23:10
22	    bad.write_text(BAD_CODE)
23	    res = subprocess.run(
24	        ["semgrep", "--config", "semgrep_rules/", str(bad)],
25	        capture_output=True,
26	        text=True,
27	    )
28	    out = res.stdout

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/security/test_semgrep_rules.py:23:10
22	    bad.write_text(BAD_CODE)
23	    res = subprocess.run(
24	        ["semgrep", "--config", "semgrep_rules/", str(bad)],
25	        capture_output=True,
26	        text=True,
27	    )
28	    out = res.stdout

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/security/test_semgrep_rules.py:29:4
28	    out = res.stdout
29	    assert "python.requests.no-timeout" in out
30	    assert "python.pickle.load" in out

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/security/test_semgrep_rules.py:30:4
29	    assert "python.requests.no-timeout" in out
30	    assert "python.pickle.load" in out

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/security/test_verify_pins.py:1:0
1	import subprocess
2	import sys
3	from pathlib import Path

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/security/test_verify_pins.py:9:10
8	    pyproj.write_text("[project]\ndependencies=['foo']\n")
9	    res = subprocess.run(
10	        [sys.executable, "tools/verify_pins.py", str(pyproj)],
11	        capture_output=True,
12	    )
13	    assert res.returncode != 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/security/test_verify_pins.py:13:4
12	    )
13	    assert res.returncode != 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/smoke/test_hf_trainer_hello.py:49:8
48	        trainer.save_state()
49	        assert (out / "trainer_state.json").exists()
50	        assert any(out.glob("checkpoint-*"))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/smoke/test_hf_trainer_hello.py:50:8
49	        assert (out / "trainer_state.json").exists()
50	        assert any(out.glob("checkpoint-*"))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/smoke/test_logging_flags_end_to_end.py:43:12
42	        if handles.get("tb") is not None:
43	            assert any(tb_dir.glob("events.*")), "TensorBoard events missing"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/smoke/test_mlflow_utils_noop.py:18:4
17	    MU.log_artifacts([])
18	    assert True

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/telemetry/test_instrumentation.py:14:4
13	    count_after = REQUEST_LATENCY.count if REQUEST_LATENCY else 0
14	    assert count_after == count_before + 1 if REQUEST_LATENCY else True

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/telemetry/test_metrics_server.py:23:4
22	    conn.close()
23	    assert "data_load_seconds" in data

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/test_accelerate_shim.py:19:20
18	        even_batches=True,
19	        logging_dir="/tmp/logs",
20	    )

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_accelerate_shim.py:24:8
23	    if has_dlc:
24	        assert "v>=0.30: using DataLoaderConfiguration path" in out
25	        assert "mapped logging_dir -> project_dir" in out

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_accelerate_shim.py:25:8
24	        assert "v>=0.30: using DataLoaderConfiguration path" in out
25	        assert "mapped logging_dir -> project_dir" in out
26	    else:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_accelerate_shim.py:27:8
26	    else:
27	        assert "v<0.30: using legacy kwargs path" in out
28	

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/test_accelerate_shim.py:50:44
49	
50	    acc = eng._make_accelerator(project_dir="/tmp/logs", dataloader_config=DummyDLC())
51	    out = capsys.readouterr().out

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_accelerate_shim.py:52:4
51	    out = capsys.readouterr().out
52	    assert "mapped project_dir -> logging_dir" in out
53	    assert "translated dataloader_config -> legacy kwargs" in out

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_accelerate_shim.py:53:4
52	    assert "mapped project_dir -> logging_dir" in out
53	    assert "translated dataloader_config -> legacy kwargs" in out
54	    assert "v<0.30: using legacy kwargs path" in out

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_accelerate_shim.py:54:4
53	    assert "translated dataloader_config -> legacy kwargs" in out
54	    assert "v<0.30: using legacy kwargs path" in out
55	    assert acc.kwargs["logging_dir"] == "/tmp/logs"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_accelerate_shim.py:55:4
54	    assert "v<0.30: using legacy kwargs path" in out
55	    assert acc.kwargs["logging_dir"] == "/tmp/logs"
56	    assert acc.kwargs["dispatch_batches"] is True

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/test_accelerate_shim.py:55:40
54	    assert "v<0.30: using legacy kwargs path" in out
55	    assert acc.kwargs["logging_dir"] == "/tmp/logs"
56	    assert acc.kwargs["dispatch_batches"] is True

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_accelerate_shim.py:56:4
55	    assert acc.kwargs["logging_dir"] == "/tmp/logs"
56	    assert acc.kwargs["dispatch_batches"] is True
57	    assert acc.kwargs["split_batches"] is False

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_accelerate_shim.py:57:4
56	    assert acc.kwargs["dispatch_batches"] is True
57	    assert acc.kwargs["split_batches"] is False
58	    assert acc.kwargs["even_batches"] is True

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_accelerate_shim.py:58:4
57	    assert acc.kwargs["split_batches"] is False
58	    assert acc.kwargs["even_batches"] is True
59	    assert "project_dir" not in acc.kwargs

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_accelerate_shim.py:59:4
58	    assert acc.kwargs["even_batches"] is True
59	    assert "project_dir" not in acc.kwargs
60	    assert "dataloader_config" not in acc.kwargs

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_accelerate_shim.py:60:4
59	    assert "project_dir" not in acc.kwargs
60	    assert "dataloader_config" not in acc.kwargs

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_activations.py:8:8
7	        act = get_activation(n)
8	        assert act is not None
9	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_api_rate_limit.py:16:4
15	        pytest.skip("rate limiting not enforced")
16	    assert first.status_code == 200
17	    assert second.status_code == 429

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_api_rate_limit.py:17:4
16	    assert first.status_code == 200
17	    assert second.status_code == 429

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_api_secret_filter.py:10:4
9	    resp = client.post("/infer", json=payload)
10	    assert resp.status_code == 200
11	    data = resp.json()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_api_secret_filter.py:12:4
11	    data = resp.json()
12	    assert "[SECRET]" in data["completion"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_callbacks.py:60:4
59	
60	    assert result is expected
61	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_chat_env_cleanup.py:14:8
13	    with ChatSession(session_id="cleanup", db_path=str(db)):
14	        assert os.getenv("CODEX_SESSION_ID") == "cleanup"
15	    assert os.getenv("CODEX_SESSION_ID") is None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_chat_env_cleanup.py:15:4
14	        assert os.getenv("CODEX_SESSION_ID") == "cleanup"
15	    assert os.getenv("CODEX_SESSION_ID") is None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_chat_session.py:23:8
22	    with ChatSession(session_id="env-session", db_path=str(db)) as chat:
23	        assert os.getenv("CODEX_SESSION_ID") == "env-session"
24	        chat.log_user(messages[0])

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_chat_session.py:27:4
26	    expected_rows = 2 + len(messages)  # start/end plus one row per message
27	    assert _count(db) == expected_rows
28	    with sqlite3.connect(db) as c:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_chat_session.py:35:4
34	        )
35	    assert pairs.get("session_start") == 1
36	    assert pairs.get("session_end") == 1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_chat_session.py:36:4
35	    assert pairs.get("session_start") == 1
36	    assert pairs.get("session_end") == 1
37	    assert os.getenv("CODEX_SESSION_ID") is None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_chat_session.py:37:4
36	    assert pairs.get("session_end") == 1
37	    assert os.getenv("CODEX_SESSION_ID") is None
38	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_chat_session.py:45:8
44	        sid = chat.session_id
45	        assert os.getenv("CODEX_SESSION_ID") == sid
46	        uuid.UUID(sid)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_chat_session.py:47:4
46	        uuid.UUID(sid)
47	    assert os.getenv("CODEX_SESSION_ID") is None
48	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./tests/test_chat_session.py:55:8
54	            t = p.read_text(encoding="utf-8", errors="ignore")
55	        except Exception:
56	            continue
57	        if re.search(r"\bclass\s+ChatSession\b", t):

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./tests/test_chat_session.py:64:12
63	                    return getattr(mod, "ChatSession")
64	            except Exception:
65	                continue
66	    return None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_chat_session.py:87:4
86	        pass
87	    assert os.environ.get("CODEX_SESSION_ID") in (
88	        None,
89	        "",
90	    ), "CODEX_SESSION_ID should be unset after exception"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_chat_session_exit.py:22:4
21	
22	    assert "CODEX_SESSION_ID" not in os.environ
23	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_chat_session_exit.py:38:4
37	
38	    assert "CODEX_SESSION_ID" not in os.environ

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_checksum.py:68:4
67	    checksums_file = ckpt_dir / "checksums.json"
68	    assert checksums_file.exists()
69	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_checksum.py:72:4
71	    meta = json.loads(checksums_file.read_text())
72	    assert "file" in meta
73	    assert "sha256" in meta

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_checksum.py:73:4
72	    assert "file" in meta
73	    assert "sha256" in meta
74	    assert "bytes" in meta

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_checksum.py:74:4
73	    assert "sha256" in meta
74	    assert "bytes" in meta
75	    assert len(meta["sha256"]) == 64  # SHA256 hex length

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_checksum.py:75:4
74	    assert "bytes" in meta
75	    assert len(meta["sha256"]) == 64  # SHA256 hex length
76	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_checksum.py:101:4
100	    # Verify checkpoint file exists
101	    assert ckpt_path.exists()
102	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_checksum.py:105:4
104	    checksums_file = tmp_path / "checksums.json"
105	    assert checksums_file.exists()
106	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_checksum.py:109:4
108	    meta = json.loads(checksums_file.read_text())
109	    assert meta["file"] == "model.pt"
110	    assert len(meta["sha256"]) == 64

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_checksum.py:110:4
109	    assert meta["file"] == "model.pt"
110	    assert len(meta["sha256"]) == 64
111	    assert meta["bytes"] == ckpt_path.stat().st_size

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_checksum.py:111:4
110	    assert len(meta["sha256"]) == 64
111	    assert meta["bytes"] == ckpt_path.stat().st_size
112	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_checksum.py:172:4
171	    # Verify checkpoint and checksum files exist
172	    assert ckpt_path.exists()
173	    assert (tmp_path / "checksums.json").exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_checksum.py:173:4
172	    assert ckpt_path.exists()
173	    assert (tmp_path / "checksums.json").exists()
174	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_checksum.py:184:4
183	    # Verify loaded data
184	    assert epoch == 5
185	    assert extra["validation_loss"] == 0.25

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_checksum.py:185:4
184	    assert epoch == 5
185	    assert extra["validation_loss"] == 0.25
186	    assert torch.allclose(new_model.weights["layer.weight"], torch.tensor([1.0, 2.0, 3.0]))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_checksum.py:186:4
185	    assert extra["validation_loss"] == 0.25
186	    assert torch.allclose(new_model.weights["layer.weight"], torch.tensor([1.0, 2.0, 3.0]))
187	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/test_checkpoint_commit_meta.py:1:0
1	import subprocess
2	from pathlib import Path
3	

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./tests/test_checkpoint_commit_meta.py:23:13
22	    repo_root = Path(__file__).resolve().parent.parent
23	    commit = subprocess.check_output(["git", "-C", str(repo_root), "rev-parse", "HEAD"], text=True).strip()
24	    assert extra["git_commit"] == commit

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_checkpoint_commit_meta.py:23:13
22	    repo_root = Path(__file__).resolve().parent.parent
23	    commit = subprocess.check_output(["git", "-C", str(repo_root), "rev-parse", "HEAD"], text=True).strip()
24	    assert extra["git_commit"] == commit

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_commit_meta.py:24:4
23	    commit = subprocess.check_output(["git", "-C", str(repo_root), "rev-parse", "HEAD"], text=True).strip()
24	    assert extra["git_commit"] == commit
25	    assert "system" in extra

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_commit_meta.py:25:4
24	    assert extra["git_commit"] == commit
25	    assert "system" in extra

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_manager.py:23:4
22	    ep2 = mgr.save(2, model, opt, sched, metrics={"val_loss": 0.5})
23	    assert (tmp_path / "last").read_text() == str(ep2)
24	    assert not (tmp_path / "epoch-1").exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_manager.py:24:4
23	    assert (tmp_path / "last").read_text() == str(ep2)
24	    assert not (tmp_path / "epoch-1").exists()
25	    info = mgr.resume_from(ep2, model, opt, sched)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_manager.py:26:4
25	    info = mgr.resume_from(ep2, model, opt, sched)
26	    assert info["meta"]["epoch"] == 2
27	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_manager.py:36:4
35	    epoch, extra = load_checkpoint(str(path), model, opt, sched)
36	    assert epoch == 5
37	    assert extra.get("foo") == "bar"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_manager.py:37:4
36	    assert epoch == 5
37	    assert extra.get("foo") == "bar"
38	    # Environment/provenance metadata should be present

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_manager.py:39:4
38	    # Environment/provenance metadata should be present
39	    assert "system" in extra or "env" in extra or "git_commit" in extra
40	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/test_checkpoint_manager.py:44:8
43	    state = dump_rng_state()
44	    a = random.random()
45	    random.random()

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/test_checkpoint_manager.py:45:4
44	    a = random.random()
45	    random.random()
46	    load_rng_state(state)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_manager.py:47:4
46	    load_rng_state(state)
47	    assert random.random() == a
48	    seeds = set_seed(123, tmp_path)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/test_checkpoint_manager.py:47:11
46	    load_rng_state(state)
47	    assert random.random() == a
48	    seeds = set_seed(123, tmp_path)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_manager.py:49:4
48	    seeds = set_seed(123, tmp_path)
49	    assert seeds["python"] == 123 and (tmp_path / "seeds.json").exists()

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/test_checkpoint_metadata.py:1:0
1	import subprocess
2	from pathlib import Path
3	

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./tests/test_checkpoint_metadata.py:18:13
17	    repo_root = Path(__file__).resolve().parents[1]
18	    commit = subprocess.check_output(["git", "rev-parse", "HEAD"], cwd=repo_root, text=True).strip()
19	    assert extra.get("git_commit") == commit or extra.get("git_hash")

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_checkpoint_metadata.py:18:13
17	    repo_root = Path(__file__).resolve().parents[1]
18	    commit = subprocess.check_output(["git", "rev-parse", "HEAD"], cwd=repo_root, text=True).strip()
19	    assert extra.get("git_commit") == commit or extra.get("git_hash")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_metadata.py:19:4
18	    commit = subprocess.check_output(["git", "rev-parse", "HEAD"], cwd=repo_root, text=True).strip()
19	    assert extra.get("git_commit") == commit or extra.get("git_hash")
20	    env = extra.get("system") or extra.get("env") or {}

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_metadata.py:21:4
20	    env = extra.get("system") or extra.get("env") or {}
21	    assert isinstance(env, dict) and "python" in env and "platform" in env

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_provenance.py:16:4
15	    meta = json.loads(p.with_suffix(".meta.json").read_text())
16	    assert meta["epoch"] == 7
17	    commit = environment_summary().get("git_commit")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_provenance.py:19:8
18	    if commit:
19	        assert meta["git_commit"] == commit

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_roundtrip.py:18:8
17	    for k in model.state_dict():
18	        assert torch.equal(model.state_dict()[k], reloaded.state_dict()[k])

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_system_meta.py:10:4
9	    path = tmp_path / "epoch-0" / "system.json"
10	    assert path.exists()
11	    data = json.loads(path.read_text())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpoint_system_meta.py:12:4
11	    data = json.loads(path.read_text())
12	    assert isinstance(data, dict)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpointing.py:17:8
16	        e, extra = load_checkpoint(str(p), m, opt, sch)
17	        assert e == 3 and extra["note"] == "ok"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_checkpointing_utils_extra.py:24:4
23	    out = mgr.resume_from(tmp_path / "epoch-1")
24	    assert out["meta"]["epoch"] == 1
25	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/test_cli.py:3:0
2	import os
3	import subprocess
4	import sys

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli.py:15:4
14	    result = runner.invoke(cli_module.cli, ["--help"])
15	    assert result.exit_code == 0
16	    assert "Codex CLI entry point" in result.output

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli.py:16:4
15	    assert result.exit_code == 0
16	    assert "Codex CLI entry point" in result.output
17	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli.py:22:4
21	    result = runner.invoke(cli_module.cli, ["tasks"])
22	    assert result.exit_code == 0
23	    out = result.output.strip().split()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli.py:24:4
23	    out = result.output.strip().split()
24	    assert "ingest" in out
25	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli.py:30:4
29	    result = runner.invoke(cli_module.cli, ["run", "invalid_task"])
30	    assert result.exit_code != 0
31	    assert "not allowed" in result.output

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli.py:31:4
30	    assert result.exit_code != 0
31	    assert "not allowed" in result.output
32	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli.py:41:8
40	        result = runner.invoke(cli_module.cli, ["run", "ingest"])
41	        assert result.exit_code == 0
42	        assert "Ingested" in result.output

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli.py:42:8
41	        assert result.exit_code == 0
42	        assert "Ingested" in result.output
43	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_cli.py:51:13
50	    env["PYTHONPATH"] = str(Path(__file__).resolve().parent.parent / "src")
51	    result = subprocess.run(
52	        [sys.executable, "-m", "codex.cli", "run", "ingest"],
53	        cwd=tmp_path,
54	        env=env,
55	        capture_output=True,
56	        text=True,
57	        check=True,
58	    )
59	    out_file = data_dir / "ingested.jsonl"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli.py:60:4
59	    out_file = data_dir / "ingested.jsonl"
60	    assert out_file.exists()
61	    assert "Ingested" in result.stdout

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli.py:61:4
60	    assert out_file.exists()
61	    assert "Ingested" in result.stdout

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/test_cli_help.py:2:0
1	import os
2	import subprocess
3	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_cli_help.py:11:13
10	    repo_root = Path(__file__).resolve().parents[1]
11	    result = subprocess.run(
12	        [sys.executable, "-m", "codex_ml.cli.main", "--help"],
13	        env=env,
14	        capture_output=True,
15	        text=True,
16	        cwd=str(repo_root),
17	    )
18	    assert result.returncode == 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli_help.py:18:4
17	    )
18	    assert result.returncode == 0
19	    assert "powered by hydra" in result.stdout.lower()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli_help.py:19:4
18	    assert result.returncode == 0
19	    assert "powered by hydra" in result.stdout.lower()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli_smoke.py:13:4
12	    rc = main(["--input-file", str(desc), "--out-md", str(md), "--out-json", str(js), "--dry-run"])
13	    assert rc == 0
14	    assert md.exists() and js.exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli_smoke.py:14:4
13	    assert rc == 0
14	    assert md.exists() and js.exists()
15	    plan = json.loads(js.read_text(encoding="utf-8"))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli_smoke.py:16:4
15	    plan = json.loads(js.read_text(encoding="utf-8"))
16	    assert "steps" in plan

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli_train_engine.py:10:4
9	    result = runner.invoke(cli, ["train", "--help"])
10	    assert result.exit_code == 0
11	    assert "--engine" in result.output

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli_train_engine.py:11:4
10	    assert result.exit_code == 0
11	    assert "--engine" in result.output
12	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli_train_engine.py:23:4
22	    result = runner.invoke(cli, ["train", "--engine", "custom", "--output-dir", "out"])
23	    assert result.exit_code == 0
24	    assert captured["argv"] == ["--engine", "custom", "--output-dir", "out"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli_train_engine.py:24:4
23	    assert result.exit_code == 0
24	    assert captured["argv"] == ["--engine", "custom", "--output-dir", "out"]
25	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli_train_engine.py:63:4
62	    )
63	    assert result.exit_code == 0
64	    assert captured["texts"] == ["hi"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli_train_engine.py:64:4
63	    assert result.exit_code == 0
64	    assert captured["texts"] == ["hi"]
65	    assert captured["output_dir"] == tmp_path

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli_train_engine.py:65:4
64	    assert captured["texts"] == ["hi"]
65	    assert captured["output_dir"] == tmp_path
66	    assert captured["kw"]["lora_r"] == 4

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli_train_engine.py:66:4
65	    assert captured["output_dir"] == tmp_path
66	    assert captured["kw"]["lora_r"] == 4
67	    assert captured["kw"]["lora_alpha"] == 32

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli_train_engine.py:67:4
66	    assert captured["kw"]["lora_r"] == 4
67	    assert captured["kw"]["lora_alpha"] == 32
68	    assert captured["kw"]["lora_dropout"] == 0.1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli_train_engine.py:68:4
67	    assert captured["kw"]["lora_alpha"] == 32
68	    assert captured["kw"]["lora_dropout"] == 0.1
69	    assert captured["kw"]["seed"] == 123

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli_train_engine.py:69:4
68	    assert captured["kw"]["lora_dropout"] == 0.1
69	    assert captured["kw"]["seed"] == 123
70	    assert captured["kw"]["device"] == "cpu"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli_train_engine.py:70:4
69	    assert captured["kw"]["seed"] == 123
70	    assert captured["kw"]["device"] == "cpu"
71	    assert captured["kw"]["dtype"] == "bf16"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_cli_train_engine.py:71:4
70	    assert captured["kw"]["device"] == "cpu"
71	    assert captured["kw"]["dtype"] == "bf16"

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/test_codex_cli.py:2:0
1	import os
2	import subprocess
3	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_codex_cli.py:14:13
13	    script = Path(__file__).resolve().parents[1] / "tools" / "codex_cli.py"
14	    result = subprocess.run([sys.executable, str(script), *args], env=env, check=False)
15	    return result.returncode

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codex_cli.py:20:4
19	def test_cli_lint_smoke():
20	    assert _run(["lint"]) == 0
21	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codex_cli.py:25:4
24	def test_cli_test_smoke():
25	    assert _run(["test"]) == 0
26	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codex_cli.py:30:4
29	def test_cli_audit_smoke():
30	    assert _run(["audit"]) == 0

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/test_codex_maintenance.py:1:0
1	import subprocess
2	import sys
3	from pathlib import Path

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_codex_maintenance.py:18:11
17	    )
18	    proc = subprocess.run([sys.executable, "-c", code], capture_output=True, text=True, cwd=ROOT)
19	    out = proc.stdout

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codex_maintenance.py:22:4
21	        pytest.skip("maintenance summary not produced")
22	    assert "- ok: success" in out
23	    assert "- fail: failure" in out

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codex_maintenance.py:23:4
22	    assert "- ok: success" in out
23	    assert "- fail: failure" in out
24	    assert proc.returncode != 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codex_maintenance.py:24:4
23	    assert "- fail: failure" in out
24	    assert proc.returncode != 0

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tests/test_codex_run_tasks.py:92:12
91	                setattr(mod, attr, val)
92	            except Exception:
93	                pass
94	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codex_run_tasks.py:101:4
100	
101	    assert rc != 0
102	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codex_run_tasks.py:116:4
115	
116	    assert q_resolved.exists(), f"expected questions file at {q_resolved}"
117	    assert c_resolved.exists(), f"expected commit comment file at {c_resolved}"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codex_run_tasks.py:117:4
116	    assert q_resolved.exists(), f"expected questions file at {q_resolved}"
117	    assert c_resolved.exists(), f"expected commit comment file at {c_resolved}"
118	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codex_run_tasks.py:122:4
121	
122	    assert q_text.strip() != ""
123	    assert c_text.strip() != ""

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codex_run_tasks.py:123:4
122	    assert q_text.strip() != ""
123	    assert c_text.strip() != ""

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codexml_cli.py:28:4
27	        cli(["pipeline.steps=[evaluate]", "eval=null", "hydra.run.dir=."])
28	    assert excinfo.value.code == 0
29	    assert called["eval"] is False

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codexml_cli.py:29:4
28	    assert excinfo.value.code == 0
29	    assert called["eval"] is False
30	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codexml_cli.py:35:4
34	        cli(["eval=null"])
35	    assert called["eval"] is False
36	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codexml_cli.py:42:4
41	        cli(["hydra.run.dir=."])
42	    assert excinfo.value.code == 0
43	    assert called["eval"] is True

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codexml_cli.py:43:4
42	    assert excinfo.value.code == 0
43	    assert called["eval"] is True
44	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codexml_cli.py:71:4
70	
71	    assert captured["argv"][:4] == ["--output-dir", "my_runs", "--texts", "hi"]
72	    assert "--val-texts" in captured["argv"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codexml_cli.py:72:4
71	    assert captured["argv"][:4] == ["--output-dir", "my_runs", "--texts", "hi"]
72	    assert "--val-texts" in captured["argv"]
73	    assert "training.epochs=2" in captured["argv"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codexml_cli.py:73:4
72	    assert "--val-texts" in captured["argv"]
73	    assert "training.epochs=2" in captured["argv"]
74	    assert "training.lr=1e-05" in captured["argv"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codexml_cli.py:74:4
73	    assert "training.epochs=2" in captured["argv"]
74	    assert "training.lr=1e-05" in captured["argv"]
75	    assert "training.lora.r=4" in captured["argv"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codexml_cli.py:75:4
74	    assert "training.lr=1e-05" in captured["argv"]
75	    assert "training.lora.r=4" in captured["argv"]
76	    assert "training.lora.alpha=16" in captured["argv"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codexml_cli.py:76:4
75	    assert "training.lora.r=4" in captured["argv"]
76	    assert "training.lora.alpha=16" in captured["argv"]
77	    assert "training.lora.dropout=0.2" in captured["argv"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_codexml_cli.py:77:4
76	    assert "training.lora.alpha=16" in captured["argv"]
77	    assert "training.lora.dropout=0.2" in captured["argv"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_conversation_logger.py:24:4
23	    expected_rows = 2 + len(messages)  # start/end plus one row per message
24	    assert _count(db) == expected_rows

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_data_cache_sharding.py:11:4
10	        cov |= set(range(s, e))
11	    assert len(cov) == n
12	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_data_utils.py:11:4
10	    train2, val2 = split_dataset(texts, train_ratio=0.8, seed=123)
11	    assert train1 == train2
12	    assert val1 == val2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_data_utils.py:12:4
11	    assert train1 == train2
12	    assert val1 == val2
13	    assert len(train1) == 8

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_data_utils.py:13:4
12	    assert val1 == val2
13	    assert len(train1) == 8
14	    assert len(val1) == 2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_data_utils.py:14:4
13	    assert len(train1) == 8
14	    assert len(val1) == 2
15	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_data_utils.py:23:4
22	    train2, val2 = split_dataset(texts, train_ratio=0.5, seed=1, cache_path=cache)
23	    assert (train1, val1) == (train2, val2)
24	    # Alter input; cache should be invalidated due to checksum mismatch

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_data_utils.py:27:4
26	    train3, val3 = split_dataset(texts, train_ratio=0.5, seed=1, cache_path=cache)
27	    assert (train3, val3) != (train1, val1)
28	    assert cache.exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_data_utils.py:28:4
27	    assert (train3, val3) != (train1, val1)
28	    assert cache.exists()
29	    data = json.loads(cache.read_text())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_data_utils.py:30:4
29	    data = json.loads(cache.read_text())
30	    assert "checksum" in data
31	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_data_utils.py:38:4
37	    chunks = list(stream_texts(file_path, chunk_size=3))
38	    assert "".join(chunks) == content
39	    assert all(len(c) <= 3 for c in chunks)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_data_utils.py:39:4
38	    assert "".join(chunks) == content
39	    assert all(len(c) <= 3 for c in chunks)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_dataset_checksums.py:13:4
12	    checksums = record_dataset_checksums([f1, f2], out)
13	    assert out.exists()
14	    data = json.loads(out.read_text())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_dataset_checksums.py:15:4
14	    data = json.loads(out.read_text())
15	    assert data == checksums
16	    assert set(data.keys()) == {"a.txt", "b.txt"}

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_dataset_checksums.py:16:4
15	    assert data == checksums
16	    assert set(data.keys()) == {"a.txt", "b.txt"}

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_dataset_manifest.py:13:4
12	    data = json.loads(path.read_text())
13	    assert data["name"] == "sample" and data["seed"] == 42
14	    assert "commit" in data

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_dataset_manifest.py:14:4
13	    assert data["name"] == "sample" and data["seed"] == 42
14	    assert "commit" in data

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_db_utils.py:26:8
25	    try:
26	        assert "session_events" in list_tables(con)
27	        t = infer_probable_table(con, candidates=("session_events", "logs"))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_db_utils.py:28:8
27	        t = infer_probable_table(con, candidates=("session_events", "logs"))
28	        assert t == "session_events"
29	        cols = infer_columns(con, t)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_db_utils.py:30:8
29	        cols = infer_columns(con, t)
30	        assert cols["session_id"] in ("session_id",)
31	        assert cols["timestamp"] in ("created_at",)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_db_utils.py:31:8
30	        assert cols["session_id"] in ("session_id",)
31	        assert cols["timestamp"] in ("created_at",)
32	        assert cols["message"] in ("content",)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_db_utils.py:32:8
31	        assert cols["timestamp"] in ("created_at",)
32	        assert cols["message"] in ("content",)
33	    finally:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_db_utils.py:46:8
45	        t = infer_probable_table(con, candidates=("session_events", "logs"))
46	        assert t == "logs"
47	        cols = infer_columns(con, t)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_db_utils.py:48:8
47	        cols = infer_columns(con, t)
48	        assert cols["timestamp"] in ("ts",)
49	        assert cols["session_id"] in ("sid",)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_db_utils.py:49:8
48	        assert cols["timestamp"] in ("ts",)
49	        assert cols["session_id"] in ("sid",)
50	        assert cols["message"] in ("message",)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_db_utils.py:50:8
49	        assert cols["session_id"] in ("sid",)
50	        assert cols["message"] in ("message",)
51	        assert cols["level"] in ("level",)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_db_utils.py:51:8
50	        assert cols["message"] in ("message",)
51	        assert cols["level"] in ("level",)
52	    finally:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_db_utils_table_name.py:17:4
16	    table = infer_probable_table(con)
17	    assert table == "session_events"
18	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_deep_research_task_process.py:12:4
11	    repo_root = Path(mod.REPO_ROOT)
12	    assert (repo_root / ".pre-commit-config.yaml").exists()
13	    assert (repo_root / "src" / "codex" / "logging").exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_deep_research_task_process.py:13:4
12	    assert (repo_root / ".pre-commit-config.yaml").exists()
13	    assert (repo_root / "src" / "codex" / "logging").exists()
14	    assert (repo_root / ".git").exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_deep_research_task_process.py:14:4
13	    assert (repo_root / "src" / "codex" / "logging").exists()
14	    assert (repo_root / ".git").exists()
15	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_deep_research_task_process.py:33:4
32	    mod._maybe_auto_run_on_import()
33	    assert calls["count"] == 0
34	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_deep_research_task_process.py:37:4
36	    mod._maybe_auto_run_on_import()
37	    assert calls["count"] == 1
38	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_deep_research_task_process.py:40:4
39	    mod._maybe_auto_run_on_import()
40	    assert calls["count"] == 1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_deploy_codex_pipeline.py:44:8
43	    for fn in ["summary.json", "metrics.json", "seeds.json", "tokenizer.json"]:
44	        assert (out1 / fn).is_file()
45	    for stage in ["M0", "M1", "RM", "M2"]:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_deploy_codex_pipeline.py:46:8
45	    for stage in ["M0", "M1", "RM", "M2"]:
46	        assert (out1 / "checkpoints" / f"{stage}.json").is_file()
47	    main(

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_deploy_codex_pipeline.py:64:4
63	        summary2 = json.load(f)
64	    assert summary1 == summary2
65	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_determinism.py:12:4
11	    b = torch.rand(5).tolist()
12	    assert a == b

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_engine_hf_trainer.py:21:4
20	    )
21	    assert "train_loss" in metrics
22	    assert metrics.get("global_step", 0) > 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_engine_hf_trainer.py:22:4
21	    assert "train_loss" in metrics
22	    assert metrics.get("global_step", 0) > 0
23	    saved = tmp_path / "pytorch_model.bin"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_engine_hf_trainer.py:26:4
25	        saved = tmp_path / "model.safetensors"
26	    assert saved.exists()
27	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_engine_hf_trainer.py:34:4
33	    metrics_ndjson = tmp_path / "metrics.ndjson"
34	    assert metrics_json.exists()
35	    assert metrics_ndjson.exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_engine_hf_trainer.py:35:4
34	    assert metrics_json.exists()
35	    assert metrics_ndjson.exists()
36	    record = json.loads(metrics_ndjson.read_text().splitlines()[-1])

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_engine_hf_trainer.py:37:4
36	    record = json.loads(metrics_ndjson.read_text().splitlines()[-1])
37	    assert record.get("global_step") == metrics.get("global_step")
38	    env_json = tmp_path / "env.json"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_engine_hf_trainer.py:39:4
38	    env_json = tmp_path / "env.json"
39	    assert env_json.exists()
40	    info = json.loads(env_json.read_text())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_engine_hf_trainer.py:41:4
40	    info = json.loads(env_json.read_text())
41	    assert info.get("git_commit")
42	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '</s>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b105_hardcoded_password_string.html
   Location: ./tests/test_engine_hf_trainer.py:54:24
53	            pad_token = None
54	            eos_token = "</s>"
55	            pad_token_id = 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_engine_hf_trainer.py:93:4
92	    )
93	    assert calls["name"] == "tok"
94	    assert calls["use_fast"] is False

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_engine_hf_trainer.py:94:4
93	    assert calls["name"] == "tok"
94	    assert calls["use_fast"] is False
95	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '</s>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b105_hardcoded_password_string.html
   Location: ./tests/test_engine_hf_trainer.py:104:24
103	            pad_token = None
104	            eos_token = "</s>"
105	            pad_token_id = 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_engine_hf_trainer.py:136:4
135	    run_hf_trainer(["hi"], tmp_path, resume_from=str(ckpt), distributed=False)
136	    assert captured["resume"] == str(ckpt)
137	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_engine_hf_trainer.py:152:4
151	    metrics = _compute_metrics((logits, labels))
152	    assert "token_accuracy" in metrics and "perplexity" in metrics

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_engine_hf_trainer_grad_accum.py:8:4
7	    )
8	    assert args.gradient_accumulation_steps == 3

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '</s>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b105_hardcoded_password_string.html
   Location: ./tests/test_engine_hf_trainer_lora.py:22:20
21	        pad_token = None
22	        eos_token = "</s>"
23	        pad_token_id = 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_engine_hf_trainer_lora.py:73:4
72	
73	    assert seen["cfg"] == {"r": 4, "lora_alpha": 32, "lora_dropout": 0.2}
74	    assert getattr(model, "peft_config") == seen["cfg"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_engine_hf_trainer_lora.py:74:4
73	    assert seen["cfg"] == {"r": 4, "lora_alpha": 32, "lora_dropout": 0.2}
74	    assert getattr(model, "peft_config") == seen["cfg"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_env_logging.py:16:4
15	    data = json.loads(path.read_text())
16	    assert data.get("git_commit")
17	    assert "packages" in data and data["packages"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_env_logging.py:17:4
16	    assert data.get("git_commit")
17	    assert "packages" in data and data["packages"]
18	    assert "system" in data

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_env_logging.py:18:4
17	    assert "packages" in data and data["packages"]
18	    assert "system" in data
19	    if torch is not None and getattr(torch.version, "cuda", None):

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_env_logging.py:20:8
19	    if torch is not None and getattr(torch.version, "cuda", None):
20	        assert "cuda_version" in data
21	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_env_logging.py:30:4
29	    )
30	    assert (tmp_path / "env.json").exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_error_log.py:12:4
11	    error_log.log("y", path=p)
12	    assert p.exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_eval_runner.py:10:4
9	    metrics = run_evaluator("sshleifer/tiny-gpt2", ["hello world"])
10	    assert "perplexity" in metrics
11	    err_path = Path(".codex/errors.ndjson")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_eval_runner.py:18:4
17	    data = json.loads(err_path.read_text().strip().splitlines()[-1])
18	    assert data["step"] == "safety_classifier"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_export.py:30:4
29	    data = json.loads(js)
30	    assert data[0]["message"] == "hi"
31	    txt = export_session("s1", "text")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_export.py:32:4
31	    txt = export_session("s1", "text")
32	    assert "user" in txt and "assistant" in txt
33	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_export.py:38:4
37	    monkeypatch.setattr("src.codex.logging.export._fetch_events", lambda db, sid: [])
38	    assert export_session(session_id) == "[]"
39	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_fetch_messages.py:112:4
111	    expected = [(e["role"], e["content"]) for e in EVENTS]
112	    assert got == expected, f"Expected {expected}, got {got}"
113	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_fetch_messages_missing_db.py:13:4
12	    result = fetch_messages("SID", db_path=missing)
13	    assert result == []
14	    assert caplog.text == ""

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_fetch_messages_missing_db.py:14:4
13	    assert result == []
14	    assert caplog.text == ""
15	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_fetch_messages_missing_db.py:24:4
23	    result = fetch_messages("SID", db_path=db)
24	    assert result == []
25	    assert caplog.text == ""

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_fetch_messages_missing_db.py:25:4
24	    assert result == []
25	    assert caplog.text == ""

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/test_git_tag.py:24:0
23	
24	import subprocess
25	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_git_tag.py:39:8
38	        # Typical invocation: ["git", "rev-parse", "HEAD"]
39	        assert isinstance(cmd, (list, tuple)), "git invocation should be a list/tuple"
40	        assert "git" in cmd[0]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_git_tag.py:40:8
39	        assert isinstance(cmd, (list, tuple)), "git invocation should be a list/tuple"
40	        assert "git" in cmd[0]
41	        # Return bytes to emulate actual subprocess behavior

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_git_tag.py:45:4
44	    monkeypatch.setattr(subprocess, "check_output", fake_check_output)
45	    assert git_tag.current_commit() == "abc123def456"
46	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_git_tag.py:57:8
56	    def fake_check_output(cmd, **kw):
57	        assert isinstance(cmd, (list, tuple)), "git invocation should be a list/tuple"
58	        assert "git" in cmd[0]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_git_tag.py:58:8
57	        assert isinstance(cmd, (list, tuple)), "git invocation should be a list/tuple"
58	        assert "git" in cmd[0]
59	        return b"abc123def456\n"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_git_tag.py:62:4
61	    monkeypatch.setattr(subprocess, "check_output", fake_check_output)
62	    assert current_commit() == "abc123def456"
63	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_git_tag.py:76:4
75	    monkeypatch.setattr(subprocess, "check_output", boom)
76	    assert git_tag.current_commit() is None
77	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_git_tag.py:93:4
92	    monkeypatch.setattr(subprocess, "check_output", boom, raising=False)
93	    assert current_commit() is None
94	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_git_tag.py:118:4
117	    )
118	    assert git_tag.current_commit() is None
119	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_git_tag.py:141:4
140	    monkeypatch.setattr(subprocess, "check_output", boom, raising=False)
141	    assert current_commit() is None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_hf_tokenizer_padding.py:7:4
6	    ids = tok.encode("hello world", pad_to_max=True, max_length=8)
7	    assert len(ids) == 8
8	    # ensure pad tokens appended

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_hf_tokenizer_padding.py:9:4
8	    # ensure pad tokens appended
9	    assert ids[-1] == tok.pad_id
10	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_hf_tokenizer_padding.py:15:4
14	    ids = tok.encode("one two three", max_length=2)
15	    assert len(ids) == 2
16	    # when not padding, pad_id should not appear

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_hf_tokenizer_padding.py:17:4
16	    # when not padding, pad_id should not appear
17	    assert tok.pad_id not in ids
18	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_hf_tokenizer_padding.py:23:4
22	    ids = tok.encode("one two three four", pad_to_max=True, max_length=3)
23	    assert len(ids) == 3
24	    # long input should be truncated without pad tokens

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_hf_tokenizer_padding.py:25:4
24	    # long input should be truncated without pad tokens
25	    assert tok.pad_id not in ids
26	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_hf_tokenizer_padding.py:31:4
30	    ids = tok.encode("hello", pad_to_max=True, max_length=0)
31	    assert ids == []

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '</s>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b105_hardcoded_password_string.html
   Location: ./tests/test_hf_trainer_lora_config.py:11:20
10	    class DummyTokenizer:
11	        eos_token = "</s>"
12	        pad_token = None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_hf_trainer_lora_config.py:68:4
67	
68	    assert captured == {"r": 8, "lora_alpha": 32, "lora_dropout": 0.05}

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/test_hydra_cli.py:2:0
1	import os
2	import subprocess
3	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_hydra_cli.py:14:4
13	    env = {**os.environ, "PYTHONPATH": str(Path(__file__).resolve().parents[1] / "src")}
14	    subprocess.run(cmd, check=True, env=env)
15	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_hydra_cli.py:20:11
19	    env = {**os.environ, "PYTHONPATH": str(Path(__file__).resolve().parents[1] / "src")}
20	    proc = subprocess.run(cmd, check=True, capture_output=True, text=True, env=env)
21	    assert "Hydra" in proc.stdout

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_hydra_cli.py:21:4
20	    proc = subprocess.run(cmd, check=True, capture_output=True, text=True, env=env)
21	    assert "Hydra" in proc.stdout

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_import_codex.py:4:4
3	
4	    assert codex is not None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_import_ndjson.py:35:4
34	    inserted = import_ndjson.import_session(session_id)
35	    assert inserted == 2
36	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_import_ndjson.py:39:4
38	    inserted = import_ndjson.import_session(session_id)
39	    assert inserted == 0
40	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_import_ndjson.py:48:4
47	    inserted = import_ndjson.import_session(session_id)
48	    assert inserted == 1
49	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_import_ndjson.py:57:8
56	        )
57	        assert rows == [
58	            (session_id, 1, "session_start"),
59	            (session_id, 2, "session_end"),
60	            (session_id, 3, "hi"),
61	        ]
62	        wm = con.execute(

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_import_ndjson.py:66:8
65	        ).fetchone()[0]
66	        assert wm == 3
67	        idxs = con.execute("PRAGMA index_list('session_events')").fetchall()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_import_ndjson.py:68:8
67	        idxs = con.execute("PRAGMA index_list('session_events')").fetchall()
68	        assert any(r[1] == "session_events_sid_ts_idx" for r in idxs)
69	    finally:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/test_import_ndjson_cli.py:5:0
4	import sqlite3
5	import subprocess
6	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_import_ndjson_cli.py:22:11
21	    env["CODEX_SESSION_LOG_DIR"] = str(log_dir)
22	    return subprocess.run(cmd, capture_output=True, text=True, env=env)
23	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_import_ndjson_cli.py:42:4
41	    proc = _run_cli(cmd, log_dir)
42	    assert proc.returncode == 0, proc.stderr
43	    with sqlite3.connect(db_path) as con:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_import_ndjson_cli.py:48:4
47	        ).fetchone()[0]
48	    assert count == len(events)
49	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_import_ndjson_cli.py:51:4
50	    proc2 = _run_cli(cmd, log_dir)
51	    assert proc2.returncode == 0, proc2.stderr
52	    with sqlite3.connect(db_path) as con:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_import_ndjson_cli.py:57:4
56	        ).fetchone()[0]
57	    assert count2 == len(events)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_import_ndjson_dedup.py:29:4
28	    pairs = dict(rows)
29	    assert pairs.get("session_start") == 1
30	    assert pairs.get("session_end") == 1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_import_ndjson_dedup.py:30:4
29	    assert pairs.get("session_start") == 1
30	    assert pairs.get("session_end") == 1
31	    # ensure no extra rows created beyond original two

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_import_ndjson_dedup.py:37:4
36	    )
37	    assert total == count_before

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_auto_encoding.py:21:4
20	    out = Ingestor.ingest(p, encoding="auto")
21	    assert out == text

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_encoding_coverage.py:55:4
54	                    offenders.append(f"{py}:{n.name}")
55	    assert not offenders, "Functions missing `encoding` param:\n" + "\n".join(offenders)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_encodings_matrix.py:22:4
21	    out = Ingestor.ingest(f, encoding=enc)
22	    assert isinstance(out, str)
23	    assert "café" in out and "£" in out

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_encodings_matrix.py:23:4
22	    assert isinstance(out, str)
23	    assert "café" in out and "£" in out

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_family_encoding.py:33:4
32	
33	    assert read_file(t, encoding=enc) == text
34	    assert read_text_file(t, encoding=enc) == text

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_family_encoding.py:34:4
33	    assert read_file(t, encoding=enc) == text
34	    assert read_text_file(t, encoding=enc) == text
35	    assert load_json(j, encoding=enc)["msg"] == text

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_family_encoding.py:35:4
34	    assert read_text_file(t, encoding=enc) == text
35	    assert load_json(j, encoding=enc)["msg"] == text
36	    rows = load_csv(c, encoding=enc)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_family_encoding.py:37:4
36	    rows = load_csv(c, encoding=enc)
37	    assert rows == [["msg"], [text]]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_io.py:30:4
29	    out = _call_ingest(p)
30	    assert isinstance(out, str)
31	    assert out == text

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_io.py:31:4
30	    assert isinstance(out, str)
31	    assert out == text
32	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_io.py:48:4
47	    out = _call_ingest(p, encoding=enc)
48	    assert out == text
49	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_io.py:56:4
55	    chunks = list(_call_ingest(p, chunk_size=4096))
56	    assert all(isinstance(c, str) for c in chunks)
57	    assert "".join(chunks) == text

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_io.py:57:4
56	    assert all(isinstance(c, str) for c in chunks)
57	    assert "".join(chunks) == text
58	    assert all(len(c) <= 4096 for c in chunks)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_io.py:58:4
57	    assert "".join(chunks) == text
58	    assert all(len(c) <= 4096 for c in chunks)
59	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_io.py:65:4
64	    out = _call_ingest(str(p))
65	    assert out == "OK"
66	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_read_text.py:18:4
17	    out = read_text(p, encoding="auto")
18	    assert isinstance(out, str) and out

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_seeded_shuffle.py:6:4
5	    data = list(range(5))
6	    assert deterministic_shuffle(data, 0) == deterministic_shuffle(data, 0)
7	    assert deterministic_shuffle(data, 1) != deterministic_shuffle(data, 0)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_seeded_shuffle.py:7:4
6	    assert deterministic_shuffle(data, 0) == deterministic_shuffle(data, 0)
7	    assert deterministic_shuffle(data, 1) != deterministic_shuffle(data, 0)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_split_cache.py:10:4
9	    train2, val2, test2 = split_dataset(seq, val_frac=0.2, test_frac=0.2, seed=123, cache=cache)
10	    assert (train1, val1, test1) == (train2, val2, test2)
11	    key = (tuple(seq), 0.2, 0.2, 123)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_split_cache.py:12:4
11	    key = (tuple(seq), 0.2, 0.2, 123)
12	    assert cache.get(key) == (train1, val1, test1)
13	    assert len(train1) + len(val1) + len(test1) == len(seq)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ingestion_split_cache.py:13:4
12	    assert cache.get(key) == (train1, val1, test1)
13	    assert len(train1) + len(val1) + len(test1) == len(seq)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interface_loader_env.py:19:4
18	    inst = get_component("CODEX_TOKENIZER_PATH", "unused:Unused")
19	    assert inst.__class__.__name__ == "DummyTokenizer"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interfaces_compat.py:40:4
39	    inst = cls(**TOK_KW)
40	    assert isinstance(inst, TokenizerAdapter)
41	    ids = inst.encode("hello")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interfaces_compat.py:42:4
41	    ids = inst.encode("hello")
42	    assert isinstance(ids, list) and all(isinstance(i, int) for i in ids)
43	    txt = inst.decode(ids)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interfaces_compat.py:44:4
43	    txt = inst.decode(ids)
44	    assert isinstance(txt, str)
45	    assert isinstance(inst.vocab_size(), int)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interfaces_compat.py:45:4
44	    assert isinstance(txt, str)
45	    assert isinstance(inst.vocab_size(), int)
46	    assert isinstance(inst.pad_id(), int)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interfaces_compat.py:46:4
45	    assert isinstance(inst.vocab_size(), int)
46	    assert isinstance(inst.pad_id(), int)
47	    assert isinstance(inst.eos_id(), int)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interfaces_compat.py:47:4
46	    assert isinstance(inst.pad_id(), int)
47	    assert isinstance(inst.eos_id(), int)
48	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interfaces_compat.py:55:4
54	    score = inst.evaluate("prompt", "completion")
55	    assert isinstance(score, float)
56	    metrics = inst.learn([("prompt", "completion", 1.0)])

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interfaces_compat.py:57:4
56	    metrics = inst.learn([("prompt", "completion", 1.0)])
57	    assert isinstance(metrics, dict)
58	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interfaces_compat.py:65:4
64	    a = inst.act({"obs": 1})
65	    assert a is not None
66	    metrics = inst.update({"states": [], "actions": [], "rewards": []})

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interfaces_compat.py:67:4
66	    metrics = inst.update({"states": [], "actions": [], "rewards": []})
67	    assert isinstance(metrics, dict)
68	    p = tmp_path / "agent.bin"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interfaces_compat.py:70:4
69	    inst.save(str(p))
70	    assert p.exists()
71	    inst.load(str(p))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interfaces_compat.py:84:4
83	    rm = _DummyRewardModel()
84	    assert isinstance(rm.evaluate("p", "c"), float)
85	    assert isinstance(rm.learn([]), dict)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interfaces_compat.py:85:4
84	    assert isinstance(rm.evaluate("p", "c"), float)
85	    assert isinstance(rm.learn([]), dict)
86	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interfaces_compat.py:106:4
105	    agent = _DummyRLAgent()
106	    assert agent.act({}) == 1
107	    assert isinstance(agent.update({}), dict)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interfaces_compat.py:107:4
106	    assert agent.act({}) == 1
107	    assert isinstance(agent.update({}), dict)
108	    p = tmp_path / "agent.bin"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interfaces_compat.py:110:4
109	    agent.save(str(p))
110	    assert p.exists()
111	    agent.load(str(p))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interfaces_hf_tokenizer.py:16:4
15	    decoded = tok.decode(ids)
16	    assert "hello" in decoded.lower()
17	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interfaces_hf_tokenizer.py:21:4
20	    # - pad_token_id may be None depending on tokenizer (newer property)
21	    assert tok.pad_id >= 0 and tok.eos_id >= 0
22	    assert tok.pad_token_id is None or tok.pad_token_id >= 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_interfaces_hf_tokenizer.py:22:4
21	    assert tok.pad_id >= 0 and tok.eos_id >= 0
22	    assert tok.pad_token_id is None or tok.pad_token_id >= 0

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/test_label_policy_lint.py:3:0
2	import pathlib
3	import subprocess
4	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_label_policy_lint.py:49:13
48	    )
49	    result = subprocess.run(
50	        [sys.executable, str(tmp_path / "tools/label_policy_lint.py")],
51	        cwd=tmp_path,
52	    )
53	    assert result.returncode == 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_label_policy_lint.py:53:4
52	    )
53	    assert result.returncode == 0
54	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_label_policy_lint.py:76:13
75	    )
76	    result = subprocess.run(
77	        [sys.executable, str(tmp_path / "tools/label_policy_lint.py")],
78	        cwd=tmp_path,
79	        capture_output=True,
80	    )
81	    assert result.returncode != 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_label_policy_lint.py:81:4
80	    )
81	    assert result.returncode != 0
82	    assert b"disallowed labels" in result.stderr

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_label_policy_lint.py:82:4
81	    assert result.returncode != 0
82	    assert b"disallowed labels" in result.stderr

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_loaders.py:22:4
21	    rows = list(iter_jsonl(f))
22	    assert len(rows) == 2
23	    assert rows[0].prompt == "p1" and rows[0].completion == "c1"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_loaders.py:23:4
22	    assert len(rows) == 2
23	    assert rows[0].prompt == "p1" and rows[0].completion == "c1"
24	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_loaders.py:29:4
28	    rows = list(iter_txt(f))
29	    assert rows[1].prompt == "p2"
30	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_loaders.py:35:4
34	    out = list(stream_paths([f1], fmt="jsonl", max_samples=3))
35	    assert len(out) == 3
36	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_loaders.py:41:4
40	    stats = collect_stats(iter_txt(f1))
41	    assert stats["samples"] == 2
42	    assert stats["avg_prompt_len"] > 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_loaders.py:42:4
41	    assert stats["samples"] == 2
42	    assert stats["avg_prompt_len"] > 0
43	    assert stats["avg_completion_tokens"] > 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_loaders.py:43:4
42	    assert stats["avg_prompt_len"] > 0
43	    assert stats["avg_completion_tokens"] > 0
44	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_log_adapters.py:15:4
14	    con.close()
15	    assert rows == [
16	        ("INFO", "test event", None),
17	        ("INFO", "another event", None),
18	    ]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_logging_bootstrap.py:38:4
37	    loggers = codex_logging._codex_logging_bootstrap(args)
38	    assert isinstance(loggers.tb, DummyTB)
39	    assert loggers.wb == "wb"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_logging_bootstrap.py:39:4
38	    assert isinstance(loggers.tb, DummyTB)
39	    assert loggers.wb == "wb"
40	    assert loggers.mlflow_active is True

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_logging_bootstrap.py:40:4
39	    assert loggers.wb == "wb"
40	    assert loggers.mlflow_active is True

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/test_logging_viewer_cli.py:5:0
4	import sqlite3
5	import subprocess
6	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_logging_viewer_cli.py:48:11
47	    env = {**os.environ, "PYTHONPATH": str(Path(__file__).resolve().parents[1] / "src")}
48	    proc = subprocess.run(cmd, capture_output=True, text=True, env=env)
49	    assert proc.returncode == 0, proc.stderr

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_logging_viewer_cli.py:49:4
48	    proc = subprocess.run(cmd, capture_output=True, text=True, env=env)
49	    assert proc.returncode == 0, proc.stderr
50	    out = proc.stdout.strip().splitlines()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_logging_viewer_cli.py:51:4
50	    out = proc.stdout.strip().splitlines()
51	    assert out[0].endswith("start session")
52	    assert out[-1].endswith("boom")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_logging_viewer_cli.py:52:4
51	    assert out[0].endswith("start session")
52	    assert out[-1].endswith("boom")
53	    assert len(out) == 3

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_logging_viewer_cli.py:53:4
52	    assert out[-1].endswith("boom")
53	    assert len(out) == 3
54	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_logging_viewer_cli.py:72:11
71	    env = {**os.environ, "PYTHONPATH": str(Path(__file__).resolve().parents[1] / "src")}
72	    proc = subprocess.run(cmd, capture_output=True, text=True, env=env)
73	    assert proc.returncode == 0, proc.stderr

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_logging_viewer_cli.py:73:4
72	    proc = subprocess.run(cmd, capture_output=True, text=True, env=env)
73	    assert proc.returncode == 0, proc.stderr
74	    data = json.loads(proc.stdout)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_logging_viewer_cli.py:75:4
74	    data = json.loads(proc.stdout)
75	    assert len(data) == 1
76	    assert data[0]["message"] == "boom"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_logging_viewer_cli.py:76:4
75	    assert len(data) == 1
76	    assert data[0]["message"] == "boom"
77	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_logging_viewer_cli.py:81:4
80	    ns = viewer.parse_args(["--session-id", "S-1", "--table", "valid_table"])
81	    assert ns.table == "valid_table"
82	    with pytest.raises(SystemExit):

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metric_curves.py:11:4
10	    s = summarize(tmp_path, "loss")
11	    assert s["count"] == 5 and s["mean"] > 0
12	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics.py:12:4
11	    targ = [1, 9, 3, 0, 5]
12	    assert M.token_accuracy(pred, targ) == pytest.approx(3 / 5)
13	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics.py:18:4
17	    targ = [1, -100, 9]
18	    assert M.token_accuracy(pred, targ, ignore_index=-100) == pytest.approx(1 / 2)
19	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics.py:24:4
23	    targ = [1, 2, 3]
24	    assert M.token_accuracy(pred, targ) == pytest.approx(1.0)
25	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics.py:28:4
27	def test_exact_match_strict():
28	    assert M.exact_match_strict("foo  bar", "foo bar") == 1.0
29	    assert M.exact_match_strict("a", "b") == 0.0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics.py:29:4
28	    assert M.exact_match_strict("foo  bar", "foo bar") == 1.0
29	    assert M.exact_match_strict("a", "b") == 0.0
30	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics.py:39:4
38	    ppl_high = M.perplexity(logits_high, targets, from_logits=True)
39	    assert ppl_high < ppl_low
40	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics.py:46:4
45	    ppl = M.perplexity(nlls, targets, from_logits=False)
46	    assert ppl == pytest.approx(2.0)
47	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics.py:53:4
52	    r = M.rouge_l(["a b"], ["a b"])
53	    assert (score is None) or (0.0 <= score <= 1.0)
54	    assert (r is None) or ("rougeL_f" in r)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics.py:54:4
53	    assert (score is None) or (0.0 <= score <= 1.0)
54	    assert (r is None) or ("rougeL_f" in r)
55	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics.py:60:4
59	    score = M.bleu(["the cat sat"], ["the cat sat"])
60	    assert score is not None and score == pytest.approx(1.0)
61	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics.py:66:4
65	    res = M.rouge_l(["the cat sat"], ["the cat sat"])
66	    assert res is not None and res["rougeL_f"] == pytest.approx(1.0)
67	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics_correctness.py:12:4
11	    ppl = M.perplexity(logits, targets, from_logits=True)
12	    assert math.isclose(ppl, 2.0, rel_tol=1e-6)
13	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics_correctness.py:19:4
18	    ppl = M.perplexity(nll, targets, from_logits=False)
19	    assert ppl == pytest.approx(4.0)
20	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics_correctness.py:26:4
25	    acc = M.token_accuracy(preds, targets)
26	    assert math.isclose(acc, 2 / 3, rel_tol=1e-6)
27	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics_correctness.py:33:4
32	    acc = M.token_accuracy(preds, targs, ignore_index=0)
33	    assert acc == pytest.approx(2 / 3)
34	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics_correctness.py:39:4
38	    score = M.bleu(["hello world"], ["hello world"])
39	    assert score == pytest.approx(1.0)
40	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics_correctness.py:45:4
44	    score = M.bleu(["the cat sat"], ["the cat sat"])
45	    assert score == pytest.approx(1.0)
46	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics_correctness.py:51:4
50	    result = M.rouge_l(["hello world"], ["hello world"])
51	    assert result is not None
52	    assert result["rougeL_f"] == pytest.approx(1.0)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics_correctness.py:52:4
51	    assert result is not None
52	    assert result["rougeL_f"] == pytest.approx(1.0)
53	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics_correctness.py:58:4
57	    r = M.rouge_l(["a b c"], ["a b c"])
58	    assert r is not None
59	    assert r["rougeL_f"] == pytest.approx(1.0)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics_correctness.py:59:4
58	    assert r is not None
59	    assert r["rougeL_f"] == pytest.approx(1.0)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics_logging.py:17:4
16	    emit_validation_metric_record(str(metrics), payload)
17	    assert metrics.exists(), "metrics.json should be created"
18	    lines = metrics.read_text(encoding="utf-8").strip().splitlines()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics_logging.py:19:4
18	    lines = metrics.read_text(encoding="utf-8").strip().splitlines()
19	    assert len(lines) >= 1
20	    for line in lines:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics_logging.py:22:8
21	        rec = json.loads(line)
22	        assert rec.get("split") == "val"
23	        assert "token_accuracy" in rec and "perplexity" in rec

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics_logging.py:23:8
22	        assert rec.get("split") == "val"
23	        assert "token_accuracy" in rec and "perplexity" in rec

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_metrics_tb.py:23:4
22	    )
23	    assert (tmp_path / "metrics.json").exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_minilm_forward.py:29:4
28	    preds = logits.argmax(-1)
29	    assert torch.equal(preds, targets)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_step_logging.py:92:4
91	
92	    assert len(dummy.logged_metrics) == 1
93	    assert dummy.logged_metrics[0] == ("loss", 1.2, 5)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_step_logging.py:93:4
92	    assert len(dummy.logged_metrics) == 1
93	    assert dummy.logged_metrics[0] == ("loss", 1.2, 5)
94	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_step_logging.py:103:4
102	
103	    assert len(dummy.logged_metrics) == 3
104	    expected = [("loss", 1.23, 10), ("accuracy", 0.95, 10), ("f1_score", 0.87, 10)]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_step_logging.py:105:4
104	    expected = [("loss", 1.23, 10), ("accuracy", 0.95, 10), ("f1_score", 0.87, 10)]
105	    assert dummy.logged_metrics == expected
106	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_step_logging.py:114:4
113	
114	    assert len(dummy.logged_metrics) == 0
115	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_step_logging.py:123:4
122	
123	    assert len(dummy.logged_metrics) == 0
124	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_step_logging.py:132:4
131	    MU.log_metrics({"loss": 1.0, "_step": 100}, step=5, enabled=True)
132	    assert dummy.logged_metrics[0] == ("loss", 1.0, 5)
133	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_step_logging.py:139:4
138	    MU.log_metrics({"loss": 2.0, "_step": 15}, step=None, enabled=True)
139	    assert dummy.logged_metrics[0] == ("loss", 2.0, 15)
140	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_step_logging.py:148:4
147	
148	    assert len(dummy.logged_metrics) == 0
149	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_step_logging.py:157:4
156	
157	    assert len(dummy.logged_metrics) == 2
158	    assert dummy.logged_metrics[0][1] == 42

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_step_logging.py:158:4
157	    assert len(dummy.logged_metrics) == 2
158	    assert dummy.logged_metrics[0][1] == 42
159	    assert dummy.logged_metrics[1][1] == 3.14

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_step_logging.py:159:4
158	    assert dummy.logged_metrics[0][1] == 42
159	    assert dummy.logged_metrics[1][1] == 3.14
160	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_step_logging.py:168:4
167	
168	    assert dummy.logged_metrics[0] == ("initial_loss", 10.0, 0)
169	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_step_logging.py:177:4
176	
177	    assert dummy.logged_metrics[0] == ("metric", 1.0, -1)
178	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_step_logging.py:186:4
185	
186	    assert dummy.logged_metrics[0] == ("metric", 1.0, 10_000)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils.py:93:12
92	        with mfu.start_run("exp") as run:
93	            assert run in (None, False)
94	    except RuntimeError:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils.py:103:8
102	    with mfu.start_run(cfg) as run:
103	        assert run in (None, False)
104	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils.py:115:8
114	    ) as ctx:
115	        assert ctx == "run"
116	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils.py:134:4
133	    # Verify step logging behavior
134	    assert dummy.params == {"p": 1}
135	    assert ("loss", 1.0, 2) in dummy.metrics  # Step parameter should be preserved

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils.py:135:4
134	    assert dummy.params == {"p": 1}
135	    assert ("loss", 1.0, 2) in dummy.metrics  # Step parameter should be preserved
136	    assert "f.txt" in dummy.artifacts and "d" in dummy.artifacts

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils.py:136:4
135	    assert ("loss", 1.0, 2) in dummy.metrics  # Step parameter should be preserved
136	    assert "f.txt" in dummy.artifacts and "d" in dummy.artifacts
137	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils.py:144:4
143	    path = mfu.seed_snapshot(seeds, tmp_path)
144	    assert json.loads(path.read_text(encoding="utf-8")) == seeds
145	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils.py:160:4
159	    out = mfu.seed_snapshot({"seed": 1}, tmp_path, enabled=True)
160	    assert out.exists() and logged["path"] == str(out)
161	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils.py:169:4
168	    mfu.ensure_local_artifacts(tmp_path, summary, seeds)
169	    assert json.loads((tmp_path / "summary.json").read_text(encoding="utf-8")) == summary
170	    assert json.loads((tmp_path / "seeds.json").read_text(encoding="utf-8")) == seeds

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils.py:170:4
169	    assert json.loads((tmp_path / "summary.json").read_text(encoding="utf-8")) == summary
170	    assert json.loads((tmp_path / "seeds.json").read_text(encoding="utf-8")) == seeds
171	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils.py:185:8
184	    with MU.start_run(None) as ctx:
185	        assert ctx is None
186	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils.py:194:8
193	    with MU.start_run(MU.MlflowConfig(enable=True, tracking_uri=None)) as ctx:
194	        assert ctx == "run"
195	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils.py:217:4
216	    MU._ensure_mlflow_available()
217	    assert MU._mlf is dummy and MU._HAS_MLFLOW
218	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils.py:235:4
234	    )
235	    assert cfg.enable and cfg.tracking_uri == "t" and cfg.experiment == "e2"
236	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils.py:245:4
244	    cfg = mod.MlflowConfig()
245	    assert cfg.tracking_uri == "file:/tmp/mlruns"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils_root.py:40:8
39	        # Accept either False or None as reasonable historical results.
40	        assert run in (None, False)
41	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils_root.py:75:12
74	            # historical behavior yielded a falsy value.
75	            assert run is not None or run in (None, False)
76	    except RuntimeError:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils_root.py:85:4
84	    path = seed_snapshot(seeds, tmp_path)
85	    assert json.loads(path.read_text(encoding="utf-8")) == seeds
86	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils_root.py:104:4
103	    out = mfu.seed_snapshot({"seed": 1}, tmp_path, enabled=True)
104	    assert out.exists() and logged.get("path") == str(out)
105	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils_root.py:112:4
111	    ensure_local_artifacts(tmp_path, summary, seeds)
112	    assert json.loads((tmp_path / "summary.json").read_text(encoding="utf-8")) == summary
113	    assert json.loads((tmp_path / "seeds.json").read_text(encoding="utf-8")) == seeds

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_mlflow_utils_root.py:113:4
112	    assert json.loads((tmp_path / "summary.json").read_text(encoding="utf-8")) == summary
113	    assert json.loads((tmp_path / "seeds.json").read_text(encoding="utf-8")) == seeds

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_model_loader.py:41:4
40	
41	    assert model is not None
42	    assert called["args"][0] == "gpt2"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_model_loader.py:42:4
41	    assert model is not None
42	    assert called["args"][0] == "gpt2"
43	    # Verify kwargs are passed through appropriately

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_model_loader.py:44:4
43	    # Verify kwargs are passed through appropriately
44	    assert isinstance(called["args"][1], dict)
45	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_model_loader.py:62:4
61	    model = mod.load_model_with_optional_lora("model_stub", lora_enabled=False)
62	    assert model is fake_model
63	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_model_loader.py:82:4
81	    model = mod.load_model_with_optional_lora("model_stub", lora_enabled=True)
82	    assert model is fake_model
83	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_model_loader.py:118:4
117	
118	    assert model is lora_model
119	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_model_loader.py:142:4
141	
142	    assert model is lora_model
143	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_model_loader.py:171:8
170	    for key, value in custom_kwargs.items():
171	        assert called_kwargs.get(key) == value
172	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_model_loader.py:214:4
213	    model = mod.load_model_with_optional_lora("test_model", lora_enabled=lora_enabled)
214	    assert model is test_model
215	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_model_loader.py:232:4
231	    mod.load_model_with_optional_lora("m", device_map="sequential")
232	    assert captured["device_map"] == "sequential"
233	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_modeling_utils.py:23:4
22	    model, tok = modeling.load_model_and_tokenizer("stub", dtype="fp16")
23	    assert model is fake_model and tok is fake_tok
24	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_modeling_utils.py:40:4
39	    model, _ = modeling.load_model_and_tokenizer("stub", lora={"r": 4})
40	    assert model is fake_model

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_monitoring_thread.py:25:4
24	    sysd = m._codex_sample_system()
25	    assert isinstance(sysd, dict)
26	    if loggers.tb is not None:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_monitoring_thread.py:27:8
26	    if loggers.tb is not None:
27	        assert (tmp_path / "tb").exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ndjson_db_parity.py:27:4
26	    rows = fetch_messages(sid, db_path=db_path)
27	    assert len(lines) == len(rows)
28	    assert [r["message"] for r in rows] == [

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ndjson_db_parity.py:28:4
27	    assert len(lines) == len(rows)
28	    assert [r["message"] for r in rows] == [
29	        item.get("message") or item.get("type") for item in lines
30	    ]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ndjson_logging.py:9:4
8	    lines = (tmp_path / "metrics.ndjson").read_text().strip().splitlines()
9	    assert len(lines) == 2
10	    data = [__import__("json").loads(line) for line in lines]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ndjson_logging.py:11:4
10	    data = [__import__("json").loads(line) for line in lines]
11	    assert data[0]["epoch"] == 0
12	    assert data[1]["epoch"] == 1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ndjson_logging.py:12:4
11	    assert data[0]["epoch"] == 0
12	    assert data[1]["epoch"] == 1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_ndjson_writer.py:15:8
14	        lines = p.read_text().strip().splitlines()
15	        assert [json.loads(x)["step"] for x in lines] == [1, 2]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_nox_tests_delegation.py:21:4
20	    noxfile.tests(sess)
21	    assert "coverage" in sess.notified, "nox 'tests' session must notify 'coverage'"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_offline_repo_auditor.py:30:4
29	    summary = auditor.collect(str(tmp_path))
30	    assert "module/core.py" in summary.py_structs
31	    assert any("TODO" in f.line for f in summary.stubs)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_offline_repo_auditor.py:31:4
30	    assert "module/core.py" in summary.py_structs
31	    assert any("TODO" in f.line for f in summary.stubs)
32	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_offline_repo_auditor.py:36:4
35	    text = out_path.read_text(encoding="utf-8")
36	    assert "Repo Map" in text
37	    assert "Capability Audit Table" in text

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_offline_repo_auditor.py:37:4
36	    assert "Repo Map" in text
37	    assert "Capability Audit Table" in text

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_parse_when.py:8:4
7	    dt = parse_when("2025-08-19T12:34:56Z")
8	    assert dt.tzinfo is not None
9	    assert dt.utcoffset() == timezone.utc.utcoffset(dt)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_parse_when.py:9:4
8	    assert dt.tzinfo is not None
9	    assert dt.utcoffset() == timezone.utc.utcoffset(dt)
10	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_parse_when.py:14:4
13	    dt = parse_when("2025-08-19T07:34:56-05:00")
14	    assert dt.tzinfo is not None
15	    assert dt.utcoffset().total_seconds() == -5 * 3600

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_parse_when.py:15:4
14	    assert dt.tzinfo is not None
15	    assert dt.utcoffset().total_seconds() == -5 * 3600
16	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_parse_when.py:20:4
19	    dt = parse_when("2025-08-19T12:34:56")
20	    assert dt.tzinfo is None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_peft_adapter.py:16:4
15	    patched = apply_lora(model, {"r": 2, "bias": "all"}, lora_alpha=32)
16	    assert patched is model
17	    assert patched.peft_config == {

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_peft_adapter.py:17:4
16	    assert patched is model
17	    assert patched.peft_config == {
18	        "r": 2,
19	        "lora_alpha": 32,
20	        "lora_dropout": 0.05,
21	        "bias": "all",
22	    }
23	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_peft_adapter.py:29:4
28	    patched = apply_lora(model, {"r": 2}, r=4)
29	    assert patched.peft_config["r"] == 4
30	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_peft_adapter.py:36:4
35	    patched = apply_lora(model, lora_dropout=0.1)
36	    assert hasattr(patched, "peft_config")
37	    assert patched.peft_config["lora_dropout"] == 0.1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_peft_adapter.py:37:4
36	    assert hasattr(patched, "peft_config")
37	    assert patched.peft_config["lora_dropout"] == 0.1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_peft_integration.py:12:4
11	    adapted = apply_lora(model, {"r": 2}, lora_alpha=4)
12	    assert hasattr(adapted, "peft_config")
13	    assert adapted.peft_config["r"] == 2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_peft_integration.py:13:4
12	    assert hasattr(adapted, "peft_config")
13	    assert adapted.peft_config["r"] == 2
14	    assert adapted.peft_config["lora_alpha"] == 4

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_peft_integration.py:14:4
13	    assert adapted.peft_config["r"] == 2
14	    assert adapted.peft_config["lora_alpha"] == 4

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_pipeline.py:8:4
7	    out = run_pipeline(ctx, raw, dry_run=True)
8	    assert out.convergence > 0.5
9	    assert "Prioritized Tasks" in out.tasks_md

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_pipeline.py:9:4
8	    assert out.convergence > 0.5
9	    assert "Prioritized Tasks" in out.tasks_md

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_precommit_config_exists.py:5:4
4	def test_precommit_config_exists():
5	    assert (
6	        pathlib.Path(__file__).resolve().parents[1] / ".pre-commit-config.yaml"
7	    ).exists(), ".pre-commit-config.yaml should exist at repo root"

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tests/test_query_logs_build_query.py:80:4
79	        file_entry["nodes_visited"] = v.count
80	    except Exception:
81	        # silent best-effort
82	        pass
83	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tests/test_query_logs_build_query.py:92:4
91	        out.write_text(json.dumps(_AST_METRICS, indent=2), encoding="utf-8")
92	    except Exception:
93	        pass
94	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./tests/test_query_logs_build_query.py:125:8
124	            txt = p.read_text(encoding="utf-8", errors="ignore")
125	        except Exception:
126	            continue
127	        if re.search(r"\bdef\s+build_query\s*\(", txt):

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tests/test_query_logs_build_query.py:245:4
244	                        cols.add(c)
245	    except Exception:
246	        pass
247	    return sorted(cols)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tests/test_query_logs_build_query.py:281:4
280	                _dfs_dict(node, 1, set(), ts_acc)
281	    except Exception:
282	        pass
283	    return ts_acc[0] if ts_acc else None

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tests/test_query_logs_build_query.py:301:4
300	            ts = inferred_ts
301	    except Exception:
302	        pass
303	    try:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tests/test_query_logs_build_query.py:313:4
312	            expected_cols = ["event_time", "user_id", "message"]
313	    except Exception:
314	        pass
315	    if not expected_cols:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_query_logs_build_query.py:358:4
357	    cols, ts = _infer_expectations(mod.build_query)
358	    assert set(cols) >= {"event_time", "user_id", "message"}
359	    assert ts == "event_time"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_query_logs_build_query.py:359:4
358	    assert set(cols) >= {"event_time", "user_id", "message"}
359	    assert ts == "event_time"
360	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_query_logs_build_query.py:372:4
371	    cols, ts = _infer_expectations(mod.build_query)
372	    assert set(cols) >= {"id", "ts", "val"}
373	    assert ts == "ts"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_query_logs_build_query.py:373:4
372	    assert set(cols) >= {"id", "ts", "val"}
373	    assert ts == "ts"
374	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_query_logs_build_query.py:387:4
386	    cols, ts = _infer_expectations(mod.build_query)
387	    assert set(cols) >= {"a", "b", "c", "d"}
388	    assert ts == "d"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_query_logs_build_query.py:388:4
387	    assert set(cols) >= {"a", "b", "c", "d"}
388	    assert ts == "d"
389	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_query_logs_build_query.py:401:4
400	    cols, ts = _infer_expectations(mod.build_query)
401	    assert set(cols) >= {"u", "v", "w"}
402	    assert ts == "ts_nested"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_query_logs_build_query.py:402:4
401	    assert set(cols) >= {"u", "v", "w"}
402	    assert ts == "ts_nested"
403	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_query_logs_build_query.py:451:4
450	
451	    assert isinstance(sql, str), "build_query did not return SQL string"
452	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_query_logs_build_query.py:455:8
454	    for c in exp_cols:
455	        assert any(
456	            c.lower() in s.lower() for s in sel
457	        ), f"Missing column {c} in SELECT: {sel}"
458	    assert re.search(

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_query_logs_build_query.py:458:4
457	        ), f"Missing column {c} in SELECT: {sel}"
458	    assert re.search(
459	        rf"order\s+by\s+{re.escape(ts)}\s+asc\b", sql, flags=re.I
460	    ), f"ORDER BY {ts} ASC missing: {sql}"
461	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_query_logs_build_query.py:511:4
510	    ts = _extract_timestamp_from_source(src)
511	    assert set(exp_cols).issubset(set(cols)), f"Expected subset {exp_cols} ⊄ {cols}"
512	    assert ts == exp_ts, f"Timestamp mismatch: {ts} != {exp_ts}"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_query_logs_build_query.py:512:4
511	    assert set(exp_cols).issubset(set(cols)), f"Expected subset {exp_cols} ⊄ {cols}"
512	    assert ts == exp_ts, f"Timestamp mismatch: {ts} != {exp_ts}"
513	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/test_query_logs_tail.py:4:0
3	import sqlite3
4	import subprocess
5	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_query_logs_tail.py:46:9
45	    env = os.environ | {"PYTHONPATH": str(Path(__file__).resolve().parents[1] / "src")}
46	    cp = subprocess.run(cmd, capture_output=True, text=True, env=env)
47	    assert cp.returncode == 0, cp.stderr

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_query_logs_tail.py:47:4
46	    cp = subprocess.run(cmd, capture_output=True, text=True, env=env)
47	    assert cp.returncode == 0, cp.stderr
48	    data = json.loads(cp.stdout)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_query_logs_tail.py:49:4
48	    data = json.loads(cp.stdout)
49	    assert [r["message"] for r in data] == ["third"]

--------------------------------------------------
>> Issue: [B102:exec_used] Use of exec detected.
   Severity: Medium   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b102_exec_used.html
   Location: ./tests/test_readme_examples.py:15:4
14	    monkeypatch.setenv("CODEX_LOG_DB_PATH", str(db))
15	    exec(snippet, {})
16	    con = sqlite3.connect(db)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_readme_examples.py:25:4
24	        con.close()
25	    assert rows == [("user", "hi"), ("assistant", "hello")]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_registry.py:13:4
12	
13	    assert get("dummy") is Dummy
14	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_registry.py:28:4
27	
28	    assert any("duplicate" in str(item.message) for item in w)
29	    assert get("dup") is B

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_registry.py:29:4
28	    assert any("duplicate" in str(item.message) for item in w)
29	    assert get("dup") is B
30	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_repo_option_a.py:12:4
11	    build_snapshot()
12	    assert ARTIFACT_DB.exists()
13	    con = sqlite3.connect(ARTIFACT_DB)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_repo_option_a.py:21:4
20	        con.close()
21	    assert ("hello world",) in rows
22	    con = sqlite3.connect(f"file:{ARTIFACT_DB}?immutable=1", uri=True)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_repo_option_b.py:18:4
17	        con.close()
18	    assert ("hello world",) in rows

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_repro_cli.py:16:4
15	    )
16	    assert result.exit_code == 0
17	    seeds = json.loads((tmp_path / "seeds.json").read_text())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_repro_cli.py:18:4
17	    seeds = json.loads((tmp_path / "seeds.json").read_text())
18	    assert seeds["python"] == 123
19	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_repro_cli.py:28:4
27	    )
28	    assert result.exit_code == 0
29	    data = json.loads(path.read_text())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_repro_cli.py:30:4
29	    data = json.loads(path.read_text())
30	    assert "git_commit" in data
31	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_repro_cli.py:40:4
39	    )
40	    assert result.exit_code == 0
41	    data = json.loads(path.read_text())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_repro_cli.py:42:4
41	    data = json.loads(path.read_text())
42	    assert isinstance(data, dict)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_repro_determinism.py:19:4
18	    y2 = m2(x).detach().numpy()
19	    assert np.allclose(y1, y2)
20	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/test_repro_helper.py:12:10
11	    set_reproducible(123)
12	    py1 = random.random()
13	    np1 = np.random.rand()

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/test_repro_helper.py:17:10
16	    set_reproducible(123)
17	    py2 = random.random()
18	    np2 = np.random.rand()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_repro_helper.py:21:4
20	
21	    assert py1 == py2 and np1 == np2 and torch.allclose(t1, t2)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/test_repro_seed_consistency.py:20:10
19	    set_reproducible(seed)
20	    py1 = random.random()
21	    np1 = np.random.rand()

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/test_repro_seed_consistency.py:25:10
24	    set_reproducible(seed)
25	    py2 = random.random()
26	    np2 = np.random.rand()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_repro_seed_consistency.py:29:4
28	
29	    assert py1 == py2 and np1 == np2
30	    if torch is not None:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_repro_seed_consistency.py:31:8
30	    if torch is not None:
31	        assert torch.allclose(t1, t2)  # type: ignore[arg-type]

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/test_reproducibility.py:11:11
10	    set_reproducible(123)
11	    r_py = random.random()
12	    r_np = np.random.rand()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_reproducibility.py:16:4
15	    set_reproducible(123)
16	    assert random.random() == r_py
17	    assert np.random.rand() == r_np

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/test_reproducibility.py:16:11
15	    set_reproducible(123)
16	    assert random.random() == r_py
17	    assert np.random.rand() == r_np

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_reproducibility.py:17:4
16	    assert random.random() == r_py
17	    assert np.random.rand() == r_np
18	    assert torch.rand(1).item() == r_torch

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_reproducibility.py:18:4
17	    assert np.random.rand() == r_np
18	    assert torch.rand(1).item() == r_torch

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_requirements_lock.py:15:4
14	    root = Path(__file__).resolve().parent.parent
15	    assert (root / "requirements.lock").is_file()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_resume.py:34:4
33	    )
34	    assert (out1 / "state.pt").exists()
35	    assert (ckpt_root / "last").exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_resume.py:35:4
34	    assert (out1 / "state.pt").exists()
35	    assert (ckpt_root / "last").exists()
36	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_resume.py:50:4
49	    )
50	    assert (out2 / "state.pt").exists()
51	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_resume.py:56:4
55	    info = mgr.resume_from(out2, model=fresh, optimizer=opt2, scheduler=sch2)
56	    assert info["state"] is True
57	    assert info["meta"]["epoch"] == 2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_resume.py:57:4
56	    assert info["state"] is True
57	    assert info["meta"]["epoch"] == 2
58	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_resume.py:71:4
70	    )
71	    assert "epoch-5" in epochs and "epoch-4" in epochs
72	    assert "epoch-3" not in epochs

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_resume.py:72:4
71	    assert "epoch-5" in epochs and "epoch-4" in epochs
72	    assert "epoch-3" not in epochs

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/test_run_eval_cli.py:3:0
2	import os
3	import subprocess
4	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_run_eval_cli.py:25:10
24	    env = {"PYTHONPATH": str(repo_root / "src")}
25	    out = subprocess.check_output(cmd, text=True, cwd=repo_root, env={**env, **os.environ})
26	    metrics = json.loads(out.strip().splitlines()[0])

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_run_eval_cli.py:27:4
26	    metrics = json.loads(out.strip().splitlines()[0])
27	    assert "perplexity" in metrics
28	    assert "token_accuracy" in metrics

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_run_eval_cli.py:28:4
27	    assert "perplexity" in metrics
28	    assert "token_accuracy" in metrics

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_run_functional_training_tokenizer.py:25:4
24	    run_functional_training(["hi"], [], [], tokenizer_name="gpt2", use_fast_tokenizer=False)
25	    assert called["use_fast"] is False

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_runner_doctor.py:11:8
10	    def fake_req(path, token, method="GET"):
11	        assert path.startswith("/repos/")
12	        return SAMPLE

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_runner_doctor.py:16:4
15	    out = rd.list_runners("token")
16	    assert any(r["status"] == "offline" for r in out)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_safety.py:12:4
11	    ok, _ = f.is_allowed(text)
12	    assert ok is False
13	    red = f.apply(text)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_safety.py:14:4
13	    red = f.apply(text)
14	    assert "{REDACTED}" in red or "password" not in red.lower()
15	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_safety.py:21:4
20	    out = f.mask_logits(logits, {1, 3})
21	    assert out[1] == float("-inf") and out[3] == float("-inf")
22	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_safety.py:31:4
30	    # file created in sandbox workdir
31	    assert (tmp_path / "ok.txt").exists()
32	    # environment is scrubbed (HOME not exposed)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_safety.py:33:4
32	    # environment is scrubbed (HOME not exposed)
33	    assert b"HOME" not in cp.stdout

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_search_providers.py:15:4
14	    results = registry.search("Utility helpers for codex")
15	    assert any("src/codex/utils/__init__.py" in r["path"] for r in results)
16	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_search_providers.py:20:4
19	    registry = SearchRegistry()
20	    assert all(not isinstance(p, ExternalWebSearch) for p in registry.providers)
21	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_search_providers.py:31:4
30	    provider = ExternalWebSearch()
31	    assert provider.search("python") == []

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_seeded_shuffle.py:8:4
7	    b = deterministic_shuffle(data, seed=42)
8	    assert a == b
9	    assert sorted(a) == data

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_seeded_shuffle.py:9:4
8	    assert a == b
9	    assert sorted(a) == data

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_semparser.py:9:4
8	    names = [i.name for i in pr.intents]
9	    assert "AUDIT_REPO" in names
10	    assert "FIX_PRECOMMIT" in names

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_semparser.py:10:4
9	    assert "AUDIT_REPO" in names
10	    assert "FIX_PRECOMMIT" in names
11	    assert "TEST_COVERAGE" in names

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_semparser.py:11:4
10	    assert "FIX_PRECOMMIT" in names
11	    assert "TEST_COVERAGE" in names

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_sentencepiece_adapter.py:196:8
195	        ids = adapter2.encode("hello codex")
196	        assert isinstance(ids, (list, tuple))
197	        assert "hello" in adapter2.decode(ids)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_sentencepiece_adapter.py:197:8
196	        assert isinstance(ids, (list, tuple))
197	        assert "hello" in adapter2.decode(ids)
198	    else:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_sentencepiece_adapter.py:201:8
200	        model_file = _get_model_file_from_adapter(adapter2)
201	        assert model_file is not None and model_file.endswith(".model")
202	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_sentencepiece_adapter.py:225:4
224	
225	    assert model.exists(), "Training path should have written the .model file"
226	    assert len(calls) > 0, "Trainer should have been invoked for missing model"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_sentencepiece_adapter.py:226:4
225	    assert model.exists(), "Training path should have written the .model file"
226	    assert len(calls) > 0, "Trainer should have been invoked for missing model"
227	    # Ensure adapter loaded the model into its sp instance

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_sentencepiece_adapter.py:229:4
228	    model_file = _get_model_file_from_adapter(adapter)
229	    assert model_file == str(model)
230	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_sentencepiece_adapter.py:251:4
250	
251	    assert len(calls) == 0, "Trainer should not be called when model already exists"
252	    assert _get_model_file_from_adapter(adapter) == str(model)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_sentencepiece_adapter.py:252:4
251	    assert len(calls) == 0, "Trainer should not be called when model already exists"
252	    assert _get_model_file_from_adapter(adapter) == str(model)
253	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_sentencepiece_adapter.py:317:8
316	        sidecar_path = model.with_suffix(".special_tokens.json")
317	        assert sidecar_path.exists(), "add_special_tokens should create .special_tokens.json"
318	        data = json.loads(sidecar_path.read_text(encoding="utf-8"))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_sentencepiece_adapter.py:319:8
318	        data = json.loads(sidecar_path.read_text(encoding="utf-8"))
319	        assert data.get("a") == "<a>"
320	    finally:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_sentencepiece_adapter.py:341:4
340	    sidecar = Path(str(model_prefix) + ".special_tokens.json")
341	    assert sidecar.exists()
342	    data = json.loads(sidecar.read_text(encoding="utf-8"))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_sentencepiece_adapter.py:343:4
342	    data = json.loads(sidecar.read_text(encoding="utf-8"))
343	    assert data.get("pad_token") == "<pad>"
344	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_sentencepiece_adapter.py:381:4
380	    mod = importlib.reload(importlib.import_module("codex_ml.tokenization.sentencepiece_adapter"))
381	    assert getattr(mod, "spm") is None

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/test_session_hooks.py:4:0
3	import pathlib
4	import subprocess
5	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_session_hooks.py:35:12
34	            env["PYTHONPATH"] = str(ROOT / "src")
35	            subprocess.run([runner.as_posix()], check=True, env=env)
36	            ndjson = logdir / f"{sid}.ndjson"

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_session_hooks.py:65:12
64	            env["PYTHONPATH"] = str(ROOT / "src")
65	            subprocess.run([runner.as_posix()], check=True, env=env)
66	            ndjson = logdir / f"{sid}.ndjson"

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_session_hooks.py:94:12
93	            env["PYTHONPATH"] = str(ROOT / "src")
94	            subprocess.run([runner.as_posix()], cwd=root, check=True, env=env)
95	            ndjson = root / "logs" / f"{sid}.ndjson"

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_session_hooks.py:119:12
118	            )
119	            subprocess.run([sys.executable, script.name], cwd=root, check=True, env=env)
120	            logdir = root / "logs"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_hooks_warnings.py:16:4
15	        session_hooks._safe_write_text(path, "data")
16	    assert any(rec.levelno == logging.WARNING for rec in caplog.records)
17	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_hooks_warnings.py:24:4
23	        session_hooks._safe_append_json_line(path, {"a": 1})
24	    assert any(rec.levelno == logging.WARNING for rec in caplog.records)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logger_log_adapters.py:28:4
27	
28	    assert ("S1", "user", "hello") in rows
29	    assert ("S2", "system", "session_start") in rows

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logger_log_adapters.py:29:4
28	    assert ("S1", "user", "hello") in rows
29	    assert ("S2", "system", "session_start") in rows
30	    assert ("S2", "assistant", "hi") in rows

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logger_log_adapters.py:30:4
29	    assert ("S2", "system", "session_start") in rows
30	    assert ("S2", "assistant", "hi") in rows

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logger_wal.py:12:4
11	    conn.close()
12	    assert mode.lower() == "wal"

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/test_session_logging.py:9:0
8	import sqlite3
9	import subprocess
10	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_session_logging.py:33:11
32	    cmd = [py, "-m", module] + args
33	    return subprocess.run(cmd, cwd=cwd, capture_output=True, text=True)
34	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tests/test_session_logging.py:61:14
60	            continue
61	        q = f"SELECT * FROM {t} WHERE {c_session}=?"
62	        cur.execute(q, (session_id,))

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./tests/test_session_logging.py:122:13
121	        )
122	        cp = subprocess.run(
123	            ["bash", "-lc", cmd], cwd=tmp_path, text=True, capture_output=True
124	        )
125	        assert cp.returncode == 0, cp.stderr

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_session_logging.py:122:13
121	        )
122	        cp = subprocess.run(
123	            ["bash", "-lc", cmd], cwd=tmp_path, text=True, capture_output=True
124	        )
125	        assert cp.returncode == 0, cp.stderr

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging.py:125:8
124	        )
125	        assert cp.returncode == 0, cp.stderr
126	        used = "shell"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging.py:129:4
128	    # Assert NDJSON exists and has start/end markers
129	    assert ndjson_file.exists()
130	    data = ndjson_file.read_text(encoding="utf-8").strip().splitlines()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging.py:131:4
130	    data = ndjson_file.read_text(encoding="utf-8").strip().splitlines()
131	    assert any(
132	        "session_start" in line or '"event":"start"' in line or '"start"' in line
133	        for line in data
134	    )
135	    assert any(

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging.py:135:4
134	    )
135	    assert any(
136	        "session_end" in line or '"event":"end"' in line or '"end"' in line
137	        for line in data
138	    )
139	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging.py:160:4
159	    ndjson_file = sessions_dir / f"{session_id}.ndjson"
160	    assert ndjson_file.exists()
161	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging.py:181:4
180	    roles = {r.get("role") or r.get("kind") for r in rows}
181	    assert "hello from user" in msgs
182	    assert "hello from assistant" in msgs

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging.py:182:4
181	    assert "hello from user" in msgs
182	    assert "hello from assistant" in msgs
183	    assert ("user" in roles) or ("assistant" in roles)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging.py:183:4
182	    assert "hello from assistant" in msgs
183	    assert ("user" in roles) or ("assistant" in roles)
184	    con = sqlite3.connect(str(db_path))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging.py:187:8
186	        idxs = con.execute("PRAGMA index_list('session_events')").fetchall()
187	        assert any(r[1] == "session_events_sid_ts_idx" for r in idxs)
188	    finally:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging.py:210:4
209	    ndjson_file = tmp_path / ".codex" / "sessions" / f"{session_id}.ndjson"
210	    assert ndjson_file.exists()
211	    lines = [

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging.py:217:4
216	    rows = logger_mod.fetch_messages(session_id, db_path=db_path)
217	    assert len(lines) == len(rows)
218	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging.py:253:16
252	                parsed = json.loads(out)
253	                assert isinstance(parsed, list)
254	                messages = [r.get("message") or r.get("content") for r in parsed]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging.py:260:12
259	                ]
260	            assert any("hi" in m for m in messages)
261	            assert any("hey" in m for m in messages)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging.py:261:12
260	            assert any("hi" in m for m in messages)
261	            assert any("hey" in m for m in messages)
262	            return

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging.py:293:12
292	                ]
293	            assert any("hi" in m for m in messages)
294	            assert any("hey" in m for m in messages)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging.py:294:12
293	            assert any("hi" in m for m in messages)
294	            assert any("hey" in m for m in messages)
295	            return

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b108_hardcoded_tmp_directory.html
   Location: ./tests/test_session_logging.py:301:32
300	    session_id = f"RO-{uuid.uuid4()}"
301	    sessions_dir = pathlib.Path("/tmp") / f"codex_ro_{uuid.uuid4()}"
302	    sessions_dir.mkdir(parents=True, exist_ok=True)

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./tests/test_session_logging.py:316:13
315	    try:
316	        cp = subprocess.run(
317	            ["bash", "--noprofile", "--norc", "-c", cmd],
318	            cwd="/",
319	            text=True,
320	            capture_output=True,
321	            preexec_fn=demote,
322	        )
323	        assert "logging failed" in cp.stderr.lower()

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_session_logging.py:316:13
315	    try:
316	        cp = subprocess.run(
317	            ["bash", "--noprofile", "--norc", "-c", cmd],
318	            cwd="/",
319	            text=True,
320	            capture_output=True,
321	            preexec_fn=demote,
322	        )
323	        assert "logging failed" in cp.stderr.lower()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging.py:323:8
322	        )
323	        assert "logging failed" in cp.stderr.lower()
324	    finally:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging_mirror.py:16:4
15	    roles = [m["role"] for m in msgs]
16	    assert roles == ["user", "assistant"]
17	    assert msgs[0]["message"] == "hello"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging_mirror.py:17:4
16	    assert roles == ["user", "assistant"]
17	    assert msgs[0]["message"] == "hello"
18	    assert msgs[1]["message"] == "world"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_logging_mirror.py:18:4
17	    assert msgs[0]["message"] == "hello"
18	    assert msgs[1]["message"] == "world"

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/test_session_query_cli.py:3:0
2	import sqlite3
3	import subprocess
4	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_session_query_cli.py:37:11
36	    env["PYTHONPATH"] = os.pathsep.join([str(src_dir), env.get("PYTHONPATH", "")])
37	    proc = subprocess.run(cmd, capture_output=True, text=True, env=env)
38	    assert proc.returncode == 0, proc.stderr

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_query_cli.py:38:4
37	    proc = subprocess.run(cmd, capture_output=True, text=True, env=env)
38	    assert proc.returncode == 0, proc.stderr
39	    lines = proc.stdout.strip().splitlines()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_query_cli.py:45:4
44	    ]
45	    assert lines == expected

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/test_session_query_smoke.py:5:0
4	import sqlite3
5	import subprocess
6	import sys

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_query_smoke.py:12:4
11	    mod = importlib.import_module("codex.logging.query_logs")
12	    assert hasattr(mod, "main")
13	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/test_session_query_smoke.py:47:9
46	    env["PYTHONPATH"] = os.pathsep.join([str(src_dir), env.get("PYTHONPATH", "")])
47	    cp = subprocess.run(cmd, capture_output=True, text=True, env=env)
48	    assert cp.returncode == 0, cp.stderr

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_query_smoke.py:48:4
47	    cp = subprocess.run(cmd, capture_output=True, text=True, env=env)
48	    assert cp.returncode == 0, cp.stderr
49	    data = json.loads(cp.stdout)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_session_query_smoke.py:51:4
50	    messages = [r["message"] for r in data]
51	    assert "hi" in messages and "yo" in messages

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_split_indices.py:7:4
6	    t2 = split_indices(100, val_split=0.2, test_split=0.1, seed=42)
7	    assert t1 == t2
8	    train, val, test = t1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_split_indices.py:9:4
8	    train, val, test = t1
9	    assert len(train) + len(val) + len(test) == 100
10	    assert set(train).isdisjoint(val)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_split_indices.py:10:4
9	    assert len(train) + len(val) + len(test) == 100
10	    assert set(train).isdisjoint(val)
11	    assert set(train).isdisjoint(test)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_split_indices.py:11:4
10	    assert set(train).isdisjoint(val)
11	    assert set(train).isdisjoint(test)
12	    assert set(val).isdisjoint(test)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_split_indices.py:12:4
11	    assert set(train).isdisjoint(test)
12	    assert set(val).isdisjoint(test)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_splits.py:8:4
7	    train2, val2, test2 = train_val_test_split(data, val_frac=0.2, test_frac=0.2, seed=42)
8	    assert train1 == train2
9	    assert val1 == val2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_splits.py:9:4
8	    assert train1 == train2
9	    assert val1 == val2
10	    assert test1 == test2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_splits.py:10:4
9	    assert val1 == val2
10	    assert test1 == test2
11	    assert len(train1) + len(val1) + len(test1) == len(data)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_splits.py:11:4
10	    assert test1 == test2
11	    assert len(train1) + len(val1) + len(test1) == len(data)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_sqlite_pool.py:36:8
35	        # one main thread connection + 5 worker threads
36	        assert len(sqlite_patch._CONN_POOL) == 6
37	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_sqlite_pool.py:39:8
38	        total = sqlite3.connect(str(db)).execute("SELECT COUNT(*) FROM t").fetchone()[0]
39	        assert total == 100
40	    finally:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_sqlite_sanitize.py:9:4
8	def test_sanitize_table_accepts_valid() -> None:
9	    assert _sanitize_table("good_name") == "good_name"
10	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_sqlite_wal.py:27:4
26	    rows = list(cxr.execute("SELECT COUNT(*) FROM t"))
27	    assert rows and isinstance(rows[0][0], int)
28	    t.join()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_static_code_analysis_step.py:12:4
11	    data = metrics.read_text().strip().splitlines()
12	    assert data
13	    record = json.loads(data[-1])

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_static_code_analysis_step.py:14:4
13	    record = json.loads(data[-1])
14	    assert record["name"] == "static.analysis.errors"
15	    assert isinstance(record["value"], int)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_static_code_analysis_step.py:15:4
14	    assert record["name"] == "static.analysis.errors"
15	    assert isinstance(record["value"], int)
16	    assert record["value"] >= 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_static_code_analysis_step.py:16:4
15	    assert isinstance(record["value"], int)
16	    assert record["value"] >= 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_symbolic_pipeline.py:43:4
42	    )
43	    assert summary1 == summary2
44	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_symbolic_pipeline.py:75:4
74	    rm = train_reward_model(prefs, model)
75	    assert rm.meta["accuracy"] == 1.0
76	    computed = loss_sft(model, demos)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_symbolic_pipeline.py:78:4
77	    manual = -sum(math.log(model.meta["token_probs"][t]) for t in ["a", "b"]) / 2
78	    assert math.isclose(computed, manual)
79	    assert model.meta["tokens_seen"] == 4

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_symbolic_pipeline.py:79:4
78	    assert math.isclose(computed, manual)
79	    assert model.meta["tokens_seen"] == 4
80	    assert model.meta["tokens_seen_sft"] == 2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_symbolic_pipeline.py:80:4
79	    assert model.meta["tokens_seen"] == 4
80	    assert model.meta["tokens_seen_sft"] == 2
81	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_symbolic_pipeline.py:129:4
128	    M2b = rlhf_ppo(M1b, rm, RLHFCfg())
129	    assert M2a.meta["token_probs"] == M2b.meta["token_probs"]
130	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_symbolic_pipeline.py:138:4
137	    rm2 = train_reward_model(prefs, model, RewardModelCfg(seed=0))
138	    assert rm1.meta["weights"] == rm2.meta["weights"]
139	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_symbolic_pipeline.py:150:4
149	    )
150	    assert regularizer(safe) == 0.0
151	    assert regularizer(dangerous) == pytest.approx(1.0)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_symbolic_pipeline.py:151:4
150	    assert regularizer(safe) == 0.0
151	    assert regularizer(dangerous) == pytest.approx(1.0)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenization.py:20:4
19	    ids = tok.encode(text)
20	    assert tok.decode(ids).strip() == text
21	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenization.py:25:4
24	    ids = [tok.encode(t)[0] for t in [BOS_TOKEN, EOS_TOKEN, PAD_TOKEN, UNK_TOKEN]]
25	    assert len(ids) == 4
26	    assert len(set(ids)) == 4

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenization.py:26:4
25	    assert len(ids) == 4
26	    assert len(set(ids)) == 4
27	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenization.py:35:4
34	    ids2 = tok2.encode(text)
35	    assert ids1 == ids2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer.py:12:4
11	    toks = tk.encode("Run pre-commit --all-files now.")
12	    assert isinstance(toks, list)
13	    assert len(toks) > 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer.py:13:4
12	    assert isinstance(toks, list)
13	    assert len(toks) > 0

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '<PAD>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b105_hardcoded_password_string.html
   Location: ./tests/test_tokenizer_batch_encode.py:15:25
14	        self.max_length = max_length
15	        self.pad_token = "<PAD>"
16	        self.eos_token = "<EOS>"

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '<EOS>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b105_hardcoded_password_string.html
   Location: ./tests/test_tokenizer_batch_encode.py:16:25
15	        self.pad_token = "<PAD>"
16	        self.eos_token = "<EOS>"
17	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:70:4
69	    enc = dummy_adapter.batch_encode(["a", "bb"], max_length=6, return_dict=True)
70	    assert enc["input_ids"].shape == enc["attention_mask"].shape
71	    assert enc["input_ids"].shape == (2, 6)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:71:4
70	    assert enc["input_ids"].shape == enc["attention_mask"].shape
71	    assert enc["input_ids"].shape == (2, 6)
72	    assert enc["attention_mask"].shape == (2, 6)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:72:4
71	    assert enc["input_ids"].shape == (2, 6)
72	    assert enc["attention_mask"].shape == (2, 6)
73	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:80:4
79	
80	    assert "input_ids" in enc and "attention_mask" in enc
81	    assert enc["input_ids"].shape == enc["attention_mask"].shape

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:81:4
80	    assert "input_ids" in enc and "attention_mask" in enc
81	    assert enc["input_ids"].shape == enc["attention_mask"].shape
82	    assert enc["input_ids"].shape[0] == 2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:82:4
81	    assert enc["input_ids"].shape == enc["attention_mask"].shape
82	    assert enc["input_ids"].shape[0] == 2
83	    assert enc["input_ids"].shape[1] == 8

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:83:4
82	    assert enc["input_ids"].shape[0] == 2
83	    assert enc["input_ids"].shape[1] == 8
84	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:87:4
86	    mask2_sum = int(enc["attention_mask"][1].sum())
87	    assert mask1_sum <= mask2_sum
88	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:90:4
89	    enc2 = adp.batch_encode(["1234567890"], max_length=5, return_dict=True)
90	    assert enc2["input_ids"].shape[1] == 5
91	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:97:4
96	    enc = adp.batch_encode(["one two three four five"], max_length=3, return_dict=True)
97	    assert enc["input_ids"].shape[-1] == 3
98	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:107:4
106	    enc_longest = adp.batch_encode(texts, padding="longest", return_dict=True)
107	    assert enc_longest["input_ids"].shape[-1] == max_len
108	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:116:4
115	    lengths = [len(ids) for ids in enc_no_pad["input_ids"]]
116	    assert lengths == [len(adp.tokenizer.encode(t)) for t in texts]
117	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:124:4
123	    enc_empty = dummy.batch_encode([], max_length=4, return_dict=True)
124	    assert enc_empty["input_ids"].shape[0] == 0
125	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:127:4
126	    enc_empty_str = dummy.batch_encode([""], max_length=4, return_dict=True)
127	    assert enc_empty_str["input_ids"].shape == (1, 4)
128	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:137:4
136	
137	    assert enc["input_ids"].shape == (2, 10)
138	    assert enc["attention_mask"].shape == (2, 10)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:138:4
137	    assert enc["input_ids"].shape == (2, 10)
138	    assert enc["attention_mask"].shape == (2, 10)
139	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:146:4
145	    enc = dummy.batch_encode(["no", "max", "length"], max_length=None, return_dict=True)
146	    assert enc["input_ids"].shape[1] == 8
147	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:155:4
154	    enc = dummy.batch_encode(["test text"], max_length=max_length, return_dict=True)
155	    assert enc["input_ids"].shape[1] == max_length
156	    assert enc["attention_mask"].shape[1] == max_length

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:156:4
155	    assert enc["input_ids"].shape[1] == max_length
156	    assert enc["attention_mask"].shape[1] == max_length
157	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:167:4
166	
167	    assert enc1["input_ids"].shape == enc2["input_ids"].shape
168	    assert enc1["attention_mask"].shape == enc2["attention_mask"].shape

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:168:4
167	    assert enc1["input_ids"].shape == enc2["input_ids"].shape
168	    assert enc1["attention_mask"].shape == enc2["attention_mask"].shape
169	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:177:4
176	    first, second = enc
177	    assert len(first) == len(second) == 5
178	    assert first[-1] == adp.pad_id

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:178:4
177	    assert len(first) == len(second) == 5
178	    assert first[-1] == adp.pad_id
179	    assert second[-1] != adp.pad_id

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_batch_encode.py:179:4
178	    assert first[-1] == adp.pad_id
179	    assert second[-1] != adp.pad_id
180	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_ids.py:6:4
5	    tok = HFTokenizerAdapter.load()
6	    assert isinstance(tok.pad_id, int)
7	    assert isinstance(tok.eos_id, int)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_ids.py:7:4
6	    assert isinstance(tok.pad_id, int)
7	    assert isinstance(tok.eos_id, int)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_roundtrip.py:19:4
18	    # Accept exact round-trip with potential whitespace normalization
19	    assert text == decoded_direct.strip()
20	    assert text == decoded_batch.strip()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_roundtrip.py:20:4
19	    assert text == decoded_direct.strip()
20	    assert text == decoded_batch.strip()
21	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_roundtrip.py:23:4
22	    # Properties and metadata
23	    assert tk.pad_token_id is None or isinstance(tk.pad_token_id, int)
24	    assert tk.vocab_size > 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_roundtrip.py:24:4
23	    assert tk.pad_token_id is None or isinstance(tk.pad_token_id, int)
24	    assert tk.vocab_size > 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_wrapper.py:17:4
16	    ids_dict = out_dict["input_ids"]
17	    assert all(len(seq) == 8 for seq in ids_dict)
18	    assert "attention_mask" in out_dict and all(len(m) == 8 for m in out_dict["attention_mask"])

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_wrapper.py:18:4
17	    assert all(len(seq) == 8 for seq in ids_dict)
18	    assert "attention_mask" in out_dict and all(len(m) == 8 for m in out_dict["attention_mask"])
19	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_tokenizer_wrapper.py:22:4
21	    out_list = tk.batch_encode(["hello", "this is a longer sentence"])
22	    assert all(len(ids) == 8 for ids in out_list)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_train_loop.py:80:4
79	    metrics_ndjson = artifacts / "metrics.ndjson"
80	    assert metrics_json.exists(), "metrics.json should be created"
81	    assert metrics_ndjson.exists(), "metrics.ndjson should be created"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_train_loop.py:81:4
80	    assert metrics_json.exists(), "metrics.json should be created"
81	    assert metrics_ndjson.exists(), "metrics.ndjson should be created"
82	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_train_loop.py:85:4
84	    data = json.loads(metrics_json.read_text(encoding="utf-8"))
85	    assert isinstance(data, list), "metrics.json should contain a list"
86	    assert len(data) > 0, "metrics.json should not be empty"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_train_loop.py:86:4
85	    assert isinstance(data, list), "metrics.json should contain a list"
86	    assert len(data) > 0, "metrics.json should not be empty"
87	    last_entry = data[-1]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_train_loop.py:88:4
87	    last_entry = data[-1]
88	    assert last_entry["metrics"]["accuracy"] == 1.0, "accuracy should be preserved"
89	    assert last_entry["phase"] == "eval", "phase should be preserved"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_train_loop.py:89:4
88	    assert last_entry["metrics"]["accuracy"] == 1.0, "accuracy should be preserved"
89	    assert last_entry["phase"] == "eval", "phase should be preserved"
90	    assert last_entry["epoch"] == 1, "epoch should be preserved"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_train_loop.py:90:4
89	    assert last_entry["phase"] == "eval", "phase should be preserved"
90	    assert last_entry["epoch"] == 1, "epoch should be preserved"
91	    assert last_entry["cfg_hash"] == "deadbeef", "cfg_hash should be preserved"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_train_loop.py:91:4
90	    assert last_entry["epoch"] == 1, "epoch should be preserved"
91	    assert last_entry["cfg_hash"] == "deadbeef", "cfg_hash should be preserved"
92	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_train_loop.py:147:4
146	    ts = train_loop._ts()
147	    assert isinstance(ts, str), "timestamp should be a string"
148	    assert ts.endswith("Z"), "timestamp should end with Z (UTC indicator)"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_train_loop.py:148:4
147	    assert isinstance(ts, str), "timestamp should be a string"
148	    assert ts.endswith("Z"), "timestamp should end with Z (UTC indicator)"
149	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_train_loop.py:183:20
182	                if "grad_accum" in entry.get("metrics", {}):
183	                    assert entry["metrics"]["grad_accum"] == 2
184	                    found_grad_accum = True

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_train_loop.py:190:16
189	                ndjson_file = tmp_path / "metrics.ndjson"
190	                assert ndjson_file.exists(), "NDJSON metrics file should be created"
191	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_train_loop.py:205:4
204	    result = train_loop.demo_epoch(epoch=0)
205	    assert isinstance(result, dict), "demo_epoch should return a dictionary"
206	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_train_loop.py:212:12
211	        for key, value in result.items():
212	            assert isinstance(key, str), f"Metric key {key} should be string"
213	            # Values should be JSON-serializable

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_training_arguments_flags.py:10:4
9	    )
10	    assert args.fp16 is True
11	    assert args.gradient_accumulation_steps == 3

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_training_arguments_flags.py:11:4
10	    assert args.fp16 is True
11	    assert args.gradient_accumulation_steps == 3

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_training_callbacks.py:8:4
7	    es.mode = "min"
8	    assert es.step(1.0) is False
9	    assert es.step(1.0) is True

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_training_callbacks.py:9:4
8	    assert es.step(1.0) is False
9	    assert es.step(1.0) is True
10	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_training_callbacks.py:18:4
17	    es.step(0.9)  # improvement resets counter
18	    assert es.step(1.0) is False  # bad=1
19	    assert es.step(1.0) is True   # bad=2 -> stop

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_training_callbacks.py:19:4
18	    assert es.step(1.0) is False  # bad=1
19	    assert es.step(1.0) is True   # bad=2 -> stop
20	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_training_callbacks.py:26:4
25	    es.step(1.0)
26	    assert es.step(0.6) is True  # improvement < min_delta -> treated as no progress
27	# END: CODEX_TEST_TRAINING_CALLBACKS

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_trainloop_grad_accum.py:6:4
5	    metrics = demo_epoch(0, grad_accum=4)
6	    assert metrics["grad_accum"] == 4

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_utils_training_callbacks.py:7:4
6	    es.mode = "min"
7	    assert es.step(1.0) is False
8	    assert es.step(1.0) is True

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_utils_training_callbacks.py:8:4
7	    assert es.step(1.0) is False
8	    assert es.step(1.0) is True
9	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_utils_training_callbacks.py:17:4
16	    es.step(0.9)
17	    assert es.step(1.0) is False
18	    assert es.step(1.0) is True

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_utils_training_callbacks.py:18:4
17	    assert es.step(1.0) is False
18	    assert es.step(1.0) is True
19	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/test_utils_training_callbacks.py:25:4
24	    es.step(1.0)
25	    assert es.step(0.6) is True

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_adapter.py:8:4
7	    ids = tok.encode(text)
8	    assert isinstance(ids, list)
9	    decoded = tok.decode(ids)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_adapter.py:10:4
9	    decoded = tok.decode(ids)
10	    assert isinstance(decoded, str)
11	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_adapter.py:17:4
16	    ids = tok.encode(text)
17	    assert isinstance(ids, list)
18	    decoded = tok.decode(ids)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_adapter.py:19:4
18	    decoded = tok.decode(ids)
19	    assert isinstance(decoded, str)

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/tokenization/test_cli_inspect_export.py:1:0
1	import subprocess
2	
3	from tokenization.train_tokenizer import TrainTokenizerConfig, train

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./tests/tokenization/test_cli_inspect_export.py:18:10
17	    out = train(cfg)
18	    res = subprocess.run(
19	        ["python", "-m", "tokenization.cli", "inspect", str(out)],
20	        capture_output=True,
21	        text=True,
22	        check=True,
23	    )
24	    assert "vocab_size" in res.stdout

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/tokenization/test_cli_inspect_export.py:18:10
17	    out = train(cfg)
18	    res = subprocess.run(
19	        ["python", "-m", "tokenization.cli", "inspect", str(out)],
20	        capture_output=True,
21	        text=True,
22	        check=True,
23	    )
24	    assert "vocab_size" in res.stdout

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_cli_inspect_export.py:24:4
23	    )
24	    assert "vocab_size" in res.stdout
25	    export_dir = tmp_path / "export"

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./tests/tokenization/test_cli_inspect_export.py:26:4
25	    export_dir = tmp_path / "export"
26	    subprocess.run(
27	        ["python", "-m", "tokenization.cli", "export", str(out), str(export_dir)],
28	        check=True,
29	    )
30	    assert (export_dir / "tokenizer.json").exists()

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tests/tokenization/test_cli_inspect_export.py:26:4
25	    export_dir = tmp_path / "export"
26	    subprocess.run(
27	        ["python", "-m", "tokenization.cli", "export", str(out), str(export_dir)],
28	        check=True,
29	    )
30	    assert (export_dir / "tokenizer.json").exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_cli_inspect_export.py:30:4
29	    )
30	    assert (export_dir / "tokenizer.json").exists()
31	    assert (export_dir / "README.md").exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_cli_inspect_export.py:31:4
30	    assert (export_dir / "tokenizer.json").exists()
31	    assert (export_dir / "README.md").exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_encode_decode_roundtrip.py:26:4
25	    ids2 = tk.encode("hello world")
26	    assert ids1 == ids2
27	    assert len(ids1) == 5

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_encode_decode_roundtrip.py:27:4
26	    assert ids1 == ids2
27	    assert len(ids1) == 5
28	    text = tk.decode(ids1, skip_special_tokens=False)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_encode_decode_roundtrip.py:29:4
28	    text = tk.decode(ids1, skip_special_tokens=False)
29	    assert "hello" in text

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_load_tokenizer_use_fast.py:43:4
42	    tok_fast = load_tokenizer("gpt2", use_fast=True)
43	    assert getattr(tok_fast.tokenizer, "is_fast", False)
44	    tok_slow = load_tokenizer("gpt2", use_fast=False)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_load_tokenizer_use_fast.py:45:4
44	    tok_slow = load_tokenizer("gpt2", use_fast=False)
45	    assert not getattr(tok_slow.tokenizer, "is_fast", False)
46	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_load_tokenizer_use_fast.py:55:4
54	    adapter = load_tokenizer(path=str(model))
55	    assert isinstance(adapter, SentencePieceAdapter)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_roundtrip_basic.py:30:4
29	    ids = tk.encode("hello world")
30	    assert len(ids) == 4
31	    assert tk.decode(ids).startswith("hello")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_roundtrip_basic.py:31:4
30	    assert len(ids) == 4
31	    assert tk.decode(ids).startswith("hello")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_sentencepiece_adapter.py:13:4
12	    mod = importlib.import_module("codex_ml.tokenization.sentencepiece_adapter")
13	    assert getattr(mod, "spm") is None
14	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_sentencepiece_adapter.py:47:4
46	    text = adapter.decode(ids)
47	    assert ids and text == "ok"
48	    adapter.assert_vocab_size(2)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_sentencepiece_adapter.py:52:4
51	    sidecar = json.loads((tmp_path / "toy.special_tokens.json").read_text(encoding="utf-8"))
52	    assert sidecar["pad"] == "<pad>"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_sentencepiece_adapter_edges.py:20:4
19	        pytest.skip("Missing spm_tiny.model; run tools/gen_tiny_spm.py to create artifacts.")
20	    assert model.exists(), "Missing spm_tiny.model; run tools/gen_tiny_spm.py to create artifacts."
21	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_sentencepiece_adapter_edges.py:24:4
23	    ids = tok.encode("hello world", padding="max_length", truncation="only_first", max_length=8)
24	    assert len(ids) == 8  # noqa: PLR2004,S101
25	    text = tok.decode(ids)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_sentencepiece_adapter_edges.py:26:4
25	    text = tok.decode(ids)
26	    assert isinstance(text, str)  # noqa: S101

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_sentencepiece_adapter_prefix.py:11:4
10	    module = importlib.util.module_from_spec(spec)
11	    assert spec and spec.loader
12	    import sys

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_sentencepiece_adapter_prefix.py:27:4
26	    sp = SentencePieceAdapter(model)
27	    assert sp.model_prefix == model.with_suffix("")
28	    new_prefix = tmp_path / "new"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_sentencepiece_adapter_prefix.py:30:4
29	    sp.model_prefix = new_prefix
30	    assert sp.model_prefix == new_prefix
31	    assert sp.model_path == new_prefix.with_suffix(".model")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_sentencepiece_adapter_prefix.py:31:4
30	    assert sp.model_prefix == new_prefix
31	    assert sp.model_path == new_prefix.with_suffix(".model")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_tokenizer_cli.py:32:4
31	
32	    assert (tmp_path / "tok.model").exists()
33	    assert (tmp_path / "tok.tokenizer.json").exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_tokenizer_cli.py:33:4
32	    assert (tmp_path / "tok.model").exists()
33	    assert (tmp_path / "tok.tokenizer.json").exists()
34	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_tokenizer_cli.py:45:12
44	        def encode(self, text):
45	            assert text == "hi"
46	            return [1, 2]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_tokenizer_cli.py:52:4
51	    out = capsys.readouterr().out.strip()
52	    assert out == "1 2"
53	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_tokenizer_cli.py:66:4
65	    cli.main(["stats", "m.model"])
66	    assert capsys.readouterr().out.strip() == "5"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_train_tokenizer_smoke.py:20:4
19	    out = train(cfg)
20	    assert (out / "tokenizer.json").exists()
21	    assert (out / "manifest.json").exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_train_tokenizer_smoke.py:21:4
20	    assert (out / "tokenizer.json").exists()
21	    assert (out / "manifest.json").exists()
22	    assert (out / "spm.model").exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_train_tokenizer_smoke.py:22:4
21	    assert (out / "manifest.json").exists()
22	    assert (out / "spm.model").exists()
23	    assert (out / "spm.vocab").exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_train_tokenizer_smoke.py:23:4
22	    assert (out / "spm.model").exists()
23	    assert (out / "spm.vocab").exists()
24	    tok = Tokenizer.from_file(str(out / "tokenizer.json"))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_train_tokenizer_smoke.py:25:4
24	    tok = Tokenizer.from_file(str(out / "tokenizer.json"))
25	    assert tok.get_vocab_size() <= cfg.vocab_size + 4
26	    manifest = json.loads((out / "manifest.json").read_text())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tokenization/test_train_tokenizer_smoke.py:27:4
26	    manifest = json.loads((out / "manifest.json").read_text())
27	    assert manifest.get("hash")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tracking/test_composite_writer_degrades.py:31:4
30	    writer.close()
31	    assert json.loads((tmp_path / "metrics.ndjson").read_text().strip())["metric"] == "acc"

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tests/tracking/test_git_tag.py:4:0
3	import importlib
4	import subprocess
5	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tracking/test_git_tag.py:10:4
9	    monkeypatch.setattr(subprocess, "check_output", lambda *a, **k: "deadbeef\n")
10	    assert mod.current_commit() == "deadbeef"
11	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tracking/test_git_tag.py:18:4
17	    monkeypatch.setattr(subprocess, "check_output", boom)
18	    assert mod.current_commit() is None

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tracking/test_git_tag_decode.py:8:4
7	    monkeypatch.setattr(locale, "getpreferredencoding", lambda _=False: "ascii")
8	    assert _decode(b"\xff") == "ÿ"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tracking/test_init_experiment_tags.py:29:4
28	    ctx = init_experiment(cfg)
29	    assert ctx.tags["model"] == "m"
30	    assert ctx.experiment_name == "exp"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tracking/test_init_experiment_tags.py:30:4
29	    assert ctx.tags["model"] == "m"
30	    assert ctx.experiment_name == "exp"
31	    ctx.finalize()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tracking/test_ndjson_writer.py:29:4
28	    row = json.loads(data[0])
29	    assert row["metric"] == "loss"
30	    assert row["value"] == 1.23

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tracking/test_ndjson_writer.py:30:4
29	    assert row["metric"] == "loss"
30	    assert row["value"] == 1.23
31	    assert row["schema"] == "v1"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/tracking/test_ndjson_writer.py:31:4
30	    assert row["value"] == 1.23
31	    assert row["schema"] == "v1"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_base_config.py:14:4
13	    )
14	    assert cfg.output_dir == str(tmp_path)
15	    assert cfg.gradient_accumulation_steps == 1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_base_config.py:15:4
14	    assert cfg.output_dir == str(tmp_path)
15	    assert cfg.gradient_accumulation_steps == 1
16	    assert cfg.per_device_eval_batch_size == 8

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_base_config.py:16:4
15	    assert cfg.gradient_accumulation_steps == 1
16	    assert cfg.per_device_eval_batch_size == 8
17	    assert cfg.evaluation_strategy == IntervalStrategy.STEPS

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_base_config.py:17:4
16	    assert cfg.per_device_eval_batch_size == 8
17	    assert cfg.evaluation_strategy == IntervalStrategy.STEPS

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_callbacks.py:10:4
9	    es.mode = "min"
10	    assert es.step(1.0) is False
11	    assert es.step(0.8) is False  # improvement resets

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_callbacks.py:11:4
10	    assert es.step(1.0) is False
11	    assert es.step(0.8) is False  # improvement resets
12	    assert es.step(0.85) is False  # plateau count=1

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_callbacks.py:12:4
11	    assert es.step(0.8) is False  # improvement resets
12	    assert es.step(0.85) is False  # plateau count=1
13	    stop = es.step(0.9)  # plateau count=2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_callbacks.py:14:4
13	    stop = es.step(0.9)  # plateau count=2
14	    assert stop is True

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_checkpoint_manager_basic.py:25:4
24	    ckpts = list(tmp_path.glob("step-*.pt"))
25	    assert len(ckpts) == 1
26	    assert ckpts[0].name == "step-4.pt"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_checkpoint_manager_basic.py:26:4
25	    assert len(ckpts) == 1
26	    assert ckpts[0].name == "step-4.pt"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_checkpoint_manager_callback.py:26:4
25	    ckpts = sorted(p.name for p in tmp_path.glob("step-*.pt"))
26	    assert ckpts == ["step-2.pt", "step-3.pt"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_checkpoint_resume.py:57:4
56	    ckpt = ckpt_dir / "step2.pt"
57	    assert ckpt.exists()
58	    cfg2 = TrainCfg(

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_checkpoint_resume.py:67:4
66	    result = run_custom_trainer(model, tok, train_ds, val_ds, cfg2)
67	    assert result["global_step"] == 4
68	    for k, v in base_state.items():

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_checkpoint_resume.py:69:8
68	    for k, v in base_state.items():
69	        assert torch.allclose(model.state_dict()[k], v)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_config_loading.py:42:4
41	    cfg: DictConfig = load_training_cfg(allow_fallback=True)
42	    assert "training" in cfg
43	    expected_lr = 0.002 if with_file else 0.001

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_config_loading.py:44:4
43	    expected_lr = 0.002 if with_file else 0.001
44	    assert pytest.approx(cfg.training.lr) == expected_lr
45	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_config_loading.py:55:4
54	        cfg = compose(config_name="base", overrides=["training.batch_size=8"])
55	    assert cfg.training.lr == 0.003
56	    assert cfg.training.batch_size == 8

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_config_loading.py:56:4
55	    assert cfg.training.lr == 0.003
56	    assert cfg.training.batch_size == 8
57	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_config_loading.py:74:8
73	        cfg = compose(config_name="base")
74	        assert "training" in cfg
75	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_config_loading.py:83:4
82	    )
83	    assert cfg.training.batch_size == 2
84	    assert isinstance(cfg.training.batch_size, int)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_config_loading.py:84:4
83	    assert cfg.training.batch_size == 2
84	    assert isinstance(cfg.training.batch_size, int)
85	    assert cfg.training.lr == 0.5

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_config_loading.py:85:4
84	    assert isinstance(cfg.training.batch_size, int)
85	    assert cfg.training.lr == 0.5
86	    assert isinstance(cfg.training.lr, float)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_config_loading.py:86:4
85	    assert cfg.training.lr == 0.5
86	    assert isinstance(cfg.training.lr, float)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_custom_loop_overfit.py:22:4
21	    result = run_custom_trainer(model, tok, train_ds, val_ds, cfg)
22	    assert result["history"][0] > result["history"][-1]

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '</s>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b105_hardcoded_password_string.html
   Location: ./tests/training/test_engine_hf_trainer_lora_cfg.py:14:24
13	            pad_token = None
14	            eos_token = "</s>"
15	            pad_token_id = 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_engine_hf_trainer_lora_cfg.py:56:4
55	
56	    assert captured["cfg"] == {"r": 2, "lora_alpha": 32, "lora_dropout": 0.1}

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_functional_training_main.py:24:4
23	    ft.main(["--output-dir", str(tmp_path), "--engine", "hf"])
24	    assert called["texts"] == ["hi"]
25	    assert called["output_dir"] == tmp_path

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_functional_training_main.py:25:4
24	    assert called["texts"] == ["hi"]
25	    assert called["output_dir"] == tmp_path
26	    assert called["seed"] == 123

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_functional_training_main.py:26:4
25	    assert called["output_dir"] == tmp_path
26	    assert called["seed"] == 123
27	    # Ensure hydra_cfg is provided for downstream compatibility

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_functional_training_main.py:28:4
27	    # Ensure hydra_cfg is provided for downstream compatibility
28	    assert isinstance(called.get("hydra_cfg"), dict)
29	    assert called["hydra_cfg"].get("seed") == 123

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_functional_training_main.py:29:4
28	    assert isinstance(called.get("hydra_cfg"), dict)
29	    assert called["hydra_cfg"].get("seed") == 123
30	

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '</s>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b105_hardcoded_password_string.html
   Location: ./tests/training/test_functional_training_main.py:40:20
39	        pad_token = None
40	        eos_token = "</s>"
41	        pad_token_id = 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_functional_training_main.py:45:12
44	        def __call__(self, txts, padding=True, return_tensors="pt"):
45	            assert self.pad_token is not None
46	            import torch

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_functional_training_main.py:101:4
100	    ft.main(["--output-dir", str(tmp_path), "--engine", "custom"])
101	    assert "labels" in captured["columns"]
102	    assert captured["input_ids"].tolist() == [5, 6, 0]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_functional_training_main.py:102:4
101	    assert "labels" in captured["columns"]
102	    assert captured["input_ids"].tolist() == [5, 6, 0]
103	    assert captured["labels"].tolist() == [5, 6, -100]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_functional_training_main.py:103:4
102	    assert captured["input_ids"].tolist() == [5, 6, 0]
103	    assert captured["labels"].tolist() == [5, 6, -100]
104	    assert captured["val_labels"].tolist() == [5, 6, -100]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_functional_training_main.py:104:4
103	    assert captured["labels"].tolist() == [5, 6, -100]
104	    assert captured["val_labels"].tolist() == [5, 6, -100]
105	    assert captured["grad_accum"] == 3

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_functional_training_main.py:105:4
104	    assert captured["val_labels"].tolist() == [5, 6, -100]
105	    assert captured["grad_accum"] == 3
106	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_functional_training_main.py:121:4
120	    ft.main(["--output-dir", str(tmp_path), "--engine", "hf"])
121	    assert called["lora_r"] == 8
122	    assert called["lora_alpha"] == 32

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_functional_training_main.py:122:4
121	    assert called["lora_r"] == 8
122	    assert called["lora_alpha"] == 32
123	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_functional_training_main.py:149:4
148	    )
149	    assert called["lora_r"] == 4
150	    assert called["lora_alpha"] == 32

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_functional_training_main.py:150:4
149	    assert called["lora_r"] == 4
150	    assert called["lora_alpha"] == 32
151	    assert called["lora_dropout"] == 0.2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_functional_training_main.py:151:4
150	    assert called["lora_alpha"] == 32
151	    assert called["lora_dropout"] == 0.2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_lora_optional.py:42:4
41	    trainable = [n for n, p in model.named_parameters() if p.requires_grad]
42	    assert any("lora" in n for n in trainable)
43	    assert any("lora" not in n and not p.requires_grad for n, p in model.named_parameters())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_lora_optional.py:43:4
42	    assert any("lora" in n for n in trainable)
43	    assert any("lora" not in n and not p.requires_grad for n, p in model.named_parameters())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_overfit_smoke.py:19:4
18	    final = loss_fn(model(x), y).item()
19	    assert final < init

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_split_determinism.py:9:4
8	    t3, v3 = split_texts(texts, seed=321)
9	    assert t1 == t2 and v1 == v2
10	    assert (t1, v1) != (t3, v3)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/training/test_split_determinism.py:10:4
9	    assert t1 == t2 and v1 == v2
10	    assert (t1, v1) != (t3, v3)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '</s>'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b105_hardcoded_password_string.html
   Location: ./tests/training/test_strict_determinism.py:60:20
59	        pad_token = None
60	        eos_token = "</s>"
61	        pad_token_id = 0

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/utils/test_checkpoint_rng.py:15:8
14	    state = dump_rng_state()
15	    a = random.random()
16	    random.seed(456)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/utils/test_checkpoint_rng.py:18:8
17	    load_rng_state(state)
18	    b = random.random()
19	    assert a == b

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/utils/test_checkpoint_rng.py:19:4
18	    b = random.random()
19	    assert a == b
20	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/utils/test_checkpoint_rng.py:27:4
26	    best = json.loads((tmp_path / "best.json").read_text())["items"]
27	    assert len(best) == 2
28	    losses = [item["metrics"]["val_loss"] for item in best]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/utils/test_checkpoint_rng.py:29:4
28	    losses = [item["metrics"]["val_loss"] for item in best]
29	    assert losses == sorted(losses)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/utils/test_checkpointing.py:11:4
10	    seeds = mod.set_seed(42, tmp_path)
11	    assert seeds["python"] == 42
12	    assert (tmp_path / "seeds.json").exists()

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/utils/test_checkpointing.py:12:4
11	    assert seeds["python"] == 42
12	    assert (tmp_path / "seeds.json").exists()
13	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/utils/test_checkpointing_core.py:18:13
17	    state = dump_rng_state()
18	    py_val = random.random()
19	    random.random()

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/utils/test_checkpointing_core.py:19:4
18	    py_val = random.random()
19	    random.random()
20	    load_rng_state(state)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/utils/test_checkpointing_core.py:21:4
20	    load_rng_state(state)
21	    assert random.random() == py_val
22	

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./tests/utils/test_checkpointing_core.py:21:11
20	    load_rng_state(state)
21	    assert random.random() == py_val
22	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/utils/test_checkpointing_core.py:28:4
27	    load_rng_state(state)
28	    assert np.random.rand() == np_val
29	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/utils/test_checkpointing_core.py:35:4
34	    load_rng_state(state)
35	    assert torch.rand(1).item() == t_val
36	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/utils/test_checkpointing_core.py:45:4
44	    remaining = {p.name for p in tmp_path.glob("epoch-*")}
45	    assert remaining == {"epoch-2", "epoch-3"}
46	    best = json.loads((tmp_path / "best.json").read_text())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/utils/test_checkpointing_core.py:47:4
46	    best = json.loads((tmp_path / "best.json").read_text())
47	    assert best["items"][0]["epoch"] == 2

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/utils/test_error_log.py:14:4
13	    data = (tmp_path / "err.ndjson").read_text(encoding="utf-8").strip()
14	    assert "\"s\"" in data
15	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/utils/test_error_log.py:29:4
28	    rotated = list(tmp_path.glob("log.txt.*"))
29	    assert rotated and log.read_text(encoding="utf-8").count("x") == 5

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/utils/test_modeling.py:30:4
29	    model, _ = mod.load_model_and_tokenizer("m", lora={"r": 4})
30	    assert model is not None
31	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tests/utils/test_modeling.py:51:4
50	    model, tok = mod.load_model_and_tokenizer("model", dtype="fp16", device_map="cpu")
51	    assert isinstance(model, Model) and isinstance(tok, Tok)

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/apply_ci_precommit.py:22:0
21	import json
22	import subprocess
23	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/apply_ci_precommit.py:302:20
301	            try:
302	                p = subprocess.run(cmd, capture_output=True, text=True)
303	                fh.write(p.stdout + p.stderr + f"\n(exit={p.returncode})\n")

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/apply_container_api.py:28:0
27	import os
28	import subprocess
29	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/apply_container_api.py:406:20
405	            try:
406	                p = subprocess.run(cmd, capture_output=True, text=True)
407	                fh.write(p.stdout + p.stderr + f"\n(exit={p.returncode})\n")

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./tools/apply_container_api.py:418:8
417	            fh.write("``\n")
418	        subprocess.run(
419	            ["bash", "-lc", "docker compose down -v"], capture_output=True, text=True
420	        )
421	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/apply_container_api.py:418:8
417	            fh.write("``\n")
418	        subprocess.run(
419	            ["bash", "-lc", "docker compose down -v"], capture_output=True, text=True
420	        )
421	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/apply_data_loaders.py:7:0
6	import json
7	import subprocess
8	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/apply_data_loaders.py:102:16
101	        try:
102	            p = subprocess.run(cmd, capture_output=True, text=True)
103	            fh.write(p.stdout + p.stderr + f"\n(exit={p.returncode})\n")

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/apply_docs.py:23:0
22	import json
23	import subprocess
24	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/apply_docs.py:342:8
341	def _run(cmd: list[str]) -> tuple[int, str]:
342	    p = subprocess.run(cmd, capture_output=True, text=True)
343	    return p.returncode, p.stdout + p.stderr

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/apply_hydra_scaffold.py:18:0
17	import json
18	import subprocess
19	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/apply_hydra_scaffold.py:251:16
250	        try:
251	            p = subprocess.run(cmd, capture_output=True, text=True, cwd=str(REPO))
252	            append(RESULTS, p.stdout + p.stderr + f"\n(exit={p.returncode})\n")

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/apply_interfaces.py:25:0
24	import json
25	import subprocess
26	import sys

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: '# BEGIN: CODEX_IFACE_TOKENIZER'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b105_hardcoded_password_string.html
   Location: ./tools/apply_interfaces.py:79:10
78	# ---------------- Interfaces ----------------
79	S_TOKEN = "# BEGIN: CODEX_IFACE_TOKENIZER"
80	TOKENIZER = f"""{S_TOKEN}

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/apply_interfaces.py:449:20
448	            try:
449	                p = subprocess.run(cmd, capture_output=True, text=True)
450	                fh.write(p.stdout + p.stderr + f"\n(exit={p.returncode})\n")

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/apply_ml_metrics.py:25:0
24	import re
25	import subprocess
26	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/apply_ml_metrics.py:394:20
393	            try:
394	                p = subprocess.run(cmd, capture_output=True, text=True)
395	                fh.write(p.stdout + p.stderr)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tools/apply_mlflow_tracking.py:288:8
287	            np.random.seed(seed)  # type: ignore
288	        except Exception:  # pragma: no cover
289	            pass
290	    return {"python": seed, "numpy": seed if np is not None else None}

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/apply_patch_safely.py:4:0
3	import shutil
4	import subprocess
5	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/apply_patch_safely.py:11:11
10	def sh(cmd, check=True, capture=False, input_bytes=None):
11	    proc = subprocess.run(cmd, check=False, capture_output=capture, input=input_bytes)
12	    if check and proc.returncode != 0:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tools/apply_patch_safely.py:68:4
67	        print("----- end head -----")
68	    except Exception:
69	        pass
70	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/apply_pyproject_packaging.py:20:0
19	import shutil
20	import subprocess
21	import sys

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./tools/apply_pyproject_packaging.py:80:14
79	    try:
80	        top = subprocess.check_output(
81	            ["git", "rev-parse", "--show-toplevel"], cwd=ROOT, text=True
82	        ).strip()
83	        status = subprocess.check_output(

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/apply_pyproject_packaging.py:80:14
79	    try:
80	        top = subprocess.check_output(
81	            ["git", "rev-parse", "--show-toplevel"], cwd=ROOT, text=True
82	        ).strip()
83	        status = subprocess.check_output(

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./tools/apply_pyproject_packaging.py:83:17
82	        ).strip()
83	        status = subprocess.check_output(
84	            ["git", "status", "--porcelain"], cwd=ROOT, text=True
85	        )
86	        return Path(top), status

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/apply_pyproject_packaging.py:83:17
82	        ).strip()
83	        status = subprocess.check_output(
84	            ["git", "status", "--porcelain"], cwd=ROOT, text=True
85	        )
86	        return Path(top), status

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/apply_safety.py:8:0
7	
8	import subprocess
9	from datetime import datetime

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/apply_safety.py:75:8
74	    append(RESULTS, f"\n## $ {' '.join(cmd)}\n```")
75	    p = subprocess.run(cmd, capture_output=True, text=True)
76	    append(RESULTS, p.stdout + p.stderr + f"\n(exit={p.returncode})\n```")

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/apply_stack_polish.py:11:0
10	import os
11	import subprocess
12	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/apply_stack_polish.py:658:20
657	            try:
658	                p = subprocess.run(cmd, capture_output=True, text=True, cwd=str(REPO))
659	                fh.write(p.stdout + p.stderr + f"\n(exit={p.returncode})\n")

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/apply_stack_polish.py:682:20
681	            try:
682	                p = subprocess.run(cmd, capture_output=True, text=True, cwd=str(REPO))
683	                fh.write(p.stdout + p.stderr + f"\n(exit={p.returncode})\n")

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/audit_runner.py:11:0
10	import shutil
11	import subprocess
12	import sys

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./tools/audit_runner.py:18:11
17	def run_external_cli(prompt_file: str) -> int:
18	    return subprocess.call(["chatgpt-codex", "--prompt-file", prompt_file])
19	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/audit_runner.py:18:11
17	def run_external_cli(prompt_file: str) -> int:
18	    return subprocess.call(["chatgpt-codex", "--prompt-file", prompt_file])
19	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/audit_runner.py:24:15
23	    if script.exists():
24	        return subprocess.call([sys.executable, str(script), "--prompt-file", prompt_file])
25	    pf = pathlib.Path(prompt_file)

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./tools/auto_analyze_errors.py:73:12
72	                    continue
73	            except Exception:
74	                continue
75	        message = entry.get("error")

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./tools/codex_agents_workflow.py:25:4
24	ROOT = Path(
25	    subprocess.run(
26	        ["git", "rev-parse", "--show-toplevel"],
27	        check=True,
28	        capture_output=True,
29	        text=True,
30	    ).stdout.strip()
31	)  # nosec B603,B607

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_agents_workflow.py:25:4
24	ROOT = Path(
25	    subprocess.run(
26	        ["git", "rev-parse", "--show-toplevel"],
27	        check=True,
28	        capture_output=True,
29	        text=True,
30	    ).stdout.strip()
31	)  # nosec B603,B607

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_agents_workflow.py:55:10
54	def git_clean_or_die():
55	    out = subprocess.run(
56	        ["git", "status", "--porcelain"],
57	        check=True,
58	        capture_output=True,
59	        text=True,
60	    ).stdout  # nosec B603,B607
61	    if out.strip():

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/codex_apply_modeling_monitoring_api.py:20:0
19	import json
20	import subprocess
21	import sys

--------------------------------------------------
>> Issue: [B324:hashlib] Use of weak SHA1 hash for security. Consider usedforsecurity=False
   Severity: High   Confidence: High
   CWE: CWE-327 (https://cwe.mitre.org/data/definitions/327.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b324_hashlib.html
   Location: ./tools/codex_apply_modeling_monitoring_api.py:96:53
95	            p.parent.mkdir(parents=True, exist_ok=True)
96	            testfile = p.parent / (".codex.touch." + hashlib.sha1(str(p).encode()).hexdigest()[:8])
97	            testfile.write_text("ok", encoding="utf-8")

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_apply_modeling_monitoring_api.py:580:20
579	            try:
580	                p = subprocess.run(cmd, cwd=str(REPO), capture_output=True, text=True)
581	                fh.write(p.stdout + p.stderr + f"\n(exit={p.returncode})\n")

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/codex_coverage_booster.py:415:8
414	    if args.apply:
415	        import subprocess
416	        cmd = ["pytest", "-q", "--cov=src/codex_ml", "--cov-report=term-missing:skip-covered", "--cov-report=xml"]

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_coverage_booster.py:419:19
418	        try:
419	            code = subprocess.call(cmd)
420	            print("[pytest-exit]", code)

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/codex_exec.py:13:0
12	import re
13	import subprocess
14	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_exec.py:30:15
29	    try:
30	        return subprocess.run(cmd, cwd=ROOT, check=True, text=True, capture_output=True)
31	    except subprocess.CalledProcessError as e:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tools/codex_exec.py:85:4
84	        sh(["pre-commit", "run", "-a"], "Phase 6: pre-commit run -a")
85	    except Exception:
86	        pass
87	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/codex_execute_audit.py:9:0
8	import re
9	import subprocess
10	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_execute_audit.py:241:14
240	            return
241	        out = subprocess.run(
242	            [sys.executable, "-m", "pip", "freeze"], capture_output=True, text=True, check=False
243	        )
244	        pkgs = "\n".join(sorted([ln.strip() for ln in out.stdout.splitlines() if ln.strip()]))

--------------------------------------------------
>> Issue: [B103:set_bad_file_permissions] Chmod setting a permissive mask 0o755 on file (script).
   Severity: Medium   Confidence: High
   CWE: CWE-732 (https://cwe.mitre.org/data/definitions/732.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b103_set_bad_file_permissions.html
   Location: ./tools/codex_execute_audit.py:278:8
277	        )
278	        os.chmod(script, 0o755)
279	        append_changelog(

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/codex_import_normalizer.py:23:0
22	import shutil
23	import subprocess
24	import sys

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tools/codex_import_normalizer.py:102:8
101	            )
102	        except Exception:
103	            pass
104	    INVENTORY_JSON.write_text(json.dumps(items, indent=2), encoding="utf-8")

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_import_normalizer.py:190:8
189	def run_cmd(cmd: List[str]) -> Tuple[int, str]:
190	    p = subprocess.run(cmd, capture_output=True, text=True)
191	    out = (p.stdout or "") + (p.stderr or "")

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/codex_ingestion_workflow.py:12:0
11	import re
12	import subprocess
13	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_ingestion_workflow.py:86:8
85	def run(cmd: list[str]) -> tuple[int, str, str]:
86	    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
87	    out, err = p.communicate()

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_logging_workflow.py:117:15
116	    try:
117	        proc = subprocess.run(
118	            cmd, capture_output=True, text=True, cwd=REPO_ROOT, check=True
119	        )  # nosec B603,B607
120	        return proc.returncode, proc.stdout, proc.stderr

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/codex_maintenance.py:15:0
14	
15	import subprocess
16	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_maintenance.py:45:20
44	    try:
45	        completed = subprocess.run(cmd, cwd=ROOT)
46	        return completed.returncode

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_maintenance.py:63:20
62	    try:
63	        completed = subprocess.run(
64	            [sys.executable, "tools/auto_analyze_errors.py", "--unanswered-only"],
65	            cwd=ROOT,
66	            capture_output=True,
67	            text=True,
68	        )
69	        results.append(("auto_analyze_errors", completed.returncode))

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/codex_make_smoke_tests.py:10:0
9	import json
10	import subprocess
11	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_make_smoke_tests.py:221:20
220	            try:
221	                p = subprocess.run(cmd, cwd=str(ROOT), capture_output=True, text=True)
222	                fh.write((p.stdout or "") + (p.stderr or "") + f"\n(exit={p.returncode})\n")

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/codex_patch_exec.py:12:0
11	import json
12	import subprocess
13	import textwrap

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_patch_exec.py:252:20
251	            try:
252	                p = subprocess.run(cmd, capture_output=True, text=True, cwd=str(REPO))
253	                out.write(p.stdout + p.stderr + f"\n(exit={p.returncode})\n")

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./tools/codex_patch_session_logging.py:28:4
27	REPO_ROOT = (
28	    subprocess.run(
29	        ["git", "rev-parse", "--show-toplevel"],
30	        stdout=subprocess.PIPE,
31	        stderr=subprocess.DEVNULL,
32	        text=True,
33	        check=True,
34	    ).stdout.strip()
35	    or os.getcwd()

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_patch_session_logging.py:28:4
27	REPO_ROOT = (
28	    subprocess.run(
29	        ["git", "rev-parse", "--show-toplevel"],
30	        stdout=subprocess.PIPE,
31	        stderr=subprocess.DEVNULL,
32	        text=True,
33	        check=True,
34	    ).stdout.strip()
35	    or os.getcwd()

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_patch_session_logging.py:89:13
88	    try:
89	        cp = subprocess.run(
90	            cmd,
91	            stdout=subprocess.PIPE,
92	            stderr=subprocess.STDOUT,
93	            text=True,
94	            check=False,
95	        )  # nosec B603,B607
96	        return (cp.returncode == 0, cp.stdout)

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/codex_precommit_bootstrap.py:27:0
26	import re
27	import subprocess
28	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_precommit_bootstrap.py:54:8
53	def sh(cmd: list[str]) -> tuple[int, str, str]:
54	    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
55	    out, err = p.communicate()

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/codex_run.py:10:0
9	import shlex
10	import subprocess
11	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_run.py:19:11
18	def run(cmd: List[str], *, cwd: Path | None = None, timeout: int | None = None, env: dict | None = None, log: Path | None = None) -> Tuple[int, str]:
19	    proc = subprocess.Popen(cmd, cwd=str(cwd) if cwd else None,
20	                            stdout=subprocess.PIPE, stderr=subprocess.STDOUT,
21	                            env=env or os.environ.copy(), text=True)
22	    try:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/codex_run_tasks.py:25:0
24	import os
25	import subprocess
26	import time

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tools/codex_run_tasks.py:94:8
93	            path.write_text(text, encoding="utf-8")
94	        except Exception:
95	            # give up silently; caller should still return non-zero to indicate failure
96	            pass
97	

--------------------------------------------------
>> Issue: [B310:blacklist] Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
   Severity: Medium   Confidence: High
   CWE: CWE-22 (https://cwe.mitre.org/data/definitions/22.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b310-urllib-urlopen
   Location: ./tools/codex_run_tasks.py:235:13
234	        )
235	        with urllib.request.urlopen(req, timeout=20) as resp:  # pragma: no cover - network
236	            code = resp.getcode()

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./tools/codex_run_tasks.py:331:15
330	    try:
331	        proc = subprocess.run(
332	            ["pytest", "-q", expr],
333	            capture_output=True,
334	            text=True,
335	            check=False,
336	        )
337	    except Exception as exc:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_run_tasks.py:331:15
330	    try:
331	        proc = subprocess.run(
332	            ["pytest", "-q", expr],
333	            capture_output=True,
334	            text=True,
335	            check=False,
336	        )
337	    except Exception as exc:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tools/codex_sqlite_align.py:29:0
28	    _codex_sqlite_auto()
29	except Exception:
30	    pass
31	import sys

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tools/codex_sqlite_align.py:351:30
350	            try:
351	                cur.execute(f"SELECT * FROM {safe} LIMIT ?", (max_rows,))
352	                rows = cur.fetchall()

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/codex_src_consolidation.py:11:0
10	import re
11	import subprocess
12	import sys

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./tools/codex_src_consolidation.py:22:12
21	    try:
22	        p = subprocess.check_output(
23	            ["git", "rev-parse", "--show-toplevel"], text=True
24	        ).strip()
25	        return Path(p)

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_src_consolidation.py:22:12
21	    try:
22	        p = subprocess.check_output(
23	            ["git", "rev-parse", "--show-toplevel"], text=True
24	        ).strip()
25	        return Path(p)

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_src_consolidation.py:95:12
94	    try:
95	        p = subprocess.run(cmd, cwd=R, text=True, capture_output=True)
96	        return (p.returncode, p.stdout, p.stderr)

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/codex_supplied_task_runner.py:19:0
18	import shlex
19	import subprocess
20	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_supplied_task_runner.py:180:11
179	def run(cmd: list[str], check: bool = False) -> subprocess.CompletedProcess:
180	    return subprocess.run(
181	        cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True, check=check
182	    )
183	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./tools/codex_supplied_task_runner.py:345:8
344	                )
345	        except Exception:
346	            continue
347	    (CODEX_DIR / "inventory.json").write_text(

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/codex_task_runner.py:21:0
20	import re
21	import subprocess
22	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_task_runner.py:47:13
46	    try:
47	        cp = subprocess.run(cmd, cwd=REPO_ROOT, timeout=timeout, capture_output=capture, text=True)
48	        return cp.returncode, cp.stdout or "", cp.stderr or ""

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/codex_workflow.py:16:0
15	import re
16	import subprocess
17	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_workflow.py:32:18
31	        if capture:
32	            out = subprocess.check_output(cmd, text=True, stderr=subprocess.STDOUT, env=env)
33	            return 0, out

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_workflow.py:34:14
33	            return 0, out
34	        ret = subprocess.call(cmd, env=env)
35	        return ret, ""

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/codex_workflow_executor.py:10:0
9	import shlex
10	import subprocess
11	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/codex_workflow_executor.py:25:11
24	    print("+", " ".join(map(shlex.quote, cmd)))
25	    return subprocess.run(cmd, check=check, env=env)
26	

--------------------------------------------------
>> Issue: [B103:set_bad_file_permissions] Chmod setting a permissive mask 0o755 on file (CI_LOCAL).
   Severity: Medium   Confidence: High
   CWE: CWE-732 (https://cwe.mitre.org/data/definitions/732.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b103_set_bad_file_permissions.html
   Location: ./tools/codex_workflow_executor.py:97:8
96	        CI_LOCAL.write_text(desired + "\n", encoding="utf-8")
97	        os.chmod(CI_LOCAL, 0o755)
98	        log_change("ci_local.sh: ensured venv-first execution of gates")

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tools/export_to_parquet.py:51:12
50	                con.execute(f"LOAD {ext};")  # nosec B608
51	            except Exception:
52	                # Installation may fail in offline environments; continue anyway.
53	                pass
54	        dataset_path = parquet_dir / "snippet"

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b608_hardcoded_sql_expressions.html
   Location: ./tools/export_to_parquet.py:59:14
58	        con.execute(
59	            f"COPY (SELECT * FROM {source_table}) TO '{dataset_sql}' "
60	            "(FORMAT PARQUET, PARTITION_BY (id))"
61	        )

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/file_integrity_audit.py:6:0
5	import pathlib
6	import subprocess
7	import sys

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./tools/file_integrity_audit.py:59:22
58	    try:
59	        git_renames = subprocess.run([
60	            'git','diff','--name-status','-M','-C','HEAD~1','HEAD'
61	        ], capture_output=True, text=True, check=False).stdout.strip()
62	    except Exception:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/file_integrity_audit.py:59:22
58	    try:
59	        git_renames = subprocess.run([
60	            'git','diff','--name-status','-M','-C','HEAD~1','HEAD'
61	        ], capture_output=True, text=True, check=False).stdout.strip()
62	    except Exception:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/install_codex_hooks.py:15:0
14	import stat
15	import subprocess
16	from pathlib import Path

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./tools/install_codex_hooks.py:28:14
27	    try:
28	        out = subprocess.run(
29	            ["git", "rev-parse", "--show-toplevel"],
30	            capture_output=True,
31	            text=True,
32	            check=True,
33	        )
34	        root = out.stdout.strip()

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/install_codex_hooks.py:28:14
27	    try:
28	        out = subprocess.run(
29	            ["git", "rev-parse", "--show-toplevel"],
30	            capture_output=True,
31	            text=True,
32	            check=True,
33	        )
34	        root = out.stdout.strip()

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tools/install_codex_hooks.py:53:4
52	        path.chmod(mode | stat.S_IXUSR | stat.S_IXGRP | stat.S_IXOTH)
53	    except Exception:
54	        # If chmod fails (e.g., on constrained filesystems), ignore but do not crash.
55	        pass
56	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tools/monitoring_integrate.py:172:12
171	                pynvml.nvmlShutdown()
172	            except Exception:
173	                pass
174	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tools/monitoring_integrate.py:292:16
291	                    self.wb.log({tag: wandb.Histogram(np_histogram=(values, bins))})
292	                except Exception:
293	                    pass
294	            if self.mlf:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tools/monitoring_integrate.py:351:16
350	                    mlflow.end_run(status="FAILED" if exc_type else "FINISHED")
351	                except Exception:
352	                    pass
353	            if self.tb:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tools/monitoring_integrate.py:357:16
356	                    self.tb.close()
357	                except Exception:
358	                    pass
359	            if self.wb:

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tools/monitoring_integrate.py:362:16
361	                    wandb.finish(exit_code=1 if exc_type else 0)
362	                except Exception:
363	                    pass
364	        except Exception as e:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./tools/monitoring_integrate.py:398:38
397	    for step in range(steps):
398	        loss = math.exp(-step / 20) + random.uniform(0, 0.02)
399	        acc = 1.0 - loss + random.uniform(0, 0.01)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./tools/monitoring_integrate.py:399:27
398	        loss = math.exp(-step / 20) + random.uniform(0, 0.02)
399	        acc = 1.0 - loss + random.uniform(0, 0.01)
400	        mon.log_scalar("train/loss", loss, step)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./tools/offline_repo_auditor.py:170:16
169	                        imports.extend([f"{base}.{n}" if base else n for n in names])
170	                except Exception:
171	                    pass
172	            elif isinstance(node, ast.FunctionDef):

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./tools/offline_repo_auditor.py:226:12
225	                    content = f.read()
226	            except Exception:
227	                continue
228	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/pip_audit_prewarm.py:6:0
5	
6	import subprocess
7	from pathlib import Path

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/pip_audit_prewarm.py:29:11
28	    print("[prewarm] running:", " ".join(cmd))
29	    return subprocess.call(cmd)
30	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/pip_audit_wrapper.py:7:0
6	import socket
7	import subprocess
8	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/pip_audit_wrapper.py:42:17
41	    try:
42	        result = subprocess.call(args)  # noqa: S603
43	    except FileNotFoundError:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/pytest_repair.py:2:0
1	#!/usr/bin/env python3
2	import pathlib, re, subprocess, sys
3	

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/pytest_repair.py:6:14
5	    try:
6	        out = subprocess.run([sys.executable,"-m","pip","show","pytest-cov"],
7	                             capture_output=True, text=True)
8	        return out.returncode == 0

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/revert_or_restore(other).py:25:0
24	import shutil
25	import subprocess
26	from pathlib import Path

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/revert_or_restore(other).py:33:11
32	def _run(cmd):
33	    return subprocess.run(cmd, cwd=ROOT, text=True, capture_output=True)
34	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/revert_or_restore.py:25:0
24	import shutil
25	import subprocess
26	from pathlib import Path

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/revert_or_restore.py:33:11
32	def _run(cmd):
33	    return subprocess.run(cmd, cwd=ROOT, text=True, capture_output=True)
34	

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/run_codex_improvements.py:7:0
6	import argparse
7	import subprocess
8	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/run_codex_improvements.py:24:15
23	    try:
24	        return subprocess.call(cmd)
25	    except Exception as exc:  # noqa: BLE001

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/run_precommit.py:9:0
8	import os
9	import subprocess
10	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/run_precommit.py:23:15
22	    try:
23	        proc = subprocess.Popen(cmd, env=env)
24	        while True:

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./tools/run_precommit.py:34:16
33	                )
34	                subprocess.call(["pre-commit", "clean"], env=env)
35	                return subprocess.call(cmd, env=env)

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/run_precommit.py:34:16
33	                )
34	                subprocess.call(["pre-commit", "clean"], env=env)
35	                return subprocess.call(cmd, env=env)

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/run_precommit.py:35:23
34	                subprocess.call(["pre-commit", "clean"], env=env)
35	                return subprocess.call(cmd, env=env)
36	            time.sleep(1.0)

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/run_supplied_task.py:330:8
329	        print("+", shlex.join(cmd))
330	        subprocess.check_call(cmd, cwd=str(ROOT))  # nosec B603,B607
331	    except subprocess.CalledProcessError as e:

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/run_supplied_task.py:350:12
349	        dirty = (
350	            subprocess.check_output(["git", "status", "--porcelain"], cwd=str(ROOT))  # nosec B603,B607
351	            .decode()

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/run_tests.py:8:0
7	import json
8	import subprocess
9	import sys

--------------------------------------------------
>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html
   Location: ./tools/run_tests.py:44:14
43	    try:
44	        out = subprocess.check_output(
45	            ["pytest", "--version", "--override-ini", "addopts=''"],
46	            text=True,
47	        )
48	        return "pytest-cov" in out

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/run_tests.py:44:14
43	    try:
44	        out = subprocess.check_output(
45	            ["pytest", "--version", "--override-ini", "addopts=''"],
46	            text=True,
47	        )
48	        return "pytest-cov" in out

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/run_tests.py:60:14
59	    try:
60	        ret = subprocess.call(cmd)
61	        if ret != 0:

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./tools/scan_config_references.py:28:12
27	                text = file.read_text(encoding="utf-8")
28	            except Exception:
29	                continue
30	            for pat in PATTERNS:

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./tools/shebang_exec_guard.py:19:8
18	            text = p.read_text(errors="ignore")
19	        except Exception:
20	            continue
21	        if any(rx.search(text) for rx in PATTERNS):

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tools/test_auto_analyze_errors.py:36:4
35	    ]
36	    assert result == expected
37	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tools/test_auto_analyze_errors.py:62:4
61	    ]
62	    assert result_all == expected_all
63	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./tools/test_auto_analyze_errors.py:72:4
71	    ]
72	    assert result_unanswered == expected_unanswered

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/unify_logging_canonical.py:10:0
9	import re
10	import subprocess
11	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/unify_logging_canonical.py:79:8
78	def sh(cmd: List[str]) -> Tuple[int, str, str]:
79	    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
80	    out, err = p.communicate()

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/verify_data_paths.py:10:0
9	
10	import subprocess
11	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/verify_data_paths.py:21:8
20	    try:
21	        subprocess.check_call([sys.executable, str(snap)])
22	        subprocess.check_call([sys.executable, str(parq)])

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/verify_data_paths.py:22:8
21	        subprocess.check_call([sys.executable, str(snap)])
22	        subprocess.check_call([sys.executable, str(parq)])
23	    except subprocess.CalledProcessError as exc:

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./tools/workflow_merge.py:16:0
15	import shutil
16	import subprocess
17	import sys

--------------------------------------------------
>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html
   Location: ./tools/workflow_merge.py:59:11
58	def run(cmd: List[str], check: bool = False) -> subprocess.CompletedProcess:
59	    return subprocess.run(
60	        cmd, cwd=str(REPO), text=True, capture_output=True, check=check
61	    )
62	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./tools/workflow_merge.py:121:8
120	            txt = p.read_text(encoding="utf-8", errors="ignore")
121	        except Exception:
122	            continue
123	        total += txt.count(name_fragment)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./training/checkpoint_manager.py:164:16
163	                    self._best_file.unlink()
164	                except Exception:
165	                    pass
166	            os.symlink(path.name, self._best_file)

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_calls.html#b311-random
   Location: ./training/data_utils.py:32:14
31	        items = list(seq)
32	        rnd = random.Random(seed)
33	        rnd.shuffle(items)

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./training/data_utils.py:144:8
143	            )
144	        except Exception:
145	            # Best-effort cache; ignore failures
146	            pass
147	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./training/data_utils.py:190:12
189	                    return list(data["train"]), list(data["val"])
190	            except Exception:
191	                # fall through to recompute
192	                pass
193	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./training/data_utils.py:215:8
214	            )
215	        except Exception:
216	            # Best-effort caching; ignore failures
217	            pass
218	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./training/data_utils.py:242:12
241	                    ids = out["input_ids"]  # type: ignore[index]
242	            except Exception:
243	                # Skip samples that fail tokenization
244	                continue
245	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./training/data_utils.py:288:8
287	            np.savez(str(path / f"{i}.npz"), allow_pickle=False, **arrs)
288	        except Exception:
289	            # Skip samples that fail to serialize
290	            continue
291	

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b112_try_except_continue.html
   Location: ./training/data_utils.py:304:8
303	            yield {k: torch.tensor(data[k]) for k in data.files}
304	        except Exception:
305	            # Skip unreadable/corrupted shards
306	            continue
307	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./training/engine_hf_trainer.py:405:8
404	            self.close()
405	        except Exception:
406	            pass
407	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./training/engine_hf_trainer.py:594:8
593	    if torch.cuda.is_available() and dtype in {"fp32", "fp16", "bf16"}:
594	        assert (
595	            torch.backends.cudnn.deterministic
596	        ), "cuDNN must be deterministic; call set_reproducible()"
597	    log_env_info(output_dir / "env.json")

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./training/engine_hf_trainer.py:600:4
599	        snapshot_hydra_config({"model_name": model_name, "seed": seed}, output_dir)
600	    except Exception:
601	        pass
602	    resume_ckpt = Path(resume_from) if resume_from else None

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./training/engine_hf_trainer.py:823:4
822	        _codex_log_all(int(metrics.get("global_step", 0)), log_vals, loggers)
823	    except Exception:
824	        pass
825	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./training/engine_hf_trainer.py:835:8
834	            writer.close()
835	        except Exception:
836	            pass
837	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b101_assert_used.html
   Location: ./training/functional_training.py:210:8
209	    if device.type == "cuda" and cfg.dtype in {"fp32", "fp16", "bf16"}:
210	        assert (
211	            torch.backends.cudnn.deterministic
212	        ), "cuDNN must be deterministic; call set_reproducible()"
213	    loggers: CodexLoggers = _codex_logging_bootstrap(argparse.Namespace())

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./training/functional_training.py:224:8
223	            model = get_peft_model(model, lcfg)
224	        except Exception:
225	            pass
226	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./training/functional_training.py:251:8
250	                load_rng_state(rng)
251	        except Exception:
252	            pass
253	

--------------------------------------------------
>> Issue: [B110:try_except_pass] Try, Except, Pass detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b110_try_except_pass.html
   Location: ./training/functional_training.py:411:12
410	                _codex_log_all(global_step, {"epsilon": float(eps)}, loggers)
411	            except Exception:
412	                pass
413	    return {"global_step": global_step, "history": history, "best_val": best_val}

--------------------------------------------------

Code scanned:
	Total lines of code: 43378
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 23

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 1400
		Medium: 19
		High: 1
	Total issues (by confidence):
		Undefined: 0
		Low: 5
		Medium: 24
		High: 1391
Files skipped (2):
	./codex_script.py (syntax error while parsing AST from file)
	./tools/codex_seq_runner.py (syntax error while parsing AST from file)

detect-secrets (pre-commit hook).........................................Failed
- hook id: detect-secrets
- exit code: 3
- files were modified by this hook

The baseline file was updated.
Probably to keep line numbers of secrets up-to-date.
Please `git add .secrets.baseline`, thank you.


The baseline file was updated.
Probably to keep line numbers of secrets up-to-date.
Please `git add .secrets.baseline`, thank you.

safety...................................................................Failed
- hook id: python-safety-dependencies-check
- exit code: 64

[33m[1m+===========================================================================================================================================================================================+[0m


[31m[1mDEPRECATED: [0m[33m[1mthis command (`check`) has been DEPRECATED, and will be unsupported beyond 01 June 2024.[0m


[32mWe highly encourage switching to the new [0m[32m[1m`scan`[0m[32m command which is easier to use, more powerful, and can be set up to mimic the deprecated command if required.[0m


[33m[1m+===========================================================================================================================================================================================+[0m


+==============================================================================================================================+

                               /$$$$$$            /$$
                              /$$__  $$          | $$
           /$$$$$$$  /$$$$$$ | $$  \__//$$$$$$  /$$$$$$   /$$   /$$
          /$$_____/ |____  $$| $$$$   /$$__  $$|_  $$_/  | $$  | $$
         |  $$$$$$   /$$$$$$$| $$_/  | $$$$$$$$  | $$    | $$  | $$
          \____  $$ /$$__  $$| $$    | $$_____/  | $$ /$$| $$  | $$
          /$$$$$$$/|  $$$$$$$| $$    |  $$$$$$$  |  $$$$/|  $$$$$$$
         |_______/  \_______/|__/     \_______/   \___/   \____  $$
                                                          /$$  | $$
                                                         |  $$$$$$/
  by safetycli.com                                        \______/

+==============================================================================================================================+

 [1mANNOUNCEMENTS[0m 

[33m  * Warning: duckdb, transformers, datasets, sentencepiece, accelerate, peft, pydantic, nbformat and nbconvert are unpinned.[0m 
[33m    Safety by default does not report on potential vulnerabilities in unpinned packages. It is recommended to pin your[0m 
[33m    dependencies unless this is a library meant for distribution. To learn more about reporting these, specifier range[0m 
[33m    handling, and options for scanning unpinned packages visit https://docs.pyup.io/docs/safety-range-specs[0m 

+==============================================================================================================================+

 [1mREPORT[0m 

  Safety [1mv3.6.1[0m is scanning for [1mVulnerabilities[0m[1m...[0m
[1m  Scanning dependencies[0m in your [1mfiles:[0m

  -> requirements.lock
  -> codex_digest/requirements.txt
  -> requirements.txt
  -> docs/requirements.txt

  Using [1mopen-source vulnerability database[0m
[1m  Found and scanned 151 packages[0m
  Timestamp [1m2025-09-10 13:54:07[0m
[1m  3[0m[1m vulnerabilities reported[0m
[1m  25[0m[1m vulnerabilities ignored[0m

+==============================================================================================================================+
 [1mVULNERABILITIES REPORTED[0m 
+==============================================================================================================================+

-> Vulnerability found in mkdocs-material version 9.5.27
[1m   Vulnerability ID: [0m72715
[32m[1m   This vulnerability is being ignored.[0m
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/72715/97c[0m


-> Vulnerability may be present given that your datasets install specifier is >=0
[1m   Vulnerability ID: [0m65477
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/65477/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m51450
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/51450/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m51396
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/51396/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m77149
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/77149/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m77714
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/77714/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m77990
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/77990/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m71049
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/71049/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m71048
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/71048/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m71037
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/71037/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m40187
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/40187/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m71601
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/71601/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m74882
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/74882/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m76262
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/76262/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m65215
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/65215/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m65398
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/65398/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m78688
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/78688/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m77988
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/77988/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m77985
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/77985/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m64402
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/64402/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m78153
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/78153/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m77986
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/77986/97c[0m


-> Vulnerability may be present given that your transformers install specifier is >=4.3.3
[1m   Vulnerability ID: [0m60235
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/60235/97c[0m


-> Vulnerability may be present given that your duckdb install specifier is >=0.10
[1m   Vulnerability ID: [0m77524
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/77524/97c[0m


-> Vulnerability may be present given that your duckdb install specifier is >=0.10
[1m   Vulnerability ID: [0m76355
[32m[1m   This vulnerability is being ignored.[0m
[1m   Reason: [0mThis vulnerability is being ignored due to the 'ignore-unpinned-requirements' flag (default True). To
   change this, set 'ignore-unpinned-requirements' to False under 'security' in your policy file. See
   https://docs.pyup.io/docs/safety-20-policy-file for more information.
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/76355/97c[0m


[31m-> Vulnerability found in starlette version 0.37.2[0m
[1m   Vulnerability ID: [0m73725
[1m   Affected spec: [0m<0.40.0
[1m   ADVISORY: [0mAffected versions of the Starlette framework are vulnerable to Denial of Service (DoS) attacks due to
   the lack of restrictions on multipart part sizes. The vulnerability resides in the MultiPartParser class, which previously
   did not enforce size limits on incoming data. This issue is mitigated by introducing a max_part_size constraint and raises
   exceptions when limits are exceeded.
[1m   CVE-2024-47874[0m
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/73725/97c[0m
   To ignore this vulnerability, use PyUp vulnerability id 73725 in safety’s ignore command-line argument or add the ignore
   to your safety policy file.


[31m-> Vulnerability found in starlette version 0.37.2[0m
[1m   Vulnerability ID: [0m78279
[1m   Affected spec: [0m<0.47.2
[1m   ADVISORY: [0mStarlette is a lightweight ASGI (Asynchronous Server Gateway Interface) framework/toolkit, designed for
   building async web services in Python. In versions 0.47.1 and below, when parsing a multi-part form with large files
   (greater than the default max spool size) starlette will block the main thread to roll the file over to disk. This blocks
   the event thread which means the application can't accept new connections. The UploadFile code has a minor bug where
   instead of just checking for self._in_memory, the logic should also check if the additional bytes will cause a rollover.
   The vulnerability is fixed in version 0.47.2.
[1m   CVE-2025-54121[0m
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/78279/97c[0m
   To ignore this vulnerability, use PyUp vulnerability id 78279 in safety’s ignore command-line argument or add the ignore
   to your safety policy file.


[31m-> Vulnerability found in mkdocs-material version 9.5.27[0m
[1m   Vulnerability ID: [0m72715
[1m   Affected spec: [0m<9.5.32
[1m   ADVISORY: [0mMKDocs Material addresses an RXSS vulnerability found in deep links within search results.
[1m   PVE-2024-72715[0m
[1m   For more information about this vulnerability, visit [0mhttps://data.safetycli.com/v/72715/97c[0m
   To ignore this vulnerability, use PyUp vulnerability id 72715 in safety’s ignore command-line argument or add the ignore
   to your safety policy file.


+==============================================================================================================================+
   [32m[1mREMEDIATIONS[0m

  3 vulnerabilities were reported in 2 packages. For detailed remediation & fix recommendations, upgrade to a commercial 
  license. 

+==============================================================================================================================+

 Scan was completed. 3 vulnerabilities were reported. 25 vulnerabilities from 4 packages were ignored. 

+==============================================================================================================================+[0m


[33m[1m+===========================================================================================================================================================================================+[0m


[31m[1mDEPRECATED: [0m[33m[1mthis command (`check`) has been DEPRECATED, and will be unsupported beyond 01 June 2024.[0m


[32mWe highly encourage switching to the new [0m[32m[1m`scan`[0m[32m command which is easier to use, more powerful, and can be set up to mimic the deprecated command if required.[0m


[33m[1m+===========================================================================================================================================================================================+[0m


usage: safety_check [-h] [--full-report] [--short-report] [--ignore IGNORE] files [files ...]
safety_check: error: Unsupported mix of pyproject.toml & requirements files found: ['tests/test_requirements_lock.py', 'requirements/base.txt', 'pyproject.toml', 'requirements-dev.txt']


[33m[1m+===========================================================================================================================================================================================+[0m


[31m[1mDEPRECATED: [0m[33m[1mthis command (`check`) has been DEPRECATED, and will be unsupported beyond 01 June 2024.[0m


[32mWe highly encourage switching to the new [0m[32m[1m`scan`[0m[32m command which is easier to use, more powerful, and can be set up to mimic the deprecated command if required.[0m


[33m[1m+===========================================================================================================================================================================================+[0m


+==============================================================================================================================+

                               /$$$$$$            /$$
                              /$$__  $$          | $$
           /$$$$$$$  /$$$$$$ | $$  \__//$$$$$$  /$$$$$$   /$$   /$$
          /$$_____/ |____  $$| $$$$   /$$__  $$|_  $$_/  | $$  | $$
         |  $$$$$$   /$$$$$$$| $$_/  | $$$$$$$$  | $$    | $$  | $$
          \____  $$ /$$__  $$| $$    | $$_____/  | $$ /$$| $$  | $$
          /$$$$$$$/|  $$$$$$$| $$    |  $$$$$$$  |  $$$$/|  $$$$$$$
         |_______/  \_______/|__/     \_______/   \___/   \____  $$
                                                          /$$  | $$
                                                         |  $$$$$$/
  by safetycli.com                                        \______/

+==============================================================================================================================+

 [1mREPORT[0m 

  Safety [1mv3.6.1[0m is scanning for [1mVulnerabilities[0m[1m...[0m
[1m  Scanning dependencies[0m in your [1mfiles:[0m

  -> services/api/requirements.txt

  Using [1mopen-source vulnerability database[0m
[1m  Found and scanned 3 packages[0m
  Timestamp [1m2025-09-10 13:54:06[0m
[1m  0[0m[1m vulnerabilities reported[0m
[1m  0[0m[1m vulnerabilities ignored[0m
+==============================================================================================================================+

 [32m[1mNo known security vulnerabilities reported.[0m 

+==============================================================================================================================+[0m


[33m[1m+===========================================================================================================================================================================================+[0m


[31m[1mDEPRECATED: [0m[33m[1mthis command (`check`) has been DEPRECATED, and will be unsupported beyond 01 June 2024.[0m


[32mWe highly encourage switching to the new [0m[32m[1m`scan`[0m[32m command which is easier to use, more powerful, and can be set up to mimic the deprecated command if required.[0m


[33m[1m+===========================================================================================================================================================================================+[0m

pip-audit................................................................Passed
Detect secrets...........................................................Failed
- hook id: detect-secrets
- exit code: 1

Your baseline file (.secrets.baseline) is unstaged.
`git add .secrets.baseline` to fix this.
Your baseline file (.secrets.baseline) is unstaged.
`git add .secrets.baseline` to fix this.
Your baseline file (.secrets.baseline) is unstaged.
`git add .secrets.baseline` to fix this.
Your baseline file (.secrets.baseline) is unstaged.
`git add .secrets.baseline` to fix this.
Your baseline file (.secrets.baseline) is unstaged.
`git add .secrets.baseline` to fix this.

fix end of files.........................................................Failed
- hook id: end-of-file-fixer
- exit code: 1
- files were modified by this hook

Fixing tools/install_codex_hooks.py

trim trailing whitespace.................................................Passed
Block large generated files in .codex....................................Passed
check licenses...........................................................Passed
