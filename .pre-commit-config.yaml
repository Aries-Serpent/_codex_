minimum_pre_commit_version: "3.7.0"
default_install_hook_types: [pre-commit, pre-push, prepare-commit-msg]
exclude: '^\\.codex/'
repos:
  - repo: local
    hooks:
      - id: mypy
        name: MyPy (Static Typing)
        entry: mypy
        language: system
        pass_filenames: true
        types: [python]
        args: ["--config-file=pyproject.toml"]
      - id: security-audit
        name: Pip Audit (Offline Vulnerability Scan)
        entry: python tools/pip_audit_wrapper.py --offline
        language: system
        pass_filenames: false
      - id: bandit
        name: Bandit Security Checks
        entry: bandit -q -c bandit.yaml -r src/
        language: system
        pass_filenames: false
        types: [python]
      - id: semgrep
        name: Semgrep Security Audit
        entry: semgrep --config=semgrep_rules/python-basic.yml --error --quiet
        language: system
        pass_filenames: false
        types: [python]
      - id: validate-fences
        name: validate markdown fences
        entry: python tools/validate_fences.py --strict-inner
        language: system
        pass_filenames: true
        types: [markdown]
        exclude: '^tests/data/validate_fences_sample\.md$'
      - id: block-env-files
        name: block committed secret env files
        entry: bash
        language: system
        pass_filenames: false
        always_run: true
        args:
          - -lc
          - |
            while IFS= read -r path; do
              if [ -z "$path" ]; then
                continue
              fi

              base="$(basename "$path")"
              if [ "$base" = ".env.example" ]; then
                continue
              fi

              case "$base" in
                .env|.env.*|.envrc|.envrc.*|*.secret|*.secrets|*.vault)
                  echo "[secrets] refusing to commit $path"
                  echo "Create a local copy from .env.example instead of committing secrets."
                  exit 1
                  ;;
              esac
            done < <(git diff --cached --name-only --diff-filter=ACM)
      - id: codex-block-large-generated
        name: Block large generated files in .codex
        entry: python tools/precommit_block_large.py
        language: system
        pass_filenames: true
      - id: check-licenses
        name: check licenses
        entry: python scripts/check_licenses.py
        language: system
        pass_filenames: false
      - id: ci-guard
        name: Guard against unintended CI workflows
        entry: bash
        language: system
        pass_filenames: false
        args:
          - -lc
          - |
            if [ "${CODEX_ALLOW_CI:-0}" = "1" ]; then
              python tools/ci_guard.py
            else
              echo "[ci-guard] skipped (set CODEX_ALLOW_CI=1 to run)"
            fi
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.9
    hooks:
      - id: ruff
      - id: ruff
        name: ruff (import sort fix)
        args: ["--select", "I", "--fix"]
      - id: ruff-format
