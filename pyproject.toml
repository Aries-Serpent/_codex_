[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E501"]

[tool.ruff.lint.isort]
known-first-party = ["codex"]

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.isort]
profile = "black"

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests._codex_introspect"
ignore_errors = true

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
description = "Codex utilities and scripts"
name = "codex"
version = "0.1.0"
authors = [{ name = "Aries-Serpent" }]
requires-python = ">=3.10"
readme = "README.md"
dependencies = ["transformers>=4.41", "torch", "hydra-core>=1.3"]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["codex*"]

[project.optional-dependencies]
cli = ["typer>=0.9", "rich>=13"]
tracking = ["mlflow>=2"]
peft = ["peft>=0.10.0"]
dev = ["ruff>=0.5", "pytest>=7", "duckdb>=1.0", "pytest-cov", "detect-secrets", "nox"]

[project.scripts]
codex-import-ndjson = "codex.logging.import_ndjson:main"
codex-ml-cli = "codex_ml.cli.main:main"
codex-train = "codex_script:main"

# Coverage configuration
[tool.coverage.run]
branch = true
parallel = true

# BEGIN: CODEX_PYTEST_COVERAGE
[tool.pytest.ini_options]
addopts = "--cov=src --cov-report=term-missing --cov-fail-under=80"
# END: CODEX_PYTEST_COVERAGE
# BEGIN: CODEX_IFACE_ENTRYPOINTS
# [project.entry-points."codex_ml.tokenizers"]
# mytokenizer = "yourpkg.tokenizers.hf:HFTokenizer"
# [project.entry-points."codex_ml.reward_models"]
# simple = "yourpkg.rewards.simple:SimpleReward"
# [project.entry-points."codex_ml.rl_agents"]
# ppo = "yourpkg.rl.ppo:PPOAgent"
# END: CODEX_IFACE_ENTRYPOINTS
