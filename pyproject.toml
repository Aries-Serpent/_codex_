[build-system]
requires = ["setuptools>=67", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "codex-ml"
description = "Codex ML training, evaluation, and plugin framework"
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
authors = [
  { name = "Aries Serpent" }
]
keywords = ["ml", "training", "evaluation", "plugins", "hydra", "cli"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
# Version may be injected by CI or read dynamically.
# If you keep a __version__ in package, uncomment the next line and remove the explicit version field.
# dynamic = ["version"]
version = "0.0.0"
dependencies = [
  "datasets>=2.16",
  "duckdb>=0.10",
  "hydra-core>=1.3",
  "numpy>=1.24",
  "omegaconf>=2.3",
  "pandas>=2.0",
  "peft>=0.10",
  "PyYAML>=6.0",
  "pydantic>=2.11",
  "pydantic-settings>=2.2",
  "sentencepiece>=0.1.99",
  "torch>=2.1",
  "transformers>=4.30",
  "typer>=0.12",
]

[project.optional-dependencies]
analysis = ["libcst>=1.0", "parso>=0.10"]
configs = ["hydra-core>=1.3", "omegaconf>=2.3", "PyYAML>=6.0"]
logging = ["duckdb>=0.10", "jsonschema>=4.18", "pandas>=2.0"]
ml = [
  "datasets>=2.16",
  "peft>=0.10",
  "sentencepiece>=0.1.99",
  "torch>=2.1",
  "transformers>=4.30",
]
monitoring = ["prometheus-client>=0.14", "psutil>=5.9", "pynvml>=11.5"]
ops = ["requests>=2.31"]
symbolic = ["sentencepiece>=0.1.99", "tokenizers>=0.14"]
tracking = ["mlflow>=2.9", "wandb>=0.15"]

[project.scripts]
# Canonical entrypoints aligned with src/codex_ml/cli modules
codex-train = "codex_ml.cli.entrypoints:train_main"
codex-eval = "codex_ml.cli.entrypoints:eval_main"
codex-list-plugins = "codex_ml.cli.list_plugins:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["codex_ml*"]
exclude = []

[tool.setuptools.package-data]
# Include Jinja templates and Markdown docs if any package needs them at runtime
codex_ml = ["**/*.md", "**/*.jinja2", "**/*.j2"]

[tool.setuptools.exclude-package-data]
codex_ml = ["**/tests/*", "torch/*"]

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311"]

[tool.isort]
profile = "black"
line_length = 100

[tool.pytest.ini_options]
addopts = "-q"

[tool.coverage.run]
branch = true
source = ["src/codex_ml"]

[tool.coverage.report]
show_missing = true
skip_covered = true
