# PEP 621: Project metadata in pyproject.toml
# https://peps.python.org/pep-0621/
[build-system]
requires = ["setuptools>=69", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "codex-ml"
version = "0.1.0"
description = "Codex ML utilities and training CLI (offline-friendly)"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [{ name = "Codex Team" }]
keywords = ["ml", "nlp", "training", "evaluation", "codex"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]

# Keep the default install lightweight; heavier ML dependencies live under extras.
dependencies = [
  "omegaconf>=2.3",
  "hydra-core>=1.3",
]

[project.optional-dependencies]
ml = [
  "torch>=2.1; platform_system != 'Windows'",
  "transformers>=4.39",
  "accelerate>=0.27",
  "peft>=0.8",
]
logging = [
  "tensorboard>=2.14",
  "mlflow>=2.11",
  "wandb>=0.16",
]
monitoring = ["psutil>=5.9"]
gpu = ["nvidia-ml-py3>=7.352.0"]
perf = ["numpy>=1.24; python_version<'3.13'", "mlflow>=2.0"]
ops = ["requests>=2.31", "PyJWT>=2.8"]
dev = [
  "pytest>=7.4",
  "pytest-cov>=4.1",
  "pytest-randomly>=3.15",
  "hypothesis>=6.100",
  "ruff>=0.4",
  "jsonschema>=4.0",
]
# Preserve legacy extras used in automation by aliasing them to the new groups.
tokenizer = ["sentencepiece>=0.1.99"]
train = [
  "torch>=2.1; platform_system != 'Windows'",
  "transformers>=4.39",
  "accelerate>=0.27",
  "peft>=0.8",
  "mlflow>=2.11",
]
test = [
  "pytest>=7.0",
  "pytest-cov>=4.0",
  "hydra-core>=1.3",
  "hypothesis>=6.100",
]
cli = [
  "typer>=0.9",
  "click>=8.1",
]

[project.scripts]
codex = "codex.cli:cli"
codex-import-ndjson = "codex.logging.import_ndjson:main"
codex-ml-cli = "codex_ml.cli.main:cli"
codex-train = "codex_ml.cli.hydra_main:main"
codex-tokenizer = "tokenization.cli:app"
codex-generate = "codex_ml.cli.generate:main"
codex-infer = "codex_ml.cli.infer:main"
codex-validate-config = "codex_ml.cli.validate:main"
codex-list-plugins = "codex_ml.cli.list_plugins:main"
codex-perf = "codex_ml.perf.bench:main"
codex-ndjson = "codex_utils.cli.ndjson_summary:main"
codex-offline-bootstrap = "codex_ml.cli.offline_bootstrap:main"
fence-check = "tools.validate_fences:main"

[project.entry-points."codex_ml.tokenizers"]
hf = "codex_ml.registry.tokenizers:_build_hf_tokenizer"

[project.entry-points."codex_ml.models"]
minilm = "codex_ml.models.registry:_build_minilm"
bert_base_uncased = "codex_ml.models.registry:_build_default_bert"

[project.entry-points."codex_ml.metrics"]
token_accuracy = "codex_ml.metrics.registry:token_accuracy"
ppl = "codex_ml.metrics.registry:perplexity"
exact_match = "codex_ml.metrics.registry:exact_match"
f1 = "codex_ml.metrics.registry:f1"

[project.entry-points."codex_ml.data_loaders"]
lines = "codex_ml.data.registry:load_line_dataset"

[project.entry-points."codex_ml.trainers"]
functional = "codex_ml.registry.trainers:_load_functional_trainer"

[project.urls]
Homepage = "https://github.com/Aries-Serpent/_codex_"
Documentation = "https://github.com/Aries-Serpent/_codex_/tree/main/docs"
Issues = "https://github.com/Aries-Serpent/_codex_/issues"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]           # src/ layout for reliable imports in tests/ and tooling
# Include all historical package prefixes so console scripts keep their imports.
include = [
  "codex_ml*",
  "codex*",
  "tokenization*",
  "hydra_extra*",
  "tools*",
  "security*",
]
namespaces = false

[tool.setuptools.package-data]
"codex_ml" = ["configs/**/*.yaml"]

# Keep tooling blocks minimal; repo may already have dedicated config files.
[tool.ruff]
target-version = "py310"
line-length = 100
src = ["src", "tests", "tools"]

[tool.ruff.lint]
select = ["E", "F", "I", "N", "UP", "B"]
ignore = []
fixable = ["ALL"]

[tool.black]
target-version = ["py310"]
line-length = 100

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["codex_ml", "codex", "security"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
combine_as_imports = true

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
warn_unused_configs = true
warn_redundant_casts = true
check_untyped_defs = true
files = "src/security,tests/security,tests/deployment"


[[tool.mypy.overrides]]
module = ["codex_ml.*"]
ignore_errors = true


[[tool.mypy.overrides]]
module = ["codex_ml.pipeline"]
ignore_errors = true
