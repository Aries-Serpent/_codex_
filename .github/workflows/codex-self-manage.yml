name: codex-self-manage
on:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  ci:
    runs-on:
    - self-hosted
    - linux
    - codex
    permissions:
      contents: read
      security-events: write
    steps:
    - name: Checkout
      uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
      with:
        python-version: '3.12'
    - name: Cache pip
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-py-${{ hashFiles('**/requirements*.txt') }}-${{ hashFiles('**/pyproject.toml',
          '**/poetry.lock') }}
    - name: Install project + tools
      run: 'python -m pip install -U pip

        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

        pip install -e .

        pip install pre-commit pytest coverage pip-audit || true

        if [ -f pyproject.toml ]; then python -m pip install poetry; fi

        if [ -f poetry.lock ]; then poetry install --no-interaction --no-ansi; fi

        '
    - name: Run pre-commit
      uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd
      with:
        extra_args: --all-files
    - name: Tests (with coverage)
      run: 'coverage run -m pytest -q

        coverage xml

        '
    - name: Dependency audit (pip-audit)
      run: 'pip-audit -r requirements.txt || true

        pip-audit || true

        '
    - name: Codex CLI audit (log)
      run: python tools/codex_cli.py audit
      env:
        CODEX_CLI_SKIP_PRECOMMIT: '1'
        CODEX_CLI_SKIP_TESTS: '1'
    if: ${{ false }}
