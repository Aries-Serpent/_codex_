
openapi: 3.0.3
info:
  title: Internal Tools API (ITA)
  version: "0.1.0"
  description: >
    Contract-first API used by both Codex and Copilot. Destructive endpoints require
    `confirm=true` and support `dry_run=true`. Every request must include
    `X-API-Key` header (short-lived) and `X-Request-Id` for traceability.

servers:
  - url: http://localhost:8080

security:
  - ApiKeyAuth: []

paths:
  /kb/search:
    post:
      summary: Retrieve knowledge snippets with citations
      operationId: kbSearch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [query]
              properties:
                query:
                  type: string
                top_k:
                  type: integer
                  minimum: 1
                  maximum: 20
                  default: 5
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        snippet: { type: string }
                        source: { type: string }
                        score:  { type: number }
        "401": { description: Unauthorized }
        "429": { description: Rate limited }

  /repo/hygiene:
    post:
      summary: Lint/format/scan an incoming diff
      operationId: repoHygiene
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [diff]
              properties:
                diff:
                  type: string
                checks:
                  type: array
                  items:
                    type: string
                    enum: [lint, format, secrets, license]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  issues:
                    type: array
                    items:
                      type: object
                      properties:
                        type: { type: string }
                        path: { type: string }
                        message: { type: string }
                        severity: { type: string, enum: [info, warn, error] }

  /tests/run:
    post:
      summary: Run focused tests by package/file/pattern
      operationId: testsRun
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [targets]
              properties:
                targets:
                  type: array
                  items: { type: string }
                timeout_s:
                  type: integer
                  default: 300
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary:
                    type: object
                    properties:
                      total: { type: integer }
                      passed: { type: integer }
                      failed: { type: integer }
                      duration_s: { type: number }
                  failures:
                    type: array
                    items:
                      type: object
                      properties:
                        name: { type: string }
                        message: { type: string }

  /git/create-pr:
    post:
      summary: Create or update a Pull Request (guarded by confirm/dry_run)
      operationId: gitCreatePr
      parameters:
        - in: query
          name: confirm
          schema: { type: boolean, default: false }
        - in: query
          name: dry_run
          schema: { type: boolean, default: true }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [repo, title, body, base, head]
              properties:
                repo: { type: string, example: "org/repo" }
                title: { type: string }
                body: { type: string }
                base: { type: string }
                head: { type: string }
                labels:
                  type: array
                  items: { type: string }
      responses:
        "200":
          description: Created/Simulated
          content:
            application/json:
              schema:
                type: object
                properties:
                  simulated: { type: boolean }
                  pr_url: { type: string, nullable: true }
                  message: { type: string }
        "412":
          description: Precondition required (confirm=true missing)
        "401":
          description: Unauthorized

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
